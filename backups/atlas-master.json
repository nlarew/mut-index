{
    "url": "https://docs.atlas.mongodb.com/",
    "includeInGlobalSearch": false,
    "documents": [
        {
            "slug": "/additional-resources.html",
            "title": "Videos & Other Resources",
            "headings": [
                "Videos & Other Resources\u00b6"
            ],
            "text": "Videos & Other Resources\u00b6 The following resources are also available from MongoDB: Tutorial Series [Video]: Getting Started with MongoDB Atlas MongoDB University Course: Getting Started with MongoDB Atlas. \u2190 Commands Available Only in Free Tier Clusters \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "The following resources are also available from MongoDB:",
            "tags": ""
        },
        {
            "slug": "/alert-resolutions.html",
            "title": "Alert Resolutions",
            "headings": [
                "Alert Resolutions\u00b6"
            ],
            "text": "Monitoring and Alerts > Alert Resolutions Alert Resolutions\u00b6 This section includes possible suggestions for alert resolutions. Query Targeting \u2190 Alert Conditions Query Targeting \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "This section includes possible suggestions for alert resolutions.",
            "tags": ""
        },
        {
            "slug": "/api.html",
            "title": "API",
            "headings": [
                "API\u00b6",
                "HTTP Methods\u00b6",
                "JSON\u00b6",
                "Linking\u00b6",
                "Lists\u00b6",
                "Envelopes\u00b6",
                "Pretty Printing\u00b6",
                "Response Codes\u00b6",
                "Errors\u00b6",
                "Group ID\u00b6",
                "Authentication\u00b6",
                "Rate Limiting\u00b6"
            ],
            "text": "API\u00b6 On this page HTTP Methods JSON Linking Lists Envelopes Pretty Printing Response Codes Errors Group ID Authentication Rate Limiting The Atlas API follows the principles of the REST architectural style to expose a number of internal resources which enable programmatic access to Atlas\u2018s features. As with changes made through the Atlas web interface, changes made through the API are subject to Atlas billing. If you incur charges, you must have a valid credit card on file with Atlas or risk having your account locked. The API has the following features: JSON entities - All entities are expressed in JSON. Digest authentication - To ensure that your API key is never sent over the network, API requests are authenticated using HTTP Digest Authentication. Browsable interface - Using a consistent linking mechanism, you can browse the entire API by starting at the root resource and following links to related resources. Security - In addition to Digest Authentication, the API is only accessible via HTTPS, and certain calls requiring even more security are protected by user-defined whitelists. Further, an API user\u2019s capabilities are restricted by their assigned role(s). For example, a user with the Read Only role within a particular group is not allowed to modify any resources within that group. HTTP Methods\u00b6 All resources support a subset of these common HTTP Methods: GET - Retrieve the JSON representation of a resource. POST - Create a new resource using the provided JSON representation. PUT - Replace a resource with the provided JSON representation. PATCH - Update the specified fields in a resource using the provided JSON representation. DELETE - Remove a resource. HEAD - Returns the response header without the JSON representation of the resource. JSON\u00b6 All entities are represented in JSON. The following rules and conventions apply: Content Type Request Header When sending JSON to the server via POST or PUT, make sure to specify the correct content type request header: Content-Type: application/json Invalid Fields Invalid fields are rejected rather than ignored. If, for example, you attempt to create a new entity and misspell one of the fields, or if you attempt to update an existing entity and include a field that cannot be modified, the server responds with a 400 status code and an error message stating which field was invalid. ISO-8601-Formatted Dates All dates are returned as ISO-8601-formatted strings designated in UTC. When sending dates to the server (i.e., as query parameters or fields in POST or PATCH request entities), use ISO-8601-formatted dates. If you do not specify a time zone, UTC is assumed. However, it is highly recommended that you include a time zone designator to avoid any ambiguity. BSON Timestamps In some cases, a timestamp is returned as a BSON timestamp, most notably in the backup resources. These are represented in JSON documents as an object with two fields: date, which is an ISO-8601-formatted date string in UTC with granularity to the second, and increment a 32-bit integer. Field Names for Fields with Numbers Fields that contain numeric values in a particular unit will be named so as to disambiguate the unit being used. Empty Fields Fields that do not have a current value are returned with an appropriate default value. Fields that do not have a sensible default value are omitted from the entity. Field Order The fields in the JSON documents returned by the server are in no particular order, and the order may change. Do not depend on the order of the fields. Linking\u00b6 Each resource includes one or more links to sub-resources and/or related resources. Links are placed in the links field of an entity, which is an array of link relation objects. Each link relation has two fields: rel - Name (or type) of the relation. Many of these are considered Extension Relation Types and are prefixed by http://mms.mongodb.com. href - The target URL. All entities include at least one link relation called self, which is simply its own URL. When an entity is part of a list, then it only includes the self link relation. For more information, refer to the Web Linking Specification. Note that although the specification describes a format for including links in the HTTP response headers, doing so is not a requirement. To make the API easily browsable, it includes the links in the response body rather than in the response headers. Lists\u00b6 Some resources return a list of entities. When a list of entities is expected in a response, the results are returned in batches bounded by two query parameters: pageNum - Page number (1-based). Defaults to 1 if not specified. itemsPerPage - Maximum number of items to return, up to a maximum of 100. Defaults to 100 if not specified. The response entity contains three fields: totalCount - The total number of items in the entire result set. results - The result set, which is an array of entity documents. links - Contains one to three link relations: previous for the previous page of results (omitted for the first page); next for the next page of results (omitted for the last page); and self for the current page (always present). If you make a request for a list of entities and there are no results, then the API responds with a 200 status code and the results array is empty. It does not respond with a 404 in this case, since the list of entities may not be empty at some point in the future. However, if you request a list of entities in a context that does not exist (e.g., the list of hosts for a non-existent group), then this does result in a 404 response status. Envelopes\u00b6 Some clients might not be able to access the HTTP response headers and/or status code. In that case, you can request that the response include an \u201cenvelope,\u201d which is simply an extra layer of information in the JSON document and contains any relevant details that would normally be in the response headers. By default, the API does not include the response in an envelope. To request one, simply add the query parameter envelope=true. For responses that contain a single entity, the envelope contains two fields: status - The HTTP status code. content - The requested entity. For responses that contain a list of entities, there is already an envelope that wraps the results, so specifying envelope=true only adds the status field to the existing envelope. Pretty Printing\u00b6 By default, extraneous whitespace is stripped from the JSON returned by the server. To ask for pretty-printed JSON, simply append the pretty=true query parameter to any request: curl -u \"username:apiKey\" --digest -i \"https://cloud.mongodb.com/api/atlas/v1.0?pretty=true\" Response Codes\u00b6 Responses use the standard HTTP response codes, including: Code Meaning Notes 200 OK The request was successful. This is typically the response to a successful GET request. 201 Created A new resource was created. This is typically the response to a successful POST request. 202 Accepted A request for an asynchronous operation was accepted. 400 Bad Request Something was wrong with the client request. 401 Unauthorized Authentication is required but was not present in the request. Typically this means that the digest authentication information was omitted from the request, the provided credentials are incorrect, or the user associated with the given API key is not allowed to access the requested resource. 403 Forbidden Access to the specified resource is not permitted. 404 Not Found The requested resource does not exist. 405 Method Not Allowed The HTTP method is not supported for the specified resource. Keep in mind that each resource may only support a subset of HTTP methods. For example, you are not allowed to DELETE the root resource. 409 Conflict This is typically the response to a request to create or modify a property of an entity that is unique when an existing entity already exists with the same value for that property. 5xx Various server errors Something unexpected went wrong. Try again later and consider notifying Atlas Support. Errors\u00b6 When a request results in an error, the response body contains a document with additional details about what went wrong. The document contains three fields: error - The error code, which is simply the HTTP status code. reason - A short description of the error, which is simply the HTTP status phrase. detail - A more detailed description of the error. Group ID\u00b6 Many resources are tied to a group and require the Group ID. You can retrieve the group ID through the Atlas interface. Click Settings, then Group Settings. The ID appears at the top of the page. Authentication\u00b6 As previously mentioned, the Atlas API uses HTTP Digest Authentication. The details of digest authentication are beyond the scope of this document, but it essentially requires a username and a password which are hashed using a unique server-generated value called a nonce. The username is the username of a registered Atlas account, and the password is an API key associated with that account. Keep the following points in mind: The server-generated nonce is used by the client to hash the username and password before sending them back to the server to authenticate a request. The nonce is only valid for a short amount of time as per the digest authentication specification. This is to prevent replay attacks, so you can\u2019t cache a nonce and use it forever. Using digest authentication in combination with HTTPS provides an extra layer of security by ensuring that a password is never transmitted back to the server. Some resource methods require even more security and are additionally protected by user API whitelists that allow access to the resource only from the IP addresses listed. Each user configures their own API whitelist of IP addresses that allow them access to the resource, in combination with their API keys. A user can access a whitelisted resource only when the API key and whitelisted IP address come from the same Atlas user account. Atlas roles allow more fine-grained control of the operations a user is allowed to perform. The API resources enforce the same authorization rules, so the resources and methods that can be accessed by an API key are governed by the roles granted to the associated user. Many resources are tied to a group, as evidenced by URLs of the form .../api/atlas/v1.0/groups/<GROUP-ID>/.... For these resources, the user tied to the API key must be a member of the group. Otherwise the server will respond with a 401 error. Rate Limiting\u00b6 Certain resources are subject to rate limiting. For resources that are rate limited, Atlas allows up to 100 requests per minute per group. Keep in mind that an API key is assigned to a user, but that user may access multiple groups. Consider two users: A and B. User A belongs to group X, and user B belongs to groups X and Y. At 1:00:00pm, User A makes 50 requests to a rate limited resource in group X, all of which are complete by 1:00:20pm. At 1:00:30pm, User B attempts to make 60 requests to a rate limited resource in group X. Since User A has already used up 50 requests within the 1:00pm minute for group X, the last 10 requests User B attempts to make are rejected. However, User B can make requests to a rate limited resource in group Y, since each group maintains a separate request counter. At 1:01pm, requests to group X may proceed, because the request counter used for rate limiting resets each minute. If you exceed the rate limit, the API returns a 429 Too Many Requests response code. Configure Atlas API Access API Resources Root Group IP Whitelist Database Users Get All Database Users Get a Single Database User Create a Database User Update a Database User Delete a Database User Clusters Get All Clusters Get a Single Cluster Create a Cluster Modify a Cluster Delete a Cluster Alerts Get All Alerts Get an Alert Acknowledge an Alert Alert Configurations Get All Alert Configurations for a Group Create an Alert Configuration Get an Alert Configuration Update an Alert Configuration Enable/Disable Alert Configuration Delete an Alert Configuration Get Open Alerts for Alert Configuration VPC Get a List of Cloud Services Containers Create a New Container Get a Specific Container Update a Container Get a List of VPC Peering Connections Create a New VPC Peering Connection Get a Specific VPC Peering Connection Update an Existing VPC Peering Connection Delete an Existing VPC Peering Connection User API Whitelist \u2190 FAQ Configure Atlas API Access \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "The Atlas API follows the principles of the REST architectural style to expose a number of internal resources which enable programmatic access to Atlas\u2018s features.",
            "tags": ""
        },
        {
            "slug": "/backup-cluster.html",
            "title": "Back Up a Cluster",
            "headings": [
                "Back Up a Cluster\u00b6",
                "Enable Backup\u00b6",
                "Backup Data\u00b6",
                "Size\u00b6",
                "Data Centers\u00b6",
                "Modify Backup Schedule\u00b6",
                "Retention Policy\u00b6"
            ],
            "text": "Back Up a Cluster\u00b6 On this page Enable Backup Backup Data Modify Backup Schedule Retention Policy Note This feature is not available for Free Tier clusters. For more information, see Atlas M0 (Free Tier) Limitations. Enabling backup for your cluster allows you to restore from stored snapshots or from a selected point in time between snapshots. Enable Backup\u00b6 You can enable backup during the cluster creation or during the modification of an existing cluster. Specifically, in the cluster configuration, set Do you want to enable backup? to Yes. Backup Data\u00b6 Atlas backup service takes snapshots of the data. These snapshots only stores the differences between successive snapshots. For sharded clusters, the backup service temporarily stop the balancer via the mongos in order to insert a marker token into all shards and config servers in the cluster. Atlas takes a snapshot when the marker tokens appear in the backup data. Atlas provides the functionality to query specific backup snapshot. For details, see Query a Backup Snapshot. Size\u00b6 To reduce the snapshop data size, Atlas uses compression and block-level de-duplication technology. Data Centers\u00b6 For Atlas clusters created after June 21st, 2017, Atlas stores backup data for an Atlas cluster in a data center specific to the cluster\u2019s geographic region: Cluster Location Backup Service Location USA USA Germany Germany United Kingdom United Kingdom Australia Australia All other cluster locations Ireland Atlas retains these snapshots based on the retention policy. Modify Backup Schedule\u00b6 If you enable backup for a cluster, Atlas takes a base snapshot of your data every 6 hours. To change a deployment\u2019s backup schedule, go to Backup. For the cluster whose backup schedule you wish to modify, click the ellipsis and select Edit Snapshot Schedule menu option. Retention Policy\u00b6 Atlas retains snapshots for the time periods listed in the following table. If you disable backup for a cluster or terminate a cluster, Atlas immediately deletes the backup snapshots for the cluster. Snapshot Default Retention Policy Maximum Retention Setting Base snapshot. 2 days 5 days. Daily snapshot 7 days 360 days Weekly snapshot 4 weeks 52 weeks Monthly snapshot 13 months 36 months Query a Backup Snapshot \u2190 Query Targeting Query a Backup Snapshot \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Enabling backup for your cluster allows you to restore from stored snapshots or from a selected point in time between snapshots.",
            "tags": ""
        },
        {
            "slug": "/billing.html",
            "title": "Billing",
            "headings": [
                "Billing\u00b6",
                "Cloud Service Provider and Region\u00b6",
                "Instance Size\u00b6",
                "Storage Capacity\u00b6",
                "Custom Storage Speed\u00b6",
                "Data Transfer\u00b6",
                "Number of Servers\u00b6",
                "Backup\u00b6",
                "Billing Information\u00b6",
                "View an Estimate of Monthly Charges\u00b6",
                "Retry a Failed Payment\u00b6"
            ],
            "text": "Billing\u00b6 On this page Cloud Service Provider and Region Instance Size Data Transfer Number of Servers Backup Billing Information Important Atlas does not accept prepaid cards as a method of payment. Atlas charges by the hour for your MongoDB clusters. Atlas tabulates costs daily and displays your current monthly costs in the upper right corner. To view line-item charges, click Atlas Settings, then Billing/Subscriptions, and then the Usage Details link. As you create or modify a cluster, you can compare the costs of different options before applying them. Atlas displays the costs, except for data transfer, in a Cluster Overview box. Note The Cluster Overview box does not display data transfer costs. Cloud Service Provider and Region\u00b6 Atlas supports deploying clusters onto Amazon Web Services, the Google Cloud Platform, and Microsoft Azure. The choice of cloud service provider and region for the Atlas group affects the cost of running a Atlas cluster. Instance Size\u00b6 Atlas provides different instance sizes. Each instance size has a default RAM capacity, storage capacity, and maximum storage speed. The cost of the instance\u2019s per-hour charge includes these default values. Atlas uses the selected instance size when deploying all the data-bearing [1] servers in your cluster. Depending on the choice of cloud service provider, Atlas provides customization options for instance storage capacity and the speed of that storage. If you add capacity or speed, you incur additional costs on top of the base cost. The Cluster Overview box shows your overall charges. Storage Capacity\u00b6 Atlas charges for storage capacity differently depending on whether you use the instance default or specify a custom storage capacity. If you use the default, storage is included in the instance\u2019s per-hour cost. If you customize, Atlas charges for the entire amount of storage, not the difference from the default size. For example, if the instance default is 80 GB and if you increase storage to 100 GB, the change in cost is the charge for 100 GB. If you then increase storage to 120 GB, the change in cost is the charge for 20 GB. Note Increasing storage capacity can change the max IOPS available with each Custom Storage Speed. Custom Storage Speed\u00b6 Atlas measures storage speed as maximum Input/Output Operations Per Second (IOPS). Each Atlas instance type offers a default storage speed that is included in the instance\u2019s per-hour cost. The choice of cloud service provider and instance size affects the available storage speed customization options, as well as the cost of selecting a custom storage speed. AWS For most instance types, you can increase storage speed from Standard to Fast or Fastest, which affects costs. Selecting a custom speed changes both IOPS and the type of storage used. The storage type changes from a general-purpose SSD to a provisioned-IOPS SSD. For more information on storage types, see Amazon EBS Volume Types. GCP All instances use SSD persistent disks with fixed maximum IOPS based on the instance storage capacity. The maximum IOPS increases as storage capacity increases. The cost of the increased maximum IOPS is included in the cost of the increased storage capacity. For more information on the GCP persistent disks, see Persistent Disks. Azure All instances use premium SSD disks with fixed maximum IOPS based on the storage capacity. The maximum IOPS increases as storage capacity increases. The cost of the increased maximum IOPS is included in the cost of the increased storage capacity. For more information on the Azure Premium disks, see High-performance Premium Storage and managed disks for VMs. Data Transfer\u00b6 Atlas data transfer costs depend on the cloud service provider the cluster is deployed to. Atlas tabulates data transfer costs daily. AWS Atlas charges for data transfer between the Atlas server and another server. Data transfer charges include traffic between cluster nodes, including an outgoing transfer from the source node and an incoming transfer to the destination node within the same AWS region. Charges for data transfer increase as follows, from lowest to highest: Data transfer between the originating MongoDB Atlas server and a server in the same AWS region. Data transfer between the originating MongoDB Atlas server and a server in a different AWS region. Data transfer between the originating MongoDB Atlas server and a server not in an AWS region. GCP Atlas charges for outgoing data transfers from an Atlas server to another server. Incoming data transfers to an Atlas server are free. Data transfer charges for a Atlas cluster are as follows, from lowest to highest: Outgoing data transfer between the originating MongoDB Atlas node and: a server that is in the same region but not in the same zone, or a server where both the originating MongoDB Atlas node and the destination server are in different regions in the United States of America. Outgoing data transfer between the originating MongoDB Atlas node and: a server in a different continent, or a server in the same continent (excluding USA) but a different region, or a server or machine not in a GCP data center. Azure Atlas charges for outgoing data transfer from an Atlas server to another server or machine not in the same region. Incoming data transfers to a Atlas server are free. Data transfer charges for an Atlas cluster depend on the geographic location of the source server. Number of Servers\u00b6 Atlas charges the instance cost and data storage cost for each data-bearing server [1] in your cluster. For a replica set, the number of data-bearing servers equals the replication factor. For a sharded cluster, the number of data-bearing servers equals the replication factor multiplied by the number of shards. If you enable sharding, Atlas will also run three config servers in addition to your data-bearing servers. Your selections for instance size and data storage do not affect the costs of the config servers. Config servers are charged at a separate rate. Their cost is reflected in the cost of the cluster. Backup\u00b6 For each replica set in a cluster, Atlas charges US$2.50 / GB / month to store backup data. The first 1GB of backup data is free. Atlas discounts the cost of backup data storage if the frequency of snapshots is reduced. To modify the backup schedule for a cluster, see Modify Backup Schedule. Note Backup data consists of your logical data and indexes on that data. Example For a three-member replica set with 30GB of data, Atlas charges US$72.50 each month. (30GB - 1GB) \u00d7 US$2.50 = US$72.50 For sharded clusters, Atlas sums the cost of backup data for each shard replica set and the config server replica set. Example A sharded cluster with 3 shards contains 90GB of data, with each shard containing 30GB of data each. The config server replica set contains 5GB of data. For this sharded cluster, Atlas charges US$227.50 per month. ((30GB - 1GB) \u00d7 US$2.50) \u00d7 3) + ((5GB - 1GB) \u00d7 US$2.50) = US$227.50 Billing Information\u00b6 Each Atlas group has its own account, plan, and billing method. To access billing information, click Settings, then Billing/Subscriptions. Note Billing/Subscriptions allow you to set an optional Invoice Address that is separate from the Payment Method billing address. If you set an Invoice Address, you can optionally use this address for the Payment Method by selecting same as Invoice Address when entering the Payment Method. View an Estimate of Monthly Charges\u00b6 Click Settings, then Billing/Subscriptions, and then Understanding Your Bill. Scroll to Monthly Estimates. Retry a Failed Payment\u00b6 If you receive notification of a failed payment, click Settings, then Billing/Subscriptions, and check that your Payment Method is correct. To retry the payment, click Settings, then Payment History. On the line for the failed payment, click Retry. [1](1, 2) For replica sets, the data-bearing servers are the servers hosting the replica set members. For sharded clusters, the data-bearing servers are the servers hosting the shards. For sharded clusters, Atlas also deploys servers for the config servers; these are charged at a rate separate from the instance costs. \u2190 Restore a Cluster Group Settings \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas charges by the hour for your MongoDB clusters. Atlas tabulates costs daily and displays your current monthly costs in the upper right corner. To view line-item charges, click Atlas Settings, then Billing/Subscriptions, and then the Usage Details link.",
            "tags": ""
        },
        {
            "slug": "/compass-connection.html",
            "title": "Connect via Compass",
            "headings": [
                "Connect via Compass\u00b6",
                "Prerequisites\u00b6",
                "Connect to Your Cluster\u00b6"
            ],
            "text": "Connect to a Cluster > Connect via Compass Connect via Compass\u00b6 On this page Prerequisites Connect to Your Cluster To connect MongoDB Compass to Atlas, you need: The hostname of primary for a replica set or the hostname for the mongos for a sharded cluster. The port of the primary for a replica set or the port for the mongos for a sharded cluster. MongoDB User and Password. The connection details use the MongoDB administration user and password set up for the group. To connect with a different MongoDB user, replace the user name and password in the connection details. The Connect dialog for a cluster provides connection string details. Use the displayed connection details to retrieve these details. Prerequisites\u00b6 TLS/SSL Clients must have support for TLS/SSL to connect to an Atlas cluster. Clients must have support for the SNI TLS extension to connect to an Atlas M0 Free Tier cluster. Whitelist To access a cluster, you must connect from an IP address on the Atlas group\u2019s IP whitelist. If you need to add an IP address to the whitelist, you can do so in the Connect dialog. You can also add the IP address from the Security tab. Connect to Your Cluster\u00b6 In Compass, to set up a New Connection to your Atlas cluster, enter the following information and click Connect. Field Name Description Hostname The hostname of primary for a replica set or the hostname for the mongos for a sharded cluster. Port The port of the primary for a replica set or the port for the mongos for a sharded cluster. Authentication Select Username / Password. Username MongoDB user. The Atlas connection details displays the MongoDB administration user set up for the cluster. You can connect with a different MongoDB user. Password Password associated with the specified MongoDB user. Authentication Database Specify \"admin\". SSL Select \"Use System CA / Atlas Deployment\" SSH Tunnel Select \"Off\" Favorite Name Enter a name for the connection if saving as a favorite. \u2190 Connect via Driver Connect via mongo Shell \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "To connect MongoDB Compass to Atlas, you need:",
            "tags": ""
        },
        {
            "slug": "/configure-alerts.html",
            "title": "Configure Alert Settings",
            "headings": [
                "Configure Alert Settings\u00b6",
                "Introduction\u00b6",
                "Default Alert Settings\u00b6",
                "Notification Options\u00b6",
                "Configure an Alert\u00b6",
                "Click Alerts.\u00b6",
                "Choose whether to clone an existing alert setting as a template.\u00b6",
                "Select the condition that triggers the alert.\u00b6",
                "Apply the alert only to specific targets. (Optional)\u00b6",
                "Select the alert recipients and delivery methods.\u00b6",
                "Click Save.\u00b6",
                "Delete or Disable an Alert\u00b6"
            ],
            "text": "Monitoring and Alerts > Configure Alert Settings Configure Alert Settings\u00b6 On this page Introduction Configure an Alert Delete or Disable an Alert Introduction\u00b6 You can select which conditions trigger alerts and how users are notified. Default Alert Settings\u00b6 Atlas provides the following default alerts for a new group: Replica set has no primary Cluster is missing an active mongos Disk space % used on Data Partition is Disk I/O % utilization on Data Partition is User joined the group Users awaiting approval to join group Credit card is about to expire Notification Options\u00b6 When you configure an alert, you select how notifications are sent. You can select multiple notification methods, such as email, text message, or team collaboration tools. To use certain notification methods, you must first enter default values in Group Settings, accessed through the Settings tab. Atlas fills in the default values automatically when you select that notification method. If a default value becomes invalid, Atlas sends an email to the group owner. The following notification methods require default values in Group Settings: PagerDuty Flowdock HipChat Slack Webhook Configure an Alert\u00b6 When you create a new alert you have the option of using an existing alert setting as a template. 1 Click Alerts.\u00b6 2 Choose whether to clone an existing alert setting as a template.\u00b6 To create a new alert without cloning an existing setting, click the Add button and select New Alert. To clone an existing setting, click the Alert Settings tab; Locate the alert setting; Click the ellipsis icon and select Clone. 3 Select the condition that triggers the alert.\u00b6 In the Alert if section, select the target component and the condition. For explanations of alert conditions, see Alert Conditions. 4 Apply the alert only to specific targets. (Optional)\u00b6 If the options in the For section are available, you can optionally filter the alert to apply only to a subset of the targets. The matches field can use regular expressions. 5 Select the alert recipients and delivery methods.\u00b6 In the Send to section, click Add and select from the options described below. To help eliminate false positives, set the time to elapse before the condition triggers the alert. Notification Option Description Group Sends the alert to a group, either by email or SMS. SMS uses the number configured for each user\u2019s account. To send to specific roles, deselect All Roles and select the roles. Atlas User Sends the alert to a user, either by email or SMS. SMS uses the number configured for the user\u2019s account. Email Sends the alert to an email address. SMS Sends the alert to a mobile number. Atlas removes all punctuation and letters and uses only the digits. If you are outside of the United States or Canada, include \u2018011\u2019 and the country code. For example, for New Zealand enter \u201801164\u2019 before the phone number. As an alternative, use a Google Voice number. Atlas uses the U.S.-based Twilio to send SMS messages. HipChat Sends the alert to a HipChat room message stream. Enter the HipChat room name and API token. Slack Sends the alert to a Slack channel. Enter the channel name and either an API token or a Bot token. To create an API token, see the https://api.slack.com/web page in your Slack account. For information on Bot users in Slack, see https://api.slack.com/bot-users. Flowdock Sends the alert to a Flowdock account. Enter the following: Org Name: The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Flow Name: The flow name in lower-case letters. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name> User API Token: Your Flowdock \u201cpersonal API token\u201d found on the https://www.flowdock.com/account/tokens page of your Flowdock account. PagerDuty Sends the alert to a PagerDuty account. Enter only the PagerDuty service key. Define escalation rules and alert assignments directly in PagerDuty. This option is available only for alerts that require acknowledgement. Informational alerts, such as the alert that a user has joined a group, cannot use this notification method. Users can acknowledge PagerDuty alerts only from the PagerDuty dashboard. Webhook Sends an HTTP POST request to an endpoint for programmatic processing. The request body contains a JSON document that uses the same format as the Atlas API\u2019s Alerts resource. This option is available only if you have configured Webhook settings on the Group Settings page. Grant the following CIDR ranges access to the endpoint resource: 4.71.186.128/25 4.35.16.128/25 Important MongoDB reserves the right to change these IP addresses at any time without user notice. 6 Click Save.\u00b6 Delete or Disable an Alert\u00b6 If you delete or disable an alert setting, Atlas cancels active alerts related to the setting. A disabled alert setting remains visible but grayed-out and can be later re-enabled. A deleted alert setting does not remain visible. \u2190 Respond to Alerts Alert Conditions \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "You can select which conditions trigger alerts and how users are notified.",
            "tags": ""
        },
        {
            "slug": "/configure-api-access.html",
            "title": "Configure Atlas API Access",
            "headings": [
                "Configure Atlas API Access\u00b6",
                "Generate API Keys\u00b6",
                "Provide Access to Whitelisted API Operations\u00b6",
                "Delete an Address from the API Whitelist\u00b6"
            ],
            "text": "API > Configure Atlas API Access Configure Atlas API Access\u00b6 On this page Generate API Keys Provide Access to Whitelisted API Operations Delete an Address from the API Whitelist To access the API, you must generate your own API key. To access whitelisted API operations, you must configure your API whitelist with the IP addresses you will use when issuing the whitelisted commands. You also must have the Owner role to issue whitelisted commands. For a description of the Atlas API\u2019s principles and conventions, see the API. Generate API Keys\u00b6 To access the Atlas API, you must generate an API key, which gives access to the API. Each user that will use the API must generate a key. You can have up to ten API keys associated with your account. Each key can be either enabled or disabled but all count toward the ten-key limit. An API key is like a password. Keep it secret. When accessing Atlas through the API, you have the same level of access as you do through the Atlas interface. Your Atlas roles apply to both the interface and the API. Important When you generate a key, Atlas displays it one time only. You must copy it. Atlas will never display the full key again. On the upper-right hand corner, click on your user name and select Account. Click on Public API Access. In the API Keys section, click Generate. Type a description and click Generate. If prompted for two-factor authentication, enter the code and click Verify. Then click Generate again. Copy and record the key. Copy the key immediately. Atlas displays the full key one time only. You will not be able to view the full key again. Record the key in a secure place. After you record the key, click Close. Provide Access to Whitelisted API Operations\u00b6 Address-based whitelists protect certain API operations. Only client requests that originate from a whitelisted IP address are permitted to perform the operations. To perform whitelisted operations, you must create add at least one address to your whitelist. Users have their own whitelists and own API keys. When you issue an API call, you must use an API key from your user account and must issue the command from an address on your user account\u2019s whitelist. You cannot use your key to issue a whitelisted API request from an address on another user\u2019s whitelist, unless, of course, you\u2019ve added that address to your own whitelist. On the resources pages in this guide, whitelisted operations are marked as such. On the upper-right hand corner, click on your user name and select Account. Click on Public API Access. In the API Whitelist section, click Add. Enter an IP address or CIDR range. To add multiple entries to your whitelist, repeat this step. If you leave your whitelist empty, you have no access to whitelisted operations. You can enter any of the following: Entry Grants An IP address Access to whitelisted operations from that address. A CIDR-notated range of IP addresses Access to whitelisted operations from those addresses. 0.0.0.0/0 Unrestricted access to whitelisted operations. Delete an Address from the API Whitelist\u00b6 On the upper-right hand corner, click on your user name and select Account. Click on Public API Access. In the Whitelist section, click the address\u2019s gear icon and select Delete. \u2190 API API Resources \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "To access the API, you must generate your own API key.",
            "tags": ""
        },
        {
            "slug": "/connect-to-cluster.html",
            "title": "Connect to a Cluster",
            "headings": [
                "Connect to a Cluster\u00b6",
                "Connection Limits and Instance Sizes\u00b6",
                "Prerequisites\u00b6",
                "Connect to Your Cluster\u00b6",
                "From the Clusters view, click Clusters tab.\u00b6",
                "For the cluster to which you wish to connect, click Connect.\u00b6",
                "Connect to the cluster.\u00b6"
            ],
            "text": "Connect to a Cluster\u00b6 On this page Connection Limits and Instance Sizes Prerequisites Connect to Your Cluster Atlas provides details to connect to a cluster via the mongo shell or a MongoDB driver. Connection Limits and Instance Sizes\u00b6 Atlas sets the limits for concurrent incoming connections based on instance size: Instance Size Maximum Number of Concurrent Incoming Connections M0 100 M10 350 M20 700 M30 2000 M40 4000 M50 6000 M60 8000 M100 16000 Prerequisites\u00b6 TLS/SSL Clients must have support for TLS/SSL to connect to an Atlas cluster. Clients must have support for the SNI TLS extension to connect to an Atlas M0 Free Tier cluster. Whitelist To access a cluster, you must connect from an IP address on the Atlas group\u2019s IP whitelist. If you need to add an IP address to the whitelist, you can do so in the Connect dialog. You can also add the IP address from the Security tab. Connect to Your Cluster\u00b6 To view connection specification details for a cluster, go to the Clusters view. 1 From the Clusters view, click Clusters tab.\u00b6 2 For the cluster to which you wish to connect, click Connect.\u00b6 Atlas displays the details to connect to the cluster via a mongo shell or a MongoDB driver. 3 Connect to the cluster.\u00b6 Use the displayed connection details to connect to the cluster via a mongo shell or via a MongoDB Driver. The connection details use the MongoDB administration user and password set up for the group. Update the PASSWORD placeholder with the password for the user. To connect with a different MongoDB user, replace the user name and password in the connection details. For examples, see: Connect via Driver Connect via Compass Connect via mongo Shell Atlas also provides the ability to introspect collections in your clusters via the Data Explorer view. Connect via Driver Connect via Compass Connect via mongo Shell Data Explorer \u2190 Two Factor Authentication Connect via Driver \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas provides details to connect to a cluster via the mongo shell or a MongoDB driver.",
            "tags": ""
        },
        {
            "slug": "/create-new-cluster.html",
            "title": "Create a Cluster",
            "headings": [
                "Create a Cluster\u00b6",
                "Create a Cluster\u00b6",
                "Go to the Clusters view.\u00b6",
                "Configure your cluster.\u00b6",
                "Save your admin credentials.\u00b6",
                "Enter Payment Information.\u00b6",
                "Atlas M0 (Free Tier) Limitations\u00b6",
                "Terminate a Cluster\u00b6",
                "Next Steps\u00b6"
            ],
            "text": "Create a Cluster\u00b6 On this page Create a Cluster Terminate a Cluster Next Steps Atlas-managed MongoDB deployments, or \u201cclusters\u201d, can be either a replica set or a sharded cluster. Atlas provides an option to deploy one Free Tier replica set per group. Free Tier clusters use Atlas M0 instances and are an ideal development sandbox, providing access to a subset of Atlas features and functionality. Paid clusters use Atlas M10+ instances and provide full access to Atlas features, configuration options, and operational capabilities. An Atlas group can have multiple M10+ MongoDB clusters. The following table highlights key differences between an M0 Free Tier cluster and an M10+ paid cluster: Free Tier Cluster (M0 instance) Paid Cluster (M10+ instance) Scaling No Seamless cluster scaling Data Visualization No Atlas Data Explorer Metrics Limited Full metrics, including the Real Time Performance Tab VPC Peering (Amazon Web Services clusters only) No VPC Peering Connection wizard Global Region Selection No, Free Tier clusters are deployed in a US-based AWS datacenter. Atlas supports deploying clusters globally on Amazon Web Services, Google Cloud Platform, and Microsoft Azure Backups No Yes, including queryable backups Sharding No Yes, for clusters using an M30+ instance Dedicated Instance No, M0 Free Tier clusters run in a shared environment Yes, M10+ clusters deploy each mongod process to its own instance. For a complete list of Free Tier limitations, see Atlas M0 (Free Tier) Limitations. When Atlas deploys an Atlas group\u2019s first M10+ paid cluster, Atlas also creates a VPC specific to the cloud service provider and region selected for the cluster. Atlas associates all subsequent clusters deployed in the group to this VPC, locking them to the cloud service provider and region. Atlas also sets a default VPC CIDR block address for the group. For clusters deployed on Amazon Web Services, Atlas supports creating VPC peering connections between your Atlas clusters and other AWS VPCs in the same region. If you need a specific Atlas VPC CIDR block address, configure a VPC peering connection before creating your first M10+ cluster. For Atlas clusters deployed on Google Cloud Platform or Microsoft Azure, add the IP addresses of your GCP or Azure services to Atlas group IP whitelist to grant those services access to the cluster. Create a Cluster\u00b6 To create a cluster, go to the Clusters view and click the Add New Cluster or Build a New Cluster button. Configure your cluster as described in the steps below. As you build your cluster, Atlas displays the associated costs. If no MongoDB user exists for your Atlas group, you will also create your first MongoDB user. You must save the admin user and password or you will lose admin access to your MongoDB databases until you reset the password. If you choose to have Atlas generate the admin password, save the password when it is displayed since Atlas displays it only once. 1 Go to the Clusters view.\u00b6 Go to the Clusters view and click the Add New Cluster or Build a New Cluster button. 2 Configure your cluster.\u00b6 Atlas provides the configuration options described in the table below. As you make selections, Atlas displays the associated costs. Free Tier Atlas M0 (Free Tier) instances run in a shared environment backed by Amazon Web Services with limited configuration options and operational restrictions. See Atlas M0 (Free Tier) Limitations. Deploying an M0 (Free Tier) cluster does not restrict the choice of cloud provider or region for your first M10+ paid cluster. Configuration Option Description MongoDB Version The MongoDB version [1] for your cluster. Atlas always deploys the cluster with the latest stable release of the specified version. Atlas supports MongoDB 3.2 and MongoDB 3.4 with the WiredTiger storage engine. By default, Atlas uses MongoDB 3.4. You can specify the MongoDB version when you create a cluster. If a created cluster uses MongoDB 3.2, you can upgrade to MongoDB 3.4 when you scale a cluster. As new maintenance releases become available, Atlas automatically upgrades to these releases via a rolling process to maintain cluster availability. Important You cannot downgrade a cluster from MongoDB 3.4 to MongoDB 3.2. Cluster Name The cluster name as it will appear in Atlas. Cloud Provider and Region The cloud provider and physical location of your MongoDB cluster. The choice of cloud provider and region affects the configuration options for the available instance sizes, network latency for clients accessing your cluster, and the cost of running the cluster. During deployment of a Atlas group\u2019s first M10+ paid cluster, Atlas creates a VPC for the group that is specific to the cloud service provider and region of the cluster. All additional clusters deployed in that group are associated to the group\u2019s VPC, locking the choice of cloud service provider and region. Regions marked as Recommended provide higher availability compared to other regions. For more information, see: AWS Recommended Regions. GCP Recommended Regions. Azure Recommended Regions Instance Size The memory, storage, and IOPS specification for each data-bearing server [2] for your Atlas cluster. Atlas provides various instance sizes to support different use cases: For development environments and low traffic websites, M0, M10 and M20 instance sizes. For production environments that support high traffic applications or large datasets, M30 or larger instances sizes. For a sharded cluster, the selected instance size must be M30 or larger. Each instance size comes with a default set of resources. Depending on the selected cloud service provider and instance size, Atlas can provide the following configuration options: Custom Storage Capacity: The size of the server root volume. Changes to storage capacity affects cost. Custom Storage Speed: The input/output operations per second (IOPS) the system can perform. Changes to storage speed affects cost. Use encrypted storage volumes: Encrypts root volume for data at rest inside the volume and all data moving between the volume and the instance. For more information on the default resources and available configuration options for each cloud service provider, see: AWS Configuration Options GCP Configuration Options Azure Configuration Options. See also Connection Limits and Instance Sizes Replication Factor The number of replica set members. Each member keeps a copy of your database, providing high availability and data redundancy. Atlas deploys replica set members across the selected region. For more information, see Amazon Availability Zones for AWS, GCP Zones for GCP, and Azure Fault Domains for Azure. The number of availability zones, zones, or fault domains in a region has no affect on the number of MongoDB nodes Atlas can deploy. MongoDB Atlas clusters are always made of replica sets with a minimum of three MongoDB nodes. Each member of the replica set runs on a separate instance. For details on how the number of server instances affects cost, see Number of Servers. If your deployment is a sharded cluster, each shard is a replica set, and the replication factor determines the number of members in each shard replica set. For more information on replica sets, see Replication in the MongoDB manual. Do you want a sharded cluster? Sharded clusters support horizontal scaling and consists of shards, config servers and router programs. For a sharded cluster, the selected instance size must be M30 or larger. Atlas deploys each shard as a replica set, consisting of the number of members specified by the replication factor. The shard servers have the selected instance size. Atlas deploys the config servers as a three-member replica set. The config servers run on M30 instances. Atlas deploys six routers (mongos programs) for a sharded cluster. Atlas runs the routers on the shard servers. Atlas deploys mongod process to its own instance. For sharded clusters, the six routers (the mongos processes) run on six of the shard servers; i.e. each of the six mongos processes shares an instance with one mongod process. For details on how the number of server instances affects cost, see Number of Servers. For more information on sharded clusters, see Sharding in the MongoDB manual. Do you want to enable backup? If enabled, Atlas takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. Admin Username & Password Creates a MongoDB admin user with the specified username and password. These fields appear only if no MongoDB user exists for your Atlas group, such as if you are creating the first cluster in the group and have not set up MongoDB users beforehand. When creating a new admin user, be sure to save the credentials. The admin user has read and write access to any MongoDB database in any cluster in your Atlas group. The admin user can also enable sharding. To have Atlas generate the password for the admin user, click Autogenerate Secure Password. If you choose to have Atlas generate the password, Atlas displays it only once. 3 Save your admin credentials.\u00b6 Important If you have created a new MongoDB admin user, you must save the admin user and password or you will lose administrative access to your MongoDB databases until you reset the password. 4 Enter Payment Information.\u00b6 Click Confirm & Deploy to enter payment information. You can terminate the cluster at any time using the following procedure: Click Clusters. For the cluster you want to terminate, click on the ... in the top-right corner. Click Terminate. Atlas executes the terminate operation after completing any in-progress deployment changes. Atlas M0 (Free Tier) Limitations\u00b6 The following table lists the configuration limitations of Free Tier clusters: Configuration Option Limitation AWS Region Atlas deploys Free Tier clusters in the Amazon Web Services us-east-1 (N. Virginia) region. This does not affect other clusters in the Atlas group. MongoDB Version Version is set to MongoDB 3.4 with Wired Tiger and cannot be modified. Instance Size You must select the M0 instance size to deploy a Free Tier cluster. Instance Memory You cannot configure memory for a Free Tier cluster. Instance Storage Storage is set to 512 MB and cannot be modified. Replication Factor Replication Factor is set to 3 Nodes and cannot be modified. Do You Want A Sharded Cluster You cannot deploy a Free Tier cluster as a Sharded Cluster. Do You Want To Enable Backup You cannot enable backups. The following table lists the operational limitations of Atlas Free Tier clusters: Aggregation Atlas Free Tier clusters do not support the allowDiskUse option for the aggregation command or its helper method. Throughput Maximum of 100 operations per second. Connections Maximum of 100 connections. Network bandwidth Restricted to 1GB per week in and 1GB per week out. Atlas throttles traffic to 1KB/s after reaching either bandwidth limit. Javascript Free Tier clusters do not support server side javascript. For example, $where and map-reduce are not supported. Migrating to a Paid Cluster The Atlas UI does not provide an automated feature for migrating Free Tier data to a paid cluster. For a tutorial on manually migrating Free Tier data to a paid cluster, see Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster. Data Explorer Data Explorer is not available for a Free Tier cluster. API Access You cannot modify or configure a Free Tier cluster using the Clusters API endpoint. Number of Free Tier clusters You can deploy at most one Free Tier cluster per Atlas group. Database Commands Certain database commands are unsupported or behavior differently in a Free Tier cluster. See Command Limitations in Free Tier Clusters for more information. Please contact Atlas support for any questions or comments related to restricted commands. Atlas Monitoring The Metrics view of a Free Tier cluster only displays the following metrics: Connections Logical Size Network Opscounter For more information on these metrics, see Real Time Metrics. Database Names Free Tier clusters limit the name of a database, including the db prefix, to 63 bytes. Database and Collections Maximum of 100 databases and 500 collections total. Cluster Persistance Atlas may terminate idle Free Tier clusters as per the Terms of Service. VPC Peering Free Tier clusters do not support VPC peering. Terminate a Cluster\u00b6 To terminate an Atlas cluster, do the following: Click Clusters. For the cluster you wish to terminate, click on the ... in the top-right corner. Click Terminate. Atlas executes the terminate operation after completing any in-progress deployment changes. Atlas bills for the hours that the cluster was active. See Billing for more information on Atlas billing. Warning Terminating a cluster also deletes any backup snapshots for that cluster. See Retention Policy. Next Steps\u00b6 To continue setting up the cluster, see: Set up security. Connect to the cluster. To change the cluster configuration after deployment, see Scale a Cluster. [1](1, 2) Atlas does not support MongoDB Enterprise deployments. [2](1, 2) For replica sets, the data-bearing servers are the servers hosting the replica set members. For sharded clusters, the data-bearing servers are the servers hosting the shards. For sharded clusters, Atlas also deploys servers for the config servers; these are charged at a rate separate from the instance costs. \u2190 Getting Started Security Features and Setup \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas-managed MongoDB deployments, or \u201cclusters\u201d, can be either a replica set or a sharded cluster.",
            "tags": ""
        },
        {
            "slug": "/data-explorer.html",
            "title": "Data Explorer",
            "headings": [
                "Data Explorer\u00b6",
                "Access Data Explorer\u00b6",
                "View Databases and Collections\u00b6",
                "View Documents\u00b6",
                "Select the database for the collection.\u00b6",
                "Select the collection on the left-hand side or in the main panel.\u00b6",
                "Select the Find view.\u00b6",
                "Optional. Specify query filter.\u00b6",
                "Click Find to run query.\u00b6",
                "View Indexes\u00b6",
                "Select the database for the collection.\u00b6",
                "Select the collection on the left-hand side or in the main panel.\u00b6",
                "Select the Indexes view.\u00b6"
            ],
            "text": "Connect to a Cluster > Data Explorer Data Explorer\u00b6 On this page Access Data Explorer View Databases and Collections View Documents View Indexes Atlas provides the ability to introspect collections in your managed MongoDB deployments via the Data Explorer view. Data explorer reads from the primary unless the primary is unavailable. If the primary is unavailable, data explorer reads from a non-hidden, non-delayed secondary member. Note This feature is not available for Free Tier clusters. For more information, see Atlas M0 (Free Tier) Limitations. Access Data Explorer\u00b6 Required Role To access Data Explorer, you must be the Group Owner. To access Data Explorer, click Clusters and then for the MongoDB deployment to introspect, click the Data button. Or, if you are already viewing a specific cluster, select the Data Explorer tab. The tab lists the databases in your deployment and the collections in each database. View Databases and Collections\u00b6 From the Data Explorer tab, you can view the databases and collections in the deployment. To view the collections in a particular database, click on the database. View Documents\u00b6 From the Data Explorer tab, you can view documents in a collection. To view documents for a collection: 1 Select the database for the collection.\u00b6 The main panel and the left-hand side displays the collections in the datatabse. 2 Select the collection on the left-hand side or in the main panel.\u00b6 The main panel displays the Find view and the Indexes view. 3 Select the Find view.\u00b6 The panel displays the documents in the collection. Each page displays up to 20 documents. 4 Optional. Specify query filter.\u00b6 To specify filter condition, type in a query filter document in the filter bar. For example, to specify equality condition, use a filter document of the form: { <field1>: <value1>, ... } To use query operators to specify a filter condition, use a filter document of the form: { <field1>: { <queryoperator>: <value1> }, ... } For more information on specifying query filters, including compound conditions, see Query Documents. 5 Click Find to run query.\u00b6 View Indexes\u00b6 From the Data Explorer tab, you can view index information for a collection. To view index information for a collection: 1 Select the database for the collection.\u00b6 The main panel and the left-hand side displays the collections in the datatabse. 2 Select the collection on the left-hand side or in the main panel.\u00b6 The main panel displays the Find view and the Indexes view. 3 Select the Indexes view.\u00b6 The indexes table lists the indexes and associated index information for the collection. Index information includes the index definition, the size, and the usage frequency. \u2190 Connect via mongo Shell Import Data into Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas provides the ability to introspect collections in your managed MongoDB deployments via the Data Explorer view. Data explorer reads from the primary unless the primary is unavailable. If the primary is unavailable, data explorer reads from a non-hidden, non-delayed secondary member.",
            "tags": ""
        },
        {
            "slug": "/driver-connection.html",
            "title": "Connect via Driver",
            "headings": [
                "Connect via Driver\u00b6",
                "Prerequisites\u00b6",
                "C Driver Example\u00b6",
                "C++ Driver Example\u00b6",
                "C#/.Net Driver Example\u00b6",
                "Java Driver Example\u00b6",
                "Node.js Driver Example\u00b6",
                "Perl Driver Example\u00b6",
                "PHP Driver Example\u00b6",
                "Python Driver Example\u00b6",
                "Ruby Driver Example\u00b6",
                "Mongoid Example\u00b6",
                "Scala Driver Example\u00b6"
            ],
            "text": "Connect to a Cluster > Connect via Driver Connect via Driver\u00b6 On this page Prerequisites C Driver Example C++ Driver Example C#/.Net Driver Example Java Driver Example Node.js Driver Example Perl Driver Example PHP Driver Example Python Driver Example Ruby Driver Example Scala Driver Example The Connect dialog for a cluster provides the URI string to use to connect via the MongoDB drivers. To connect using the drivers, use the version(s) of the driver recommended for use with the version of your Atlas cluster. In the connection string, replace PASSWORD with the password for the user. Important If the password contains reserved URI characters, you must escape the characters per RFC 2396. For example, if your password is @bc123, you must escape the @ character when specifying the password in the connection string; i.e. %40bc123. The following examples use the connection string to authenticate and connect to an Atlas cluster. In the examples, PASSWORD has been replaced with the password (myRealPassword) for the user kay. See also Connection Limits and Instance Sizes Prerequisites\u00b6 TLS/SSL Clients must have support for TLS/SSL to connect to an Atlas cluster. Clients must have support for the SNI TLS extension to connect to an Atlas M0 Free Tier cluster. Whitelist To access a cluster, you must connect from an IP address on the Atlas group\u2019s IP whitelist. If you need to add an IP address to the whitelist, you can do so in the Connect dialog. You can also add the IP address from the Security tab. C Driver Example\u00b6 client = mongoc_client_new (\"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\"); db = mongoc_client_get_database (client, \"test\"); Minimum Driver Version(s) Version 1.3 To connect to an Atlas M0 (Free Tier) cluster, you must use a C driver version that supports MongoDB 3.4. For complete documentation on compatibility between the C driver and MongoDB, see the MongoDB compatibility matrix. C++ Driver Example\u00b6 #include <mongocxx/client.hpp> #include <mongocxx/instance.hpp> //... mongocxx::instance inst{}; mongocxx::client conn{mongocxx::uri{\"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\"}}; mongocxx::database db = conn[\"test\"]; Minimum Driver Version(s) C+11: Version 0.3.0 Legacy series: Version legacy-1.1.0+ To connect to an Atlas M0 (Free Tier) cluster, you must use a C++ driver version that supports MongoDB 3.4. For complete documentation on compatibility between the C++ driver and MongoDB, see the MongoDB compatibility matrix. C#/.Net Driver Example\u00b6 var client = new MongoClient(\"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\"); var database = client.GetDatabase(\"test\"); Minimum Driver Version(s) 2.x series: Version 2.2 1.x series: Version 1.11 Important The .NET Core library does not support the SNI TLS extension on Linux and OSX. Applications using .NET Core on these operating systems cannot connect to a Atlas Free Tier cluster. The issue is tracked on the dotnet/corefx github page. To connect to an Atlas M0 (Free Tier) cluster, you must use a C#/.Net driver version that supports MongoDB 3.4. For complete documentation on compatibility between the C#/.Net driver and MongoDB, see the MongoDB compatibility matrix. Java Driver Example\u00b6 MongoClientURI uri = new MongoClientURI( \"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\"); MongoClient mongoClient = new MongoClient(uri); MongoDatabase database = mongoClient.getDatabase(\"test\"); Minimum Driver Version(s) 3.x Series: Version 3.2 2.x Series: Version 2.14 To connect to an Atlas M0 (Free Tier) cluster, you must use Java version 8 or greater and use a Java driver version that supports MongoDB 3.4. For complete documentation on compatibility between the Java driver and MongoDB, see the MongoDB compatibility matrix. Node.js Driver Example\u00b6 var MongoClient = require('mongodb').MongoClient; var uri = \"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\"; MongoClient.connect(uri, function(err, db) { db.close(); }); To connect to a database other than admin but still authenticate to the admin database, update the database component of the connection string. mongodb://username:password@host1:port1,...,hostN:portN/database?authSource=admin&... For example, the following connection string specifies test in the database component and includes the authSource=admin option. var uriTestDb = \"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/test?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\"; MongoClient.connect(uriTestDb, function(err, db) { db.close(); }); Minimum Driver Version(s) Version 2.1.0 To connect to an Atlas M0 (Free Tier) cluster, you must use a Node.js driver version that supports MongoDB 3.4. For complete documentation on compatibility between the Node.js driver and MongoDB, see the MongoDB compatibility matrix. Perl Driver Example\u00b6 my $client = MongoDB->connect(\"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\"); my $db = $client->get_database( 'test' ); Minimum Driver Version(s) Version 1.2.x To connect to an Atlas M0 (Free Tier) cluster, you must use a Perl driver version that supports MongoDB 3.4. For complete documentation on compatibility between the Perl driver and MongoDB, see the MongoDB compatibility matrix. PHP Driver Example\u00b6 The following example uses the MongoDB PHP Library which provides a high-level abstraction around the lower-level PHP driver: $client = new MongoDB\\Client( 'mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin'); $db = $client->test; Minimum Driver Version(s) PHP library 1.0+ Version mongodb-1.1 To connect to an Atlas M0 (Free Tier) cluster, you must use a PHP driver version that supports MongoDB 3.4. For complete documentation on compatibility between the PHP driver and MongoDB, see the MongoDB compatibility matrix. Python Driver Example\u00b6 client = pymongo.MongoClient(\"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\") db = client.test macOSX and Python 3.6 Installers The Python 3.6 installers for macOS from https://www.python.org do not automatically install any CA certificates. Without installed CA certificates, connections to Atlas will fail certificate verification. As such, after you have run the installer from https://www.python.org to install Python 3.6, you must run the following script to install an up-to-date CA certificates bundle in order to connect to Atlas: open \"/Applications/Python 3.6/Install Certificates.command\" For more information on Python 3.6 installers for macOS from https://www.python.org, see https://bugs.python.org/issue29065#msg283984. Earlier versions of Python as well as Python 3.6 installed by other means are not affected. Minimum Driver Version(s) Version 3.2 To connect to an Atlas M0 (Free Tier) cluster, you must use Python 2.7.9+ and use a Python driver version that supports MongoDB 3.4. For complete documentation on compatibility between the Python driver and MongoDB, see the MongoDB compatibility matrix. Ruby Driver Example\u00b6 client = Mongo::Client.new('mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin') To connect to a database other than admin but still authenticate to the admin database, update the database component of the connection string. mongodb://username:password@host1:port1,...,hostN:portN/database?authSource=admin&... For example, the following connection string specifies test in the database component and includes the authSource=admin option. client = Mongo::Client.new('mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/test?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin') Minimum Driver Version(s) Version 2.2 To connect to an Atlas M0 (Free Tier) cluster, you must use a Ruby driver version that supports MongoDB 3.4. For complete documentation on compatibility between the Ruby driver and MongoDB, see the MongoDB compatibility matrix. Mongoid Example\u00b6 production: # Configure available database clients. (required) clients: # Defines the default client. (required) default: # Defines the name of the default database that Mongoid can connect to. # (required). database: 'myDatabaseName' # Provides the hosts the default client can connect to. Must be an array # of host:port pairs. (required) hosts: - mycluster0-shard-00-00-wpeiv.mongodb.net:27017 - mycluster0-shard-00-01-wpeiv.mongodb.net:27017 - mycluster0-shard-00-02-wpeiv.mongodb.net:27017 options: # The name of the user for authentication. user: kay # The password of the user for authentication. password: myRealPassword # The database or source to authenticate the user against. If the database # specified above is not admin, admin MUST be specified here. auth_source: admin # All Atlas servers use SSL. (default: false) ssl: true Scala Driver Example\u00b6 val uri: String = \"mongodb://kay:myRealPassword@mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?ssl=true&replicaSet=Mycluster0-shard-0&authSource=admin\" System.setProperty(\"org.mongodb.async.type\", \"netty\") val client: MongoClient = MongoClient(uri) val db: MongoDatabase = client.getDatabase(\"test\") Minimum Driver Version(s) Version 1.1 To connect to an Atlas M0 (Free Tier) cluster, you must use a Scala driver version that supports MongoDB 3.4. For complete documentation on compatibility between the Scala driver and MongoDB, see the MongoDB compatibility matrix. \u2190 Connect to a Cluster Connect via Compass \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "The Connect dialog for a cluster provides the URI string to use to connect via the MongoDB drivers. To connect using the drivers, use the version(s) of the driver recommended for use with the version of your Atlas cluster.",
            "tags": ""
        },
        {
            "slug": "/free-tier-commands.html",
            "title": "Commands Available Only in Free Tier Clusters",
            "headings": [
                "Commands Available Only in Free Tier Clusters\u00b6",
                "atlasSize\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "Reference > Commands Available Only in Free Tier Clusters Commands Available Only in Free Tier Clusters\u00b6 On this page atlasSize The following command is specific to Atlas Free Tier clusters: atlasSize\u00b6 Returns the cumulative size across all databases in a Free Tier cluster for the following database statistics: { \"totals\": { \"collections\": [number-total-collections], \"views\": [number-total-views], \"objects\": [number-total-objects], \"avgObjSize\": [number-average-across-all], \"dataSize\": [number-total-dataSize], \"storageSize\": [number-total-storageSize], \"numExtents\": [number-total-numExtents], \"indexes\": [number-total-indexes], \"indexSize\": [number-total-indexSize], \"fileSize\": [number-total-fileSize], \"numDatabases\": [number-total-databases], \"indexSize\": [number-total-indexSize] }, \"atlasSize\": [number-total-data-plus-total-index-size], \"ok\": 1 } The atlasSize field represents the combination of the total size of data and indexes in the cluster. Example Request\u00b6 db.runCommand({atlasSize:1}) Example Response\u00b6 { \"totals\" : { \"collections\" : 11, \"views\" : 0, \"objects\" : NumberLong(530025), \"avgObjSize\" : 277.0923742138365, \"dataSize\" : NumberLong(532890980), \"storageSize\" : NumberLong(555319296), \"numExtents\" : NumberLong(0), \"indexes\" : 11, \"indexSize\" : NumberLong(4792320), \"fileSize\" : NumberLong(0), \"numDatabases\" : 4 }, \"atlasSize\" : NumberLong(537683300), \"ok\" : 1 } \u2190 Command Limitations in Free Tier Clusters Videos & Other Resources \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "The following command is specific to Atlas Free Tier clusters:",
            "tags": ""
        },
        {
            "slug": "/getting-started.html",
            "title": "Getting Started",
            "headings": [
                "Getting Started\u00b6",
                "Create an Atlas User Account\u00b6",
                "Create an Atlas Group\u00b6",
                "Enter the name of your new group.\u00b6",
                "Create a cluster.\u00b6"
            ],
            "text": "Getting Started\u00b6 On this page Create an Atlas User Account Create an Atlas Group Create an Atlas User Account\u00b6 To get started with Atlas, create your user account and log in to Atlas. If you are an existing MongoDB Cloud Manager user, you can use your Cloud Manager credentials. Note Similar to Cloud Manager, creating a user for Atlas also creates the user on jira.mongodb.org. If you later change the user\u2019s password or email address in Atlas, you will also change the password or email address in jira.mongodb.org. Once logged in, create an Atlas group. Create an Atlas Group\u00b6 Your group will manage your MongoDB deployments. You can give other Atlas users access to your group, allowing them to log into the group and manage your deployments. Once you log in to Atlas, create a new Atlas group (if you are an existing Cloud Manager user, you can create a new Atlas group from Cloud Manager; for details, see As an existing MongoDB Cloud Manager account holder, how do I create a new MongoDB Atlas group?): 1 Enter the name of your new group.\u00b6 Choose a name for your group. Note Only the group\u2019s owner can change the group name via Group Settings. Atlas takes you to the Clusters view to create your first MongoDB cluster or deployment. 2 Create a cluster.\u00b6 Follow the prompts to create the cluster. A MongoDB cluster can be either a replica set or a sharded cluster. For details, see Create a Cluster. Atlas provides an option to deploy one Free Tier replica set per group. Free Tier clusters use Atlas M0 instances and are an ideal development sandbox, providing access to a subset of Atlas features and functionality. Paid clusters use Atlas M10+ instances and provide full access to Atlas features, configuration options, and operational capabilities. An Atlas group can have multiple M10+ MongoDB clusters. The following table highlights key differences between an M0 Free Tier cluster and an M10+ paid cluster: Free Tier Cluster (M0 instance) Paid Cluster (M10+ instance) Scaling No Seamless cluster scaling Data Visualization No Atlas Data Explorer Metrics Limited Full metrics, including the Real Time Performance Tab VPC Peering (Amazon Web Services clusters only) No VPC Peering Connection wizard Global Region Selection No, Free Tier clusters are deployed in a US-based AWS datacenter. Atlas supports deploying clusters globally on Amazon Web Services, Google Cloud Platform, and Microsoft Azure Backups No Yes, including queryable backups Sharding No Yes, for clusters using an M30+ instance Dedicated Instance No, M0 Free Tier clusters run in a shared environment Yes, M10+ clusters deploy each mongod process to its own instance. For a complete list of Free Tier limitations, see Atlas M0 (Free Tier) Limitations. To create additional Atlas groups, click on your user name in the upper-right hand corner and select My Groups. Click the Add Group button. \u2190 MongoDB Atlas Create a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "To get started with Atlas, create your user account and log in to Atlas. If you are an existing MongoDB Cloud Manager user, you can use your Cloud Manager credentials.",
            "tags": ""
        },
        {
            "slug": "/group-settings.html",
            "title": "Group Settings",
            "headings": [
                "Group Settings\u00b6"
            ],
            "text": "Group Settings\u00b6 To modify group settings, click Settings, then Group Settings. Group settings apply to all the users in the group [1]. The Group ID displayed at the top of the page is used by the Atlas API. You can set the following: Setting Description Group Sets your group\u2019s name. Note Only the group\u2019s owner can change the group name. Group Time Zone Sets your group\u2019s time zone. This does not affect the timezones set for individual user accounts. [1] Collect Database Specific Statistics Allows you to enable or disable the collection of database statistics in cluster metrics. Enable Public API Allows you to access your group and its clusters through the Public API. Public Key for SCP Restores If you use Atlas Backup, this setting allows you to generate a public key for SCP backup restoration. If you restore a snapshot through SCP, Atlas uses the key to transmit the snapshot. PagerDuty Service Key Sets a default service key for alert notifications sent to a PagerDuty account. Atlas enters the key by default when you add a PagerDuty notification to an alert configuration. If you add PagerDuty notifications and if the key used to send the notifications becomes invalid, Atlas sends an email to the group owner and eventually removes the key. You can add PagerDuty notifications only for alerts that require user acknowledgement. Informational alerts, such as the alert that a user has joined a group, cannot use this notification method. Users can acknowledge PagerDuty alerts only from the PagerDuty dashboard. Flowdock Settings Sets default values for alert notifications sent to Flowdock. Atlas enters the values by default when you add a Flowdock notification to an alert configuration. If you add Flowdock notifications, and if credentials to send notifications become invalid, Atlas sends an email to the group owner and eventually removes the credentials. Set the following: Org Name The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Flow Name The flow name in lower-case letters. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name> API Token Your Flowdock \u201cpersonal API token\u201d found on the https://www.flowdock.com/account/tokens page of your Flowdock account. HipChat Settings Sets a default room and API token for alert notifications sent to a HipChat account. Atlas enters the values by default when you add a HipChat notification to an alert configuration. If you add HipChat notifications and the token used to send notifications becomes invalid, Atlas sends an email to the group owner and eventually removes the token. Slack Settings Sets a default channel and token for alert notifications sent to a Slack account. You can use either an API token or a Bot token. To create an API token, see the https://api.slack.com/web page in your Slack account. For information on Bot users in Slack, see https://api.slack.com/bot-users. Atlas enters these values by default when you add a Slack notification to an alert configuration. If add Slack notifications and the token used to send notifications becomes invalid, Atlas sends an email to the group owner and eventually removes the token. Webhook Settings Adds a Webhook URL endpoint to which Atlas can send alert notifications for programmatic processing. Atlas sends an alert notification as an HTTP POST request. The request body contains a JSON document that uses the same format as the Public API\u2019s Alerts resource. Atlas adds a request header called X-MMS-Event to distinguish between various alert states. The possible values for this header are: alert.open The alert was just opened. alert.close The alert was resolved. alert.update A previously opened alert is still open. alert.acknowledge The alert was acknowledged. alert.cancel The alert became invalid and was canceled. alert.inform Represents an informational alert, which is a point-in-time event, such as \u201cPrimary Elected.\u201d If you specify a key in the Webhook Secret field, Atlas adds the X-MMS-Signature request header, which contains the hex-encoded HMAC signature of the request body. The signature is created using the provided secret. To send alert notifications to a Webhook, select the Webhook notification option when creating or editing an alert. If you add a Webhook notification and the URL or optional key becomes invalid, Atlas sends an email to the group owner and eventually removes the Webhook settings. New Relic Settings Configures Atlas to send metric data about your deployment to New Relic for viewing through the New Relic MongoDB plugin. You can also use Insights for New Relic to run analytics on the collected data. Atlas sends New Relic the same metric data as displayed in Atlas cluster metrics. Enter the following information from your New Relic account. If you do not have an existing New Relic account, you can sign up using http://newrelic.com/mongodb. Account ID License Key Insights API Insert Key Insights API Query Key If any of the keys later become invalid, Atlas sends an email to the group owner and eventually removes the invalid credentials. [1](1, 2) To modify your user settings, click on your user name in the upper-right hand corner and select Account. \u2190 Billing FAQ \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "To modify group settings, click Settings, then Group Settings.",
            "tags": ""
        },
        {
            "slug": "/import.html",
            "title": "Import Data into Cluster",
            "headings": [
                "Import Data into Cluster\u00b6",
                "Data Import Programs\u00b6",
                "Import Strategies for Common Cluster Configurations\u00b6"
            ],
            "text": "Import Data into Cluster\u00b6 On this page Data Import Programs Import Strategies for Common Cluster Configurations Data Import Programs\u00b6 You can bring data from existing MongoDB deployments or JSON/CSV files into Atlas using one of the following: Program Use Case Live Migrate feature. To migrate from a MongoDB replica set into an Atlas cluster. Important The source MongoDB replica set must be version 3.0 or greater. Live Migrate does not import user/role data. mongomirror To migrate from a MongoDB replica set into an Atlas cluster. mongomirror does not require you to shut down your existing replica set or applications. Important The source MongoDB replica set must be version 3.0 or greater. mongomirror does not import user/role data. See the tutorial Migrate with mongomirror. mongorestore To seed an Atlas cluster with a BSON dump backup of an existing MongoDB deployment. Important mongorestore does not restore system.profile collection data. See the tutorial Seed with mongorestore. mongoimport To load data from a JSON or a CSV file into an Atlas cluster. Important mongoimport uses strict mode representation for certain BSON types See the tutorial Load File with mongoimport. You can also restore from an Atlas cluster backup data to another Atlas cluster. For information, see Restore a Cluster. Import Strategies for Common Cluster Configurations\u00b6 The following table covers the best import strategy for common cluster configurations: Cluster Configuration Import Strategy A replica set. Use Live Migrate. You must provide the hostname of the primary to the Live Migrate tool. If the cluster is not running MongoDB 3.0 or above, you must first upgrade it. You must have access to the primary node\u2019s oplog. If the cluster runs with authentication, you must have credentials that provide read access to the primary and its oplog. A \u201csingle shard\u201d sharded cluster in Compose. This is the standard configuration for new MongoDB deployments in Compose. Use Live Migrate. You must enable the oplog proxy. You must specify the hostname and credentials for the oplog proxy when connecting from Live Migrate. A standalone MongoDB node. Convert the standalone MongoDB to a single-node replica set and use Live Migrate. If the MongoDB is not running MongoDB 3.0 or above, you must upgrade it. If you are running with authentication enabled, you must have credentials that provide read access to the primary and its oplog. If you cannot convert the standalone to a replica set, use mongodump and mongorestore. See Seed with mongorestore. A shared multi-tenant cluster, or a cluster where you have no oplog access. Use mongodump and mongorestore. See Seed with mongorestore. If you are running with authentication enabled, you must have credentials that provide read access to the primary. A sharded cluster with multiple shards. If near-continuous uptime is a requirement, please contact MongoDB. From the Atlas UI, click Support. Fill out a Support ticket, noting your uptime requirements and cluster configuration in the More details text entry. If some downtime is OK, you may use mongodump and mongorestore. See Seed with mongorestore and Backup Sharded Cluster with Database Dumps. To migrate data from an M0 (Free Tier) cluster to a paid cluster, see Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster. Live Migrate Your Cluster to Atlas Migrate with mongomirror mongomirror Seed with mongorestore Load File with mongoimport Migrate M0 (Free Tier) to M10+ \u2190 Data Explorer Live Migrate Your Cluster to Atlas \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "You can bring data from existing MongoDB deployments or JSON/CSV files into Atlas using one of the following:",
            "tags": ""
        },
        {
            "slug": "/index.html",
            "title": "MongoDB Atlas",
            "headings": [
                "MongoDB Atlas\u00b6",
                "MongoDB Deployments\u00b6",
                "MongoDB Versions\u00b6",
                "Deployment\u00b6",
                "Atlas Group\u00b6",
                "Security\u00b6",
                "Support\u00b6",
                "Next Steps\u00b6",
                "Additional Resources\u00b6"
            ],
            "text": "MongoDB Atlas\u00b6 What\u2019s New in Atlas Available in Beta: MongoDB Stitch. MongoDB Stitch is a backend as a service that provides an HTTP API to MongoDB, integration with other services, and a declarative rules infrastructure which spans database and service actions. Ability to restore to clusters in different group. Support for deploying clusters on the Google Cloud Platform and Microsoft Azure Updates to the UI design. Group Name Improvements: Remove restriction that required a globally unique Group Name. Ability to rename Group by the Group owner. Video Series Available Tutorial Series [Video]: Getting Started with MongoDB Atlas MongoDB Atlas is a cloud service for running, monitoring, and maintaining MongoDB deployments, including the provisioning of dedicated servers for the MongoDB instances. In addition, Atlas provides the ability to introspect collections, query backups, and migrate data from existing MongoDB replica set into an Atlas cluster. MongoDB Deployments\u00b6 MongoDB deployments, or \u201cclusters\u201d in Atlas, can be either a replica set or a sharded cluster. MongoDB Versions\u00b6 Atlas supports MongoDB 3.2 and MongoDB 3.4 with the WiredTiger storage engine. By default, Atlas uses MongoDB 3.4. You can specify the MongoDB version when you create a cluster. If a created cluster uses MongoDB 3.2, you can upgrade to MongoDB 3.4 when you scale a cluster. As new maintenance releases become available, Atlas automatically upgrades to these releases via a rolling process to maintain cluster availability. If the workload on the Atlas cluster is such that it impedes operations, including the ability to scale, MongoDB Atlas may, in some situations, create indexes in your cluster as a safeguard. Deployment\u00b6 Atlas deploys mongod process to its own instance. For sharded clusters, the six routers (the mongos processes) run on six of the shard servers; i.e. each of the six mongos processes shares an instance with one mongod process. Depending on the cloud provider and region selected for the Atlas group, Atlas distributes each cluster across the region for high availability. For more information on how Atlas manages cluster distribution, see Amazon Availability Zones for AWS, GCP Zones for GCP, and Azure Fault Domains for Azure. Atlas deploys each cluster with mandatory security. Atlas Group\u00b6 Your Atlas group manages your MongoDB deployments. An Atlas group can have multiple MongoDB clusters. When Atlas deploys an Atlas group\u2019s first M10+ paid cluster, Atlas also creates a VPC specific to the cloud service provider and region selected for the cluster. Atlas associates all subsequent clusters deployed in the group to this VPC, locking them to the cloud service provider and region. Atlas also sets a default VPC CIDR block address for the group. For clusters deployed on Amazon Web Services, Atlas supports creating VPC peering connections between your Atlas clusters and other AWS VPCs in the same region. If you need a specific Atlas VPC CIDR block address, configure a VPC peering connection before creating your first M10+ cluster. For Atlas clusters deployed on Google Cloud Platform or Microsoft Azure, add the IP addresses of your GCP or Azure services to Atlas group IP whitelist to grant those services access to the cluster. Security\u00b6 Atlas secures your deployments through the use of TLS/SSL, virtual private cloud (VPC) subnet with IP whitelists, and user authentication and authorization. Support\u00b6 Atlas provides support for the use of the service itself. Support for development and performance of the database itself requires a MongoDB subscription. For details, contact MongoDB Inc.. Next Steps\u00b6 To get started, see Getting Started. Additional Resources\u00b6 For more resources, see Videos & Other Resources. Getting Started Create a Cluster Security Features and Setup Add Entries to the Whitelist Add MongoDB Users Set up VPC Peering Connection Set up Two Factor Authentication Connect to a Cluster Connect via Driver Connect via Compass Connect via mongo Shell Data Explorer Import Data into Cluster Live Migrate Your Cluster to Atlas Migrate with mongomirror mongomirror Seed with mongorestore Load File with mongoimport Migrate M0 (Free Tier) to M10+ Scale a Cluster MongoDB Stitch MongoDB Reference Monitoring and Alerts Monitor a Cluster Respond to Alerts Configure Alert Settings Alert Conditions Alert Resolutions Query Targeting Back Up a Cluster Query a Backup Snapshot Restore a Cluster Billing Group Settings FAQ API Configure Atlas API Access API Resources Root Group IP Whitelist Database Users Get All Database Users Get a Single Database User Create a Database User Update a Database User Delete a Database User Clusters Get All Clusters Get a Single Cluster Create a Cluster Modify a Cluster Delete a Cluster Alerts Get All Alerts Get an Alert Acknowledge an Alert Alert Configurations Get All Alert Configurations for a Group Create an Alert Configuration Get an Alert Configuration Update an Alert Configuration Enable/Disable Alert Configuration Delete an Alert Configuration Get Open Alerts for Alert Configuration VPC Get a List of Cloud Services Containers Create a New Container Get a Specific Container Update a Container Get a List of VPC Peering Connections Create a New VPC Peering Connection Get a Specific VPC Peering Connection Update an Existing VPC Peering Connection Delete an Existing VPC Peering Connection User API Whitelist Reference Amazon Web Services Google Cloud Platform Microsoft Azure Command Limitations in Free Tier Clusters Commands Available Only in Free Tier Clusters Videos & Other Resources Getting Started \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "MongoDB Atlas is a cloud service for running, monitoring, and maintaining MongoDB deployments, including the provisioning of dedicated servers for the MongoDB instances. In addition, Atlas provides the ability to introspect collections, query backups, and migrate data from existing MongoDB replica set into an Atlas cluster.",
            "tags": ""
        },
        {
            "slug": "/mongo-shell-connection.html",
            "title": "Connect via mongo Shell",
            "headings": [
                "Connect via mongo Shell\u00b6",
                "Prerequisites\u00b6",
                "Connect to Your Cluster\u00b6"
            ],
            "text": "Connect to a Cluster > Connect via mongo Shell Connect via mongo Shell\u00b6 On this page Prerequisites Connect to Your Cluster The Connect dialog for a cluster provides the details to connect to a cluster via the mongo shell. To connect using the mongo, For MongoDB 3.2 clusters, use the 3.2.6 or later version with TLS/SSL support. For MongoDB 3.4 clusters, use the 3.4 version mongo shell with TLS/SSL support. If you do not have the appropriate version of the mongo shell, you can download it from the Connect dialog. You can also download the Server package, which includes the mongo shell, from the Download Center [1]. [1]If downloading the version 3.2.6 Server package for OSX, do not use homebrew to install the the package for use with Atlas; instead, download the *.tgz or *.zip file. Prerequisites\u00b6 TLS/SSL Clients must have support for TLS/SSL to connect to an Atlas cluster. Clients must have support for the SNI TLS extension to connect to an Atlas M0 Free Tier cluster. Whitelist To access a cluster, you must connect from an IP address on the Atlas group\u2019s IP whitelist. If you need to add an IP address to the whitelist, you can do so in the Connect dialog. You can also add the IP address from the Security tab. Connect to Your Cluster\u00b6 Use the displayed connection details from the Connect dialog to connect your mongo shell to the cluster. Specify the password for your user. For example: mongo \"mongodb://mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/admin?replicaSet=Mycluster0-shard-0\" --ssl --username kay --password 'atlasP@$$assw0Rd' To connect with a different MongoDB user, update the user name and password. To connect to a database other than admin but still authenticate to the admin database, include the --authenticationDatabase admin command-line option and update the database component of the connection string For example, to connect to the test database and authenticate to admin: mongo \"mongodb://mycluster0-shard-00-00-wpeiv.mongodb.net:27017,mycluster0-shard-00-01-wpeiv.mongodb.net:27017,mycluster0-shard-00-02-wpeiv.mongodb.net:27017/test?replicaSet=Mycluster0-shard-0\" --ssl --username kay --password 'atlasP@$$assw0Rd' --authenticationDatabase admin \u2190 Connect via Compass Data Explorer \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "The Connect dialog for a cluster provides the details to connect to a cluster via the mongo shell. To connect using the mongo,",
            "tags": ""
        },
        {
            "slug": "/mongodb-reference.html",
            "title": "MongoDB Reference",
            "headings": [
                "MongoDB Reference\u00b6"
            ],
            "text": "MongoDB Reference\u00b6 For a comprehensive documentation of MongoDB, refer to the MongoDB Manual. The following sections in the manual provide some starting points for developing with MongoDB. Sections Description Introduction Introduction to MongoDB, including: Databases and Collections Documents CRUD and Aggregation Create, Read, Update, Delete and Aggregation operations with MongoDB, including: Insert Documents Query Documents Update Documents Remove Documents Aggregation Framework Indexes Indexes and indexing strategies. If the workload on the Atlas cluster is such that it impedes operations, including the ability to scale, MongoDB Atlas may, in some situations, create indexes in your cluster as a safeguard. Data Modeling Data model design and examples with MongoDB. Replica Sets Introduction to replica sets. Sharded Clusters Sharded clusters and considerations for sharding, including: Introduction to Sharding Enable Sharding for a Database Shard a Collection Available Drivers List of available MongoDB drivers. \u2190 Scale a Cluster Monitoring and Alerts \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "For a comprehensive documentation of MongoDB, refer to the MongoDB Manual. The following sections in the manual provide some starting points for developing with MongoDB.",
            "tags": ""
        },
        {
            "slug": "/monitor-cluster-metrics.html",
            "title": "Monitor a Cluster",
            "headings": [
                "Monitor a Cluster\u00b6",
                "Metrics Displayed in the Clusters View\u00b6",
                "View All Metrics\u00b6",
                "Sharded Cluster Metrics\u00b6",
                "Replica Set Metrics\u00b6",
                "Real-Time Tab\u00b6",
                "Status Tab\u00b6",
                "Hardware Tab\u00b6",
                "DB Stats Tab\u00b6",
                "Chart Controls\u00b6"
            ],
            "text": "Monitoring and Alerts > Monitor a Cluster Monitor a Cluster\u00b6 On this page Metrics Displayed in the Clusters View View All Metrics Atlas collects and displays metrics for your servers, databases, and MongoDB processes. Atlas displays three charts in the Clusters view and additional charts in the Metrics view. Note Free Tier clusters have limited available metrics. For more information, see Atlas M0 (Free Tier) Limitations. Metrics Displayed in the Clusters View\u00b6 The Clusters view displays charts that monitor your disk usage, IOPS, and database operations. If the collected metrics indicate you need to add capacity to your cluster, see Scale a Cluster. From the Clusters view you can see the following: Chart Data Disk Usage The total bytes of used disk space for the cluster. For a replica set, the chart displays disk use on the server that hosts the primary. For a sharded cluster, the chart displays the sum of disk usage on all servers that host a primary. The top line of the chart shows the maximum storage capacity on the server or servers. To view disk use on a specific server in the cluster, click the server\u2019s name, then click the Hardware tab, and then locate the Disk Space Used chart. Disk IOPS The input/output operations per second (IOPS) for the cluster. Each point on the chart is the sum of read IOPS and write IOPS. For a replica set, the chart shows IOPS for the primary. For a sharded cluster, the chart shows the sum of the IOPS on all primaries in the sharded cluster. The top line of the chart shows the maximum IOPS configured for the server or servers. To view IOPS for a specific server in the cluster, click the server\u2019s name, then click the Hardware tab, and then locate the Disk IOPS chart. Operations The aggregated read and write operations for the cluster\u2019s databases. The Read line aggregates all query and getMore operations. The Write line aggregates update, delete, and insert operations. For a replica set, the chart shows operations for the primary. For a sharded cluster, the chart shows the sum of the operations on all primaries in the sharded cluster. To view a specific operation by server, click the server\u2019s name to open the server\u2019s metrics. Click the Status tab. Select the Display Opcounters on Separate Charts checkbox to display operations on separate charts. Deselect the checkbox to display operations on a single Opcounters charts. View All Metrics\u00b6 To view metrics, locate the cluster on the Clusters tab and click Metrics. Atlas displays metrics at the granularity last selected. You can select different granularities. To add or remove charts, click either the Display or Add Chart drop-down list, depending on which is available. To display chart controls, hover the mouse pointer over the chart. To view metrics at a different level of the cluster topology, use the breadcrumb. For more information on chart metrics, see the following on this page: Sharded Cluster Metrics Replica Set Metrics Real-Time Tab Status Tab Hardware Tab DB Stats Tab Chart Controls Sharded Cluster Metrics\u00b6 When you view metrics for a sharded cluster, you choose to display either shards, mongos instances, or config servers. When displaying shards, you can use the buttons below the chart to select primaries, secondaries, or both. Atlas displays different processes as different lines. To sum or average the data, click the Display Data drop-down list and select the desired option. To change charts, click the Display drop-down list. Replica Set Metrics\u00b6 When you view metrics for a replica set, you can limit the display to particular member types using the P, S, and A options. Real-Time Tab\u00b6 Availability Real-time metrics is available for the owners of the group. Click the Real-Time tab to display various real-time metrics. You can view the stats in either Table view or the Graph view. Table View\u00b6 Fields Description Resident Virtual Mapped Displays the resident/virtual/mapped memory stats as reported by mongostat. For a description of the fields, see mongostat. Bytes In Bytes Out Connections Displays the connection stats (number of bytes in, number of bytes out, number of connections) as reported by mongostat. For a description of the fields, see mongostat. Commands Queries Updates Deletes Inserts GetMores Displays the number of the specified operations (commands, queries, etc.) as reported by mongostat. For a description of the fields, see mongostat. Active Readers Active Writers Queued Readers Queued Writers Displays the number of active reads, queued reads, active writes, queued writes as reported by mongostat. For a description of the fields, see mongostat. Click on the elipsis button (...) to hide or display fields from the table. Graph View\u00b6 Chart/Table Description Memory Displays the memory stats as reported by mongostat. For a description of the fields, see mongostat. Network Displays the connection stats as reported by mongostat. For a description of the fields, see mongostat. Operations Displays the number of operations as reported by mongostat. For a description of the fields, see mongostat. Reads & Writes Displays the number of active reads, queued reads, active writes, queued writes as reported by mongostat. For a description of the fields, see mongostat. Hottest Collections Displays the collections with the most operations as reported by mongotop. For each hot collection, the table also displays the Scaled Load percentage for the collection. Scaled Load is calculated from the read and write times as reported by mongotop during a sample period. Specifically, the Scaled Load is the percentage (rounded to the nearest 0.1%) of the read and write times for a collection relative to the read and write times for all collections in the deployment during the sample period. If no read and write operation occur during this period, the Scaled Load may be 0%. The hottest collections correspond to the most current time displayed in the charts. That is, if the display is running (i.e. not paused), the collections correspond to the hottest collections at the current timestamp. If the display is paused, the collections correspond to the hottest collections at the paused time. Slowest Operations Displays the slowest operations as reported by db.currentOp(). The operations correspond to the most current time displayed in the charts. That is, if the display is running (i.e. not paused), the operations correspond to the slowest operations at the current timestamp. If the display is paused, the operations correspond to the slowest operations at the paused time. To view the JSON document as reported by db.currentOp() for the operation, click on the operation. To hide/show a metric in the graph, click on the color box for the metric. Stop and Restart Display\u00b6 To stop the update of the stats displayed, click the Pause button. The Pause button only stops the update of the displays and does not pause the collection of the underlying data. To restart the display updates, click Play. Status Tab\u00b6 This tab displays the process metrics Atlas collects from the selected mongod or mongos process. Atlas collects a subset of the output of the MongoDB serverStatus command. See serverStatus in the MongoDB manual. Hardware Tab\u00b6 Atlas collects the following hardware metrics for your mongod and mongos processes: Chart Data System CPU The CPU usage of all processes (not just MongoDB processes) on the host partition. For partitions with more than 1 CPU core, this value can exceed 100%. Normalized System CPU The CPU usage of all processes (not just MongoDB processes) on the host partition, scaled to a range of 0-100% by dividing by the number of CPU cores. Process CPU The CPU usage of the MongoDB process. For partitions with more than 1 CPU core, this value can exceed 100%. Normalized Process CPU The CPU usage of the MongoDB process, scaled to a range of 0-100% by dividing by the number of CPU cores. Disk Space Free The total bytes of free disk space on the disk partition used by MongoDB. Util % The percentage of time during which requests are being issued to and serviced by the partition. This includes requests from any process, not just MongoDB processes. Disk IOPS The throughput of I/O operations per second for the disk partition used by MongoDB. Disk Space Percent Free The percent of free disk space on the partition used by MongoDB. Disk Latency The latency in milliseconds of the partition used by MongoDB. Disk Space Used The total bytes of used disk space on the partition that runs MongoDB. DB Stats Tab\u00b6 This tab displays database metrics Atlas collects through the MongoDB dbStats command. Atlas collects a subset of dbStats output. See dbStats in the MongoDB manual. Atlas retrieves database metrics every 20 minutes by default but adjusts frequency when necessary to reduce the impact on database performance. If the collection of database statistics still affects performance, you can disable collection by clicking Settings, then Group Settings, and then setting Collect Database Specific Statistics to No. To select which database to display, click the Select Database drop-down list. Chart Controls\u00b6 When viewing charts, you can do the following: Task Action View a chart\u2019s description. Click the i icon next to the chart name. (Not available for cluster-level chart) Expand a chart. Click the two-way arrow at the top right of the chart. Zoom in on a period of time. Click and drag the mouse pointer over a portion of the chart. To reset, double-click the chart. Note When you zoom, the time selections above the charts automatically update to reflect the new period displayed. View point-in-time statistics. Hover the mouse pointer over a point on the chart. Move a chart. Click and hold the grabber in the upper left corner of the chart, and drag the chart to the new position. Export the charts. Click the Export drop-down list and select the format. Link to a chart. Click the curved arrow on the chart and select Chart Permalink. Email the chart. Click the curved arrow on the chart and select Email Chart. \u2190 Monitoring and Alerts Respond to Alerts \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas collects and displays metrics for your servers, databases, and MongoDB processes. Atlas displays three charts in the Clusters view and additional charts in the Metrics view.",
            "tags": ""
        },
        {
            "slug": "/monitoring-alerts.html",
            "title": "Monitoring and Alerts",
            "headings": [
                "Monitoring and Alerts\u00b6",
                "Introduction\u00b6",
                "Performance Metrics\u00b6",
                "Alerts\u00b6",
                "MongoDB Logs\u00b6",
                "Navigate to the Cluster page.\u00b6",
                "Download Logs.\u00b6",
                "In the Select Date Range modal, edit the necessary fields:\u00b6",
                "Click Download Logs.\u00b6"
            ],
            "text": "Monitoring and Alerts\u00b6 On this page Introduction Performance Metrics Alerts MongoDB Logs Introduction\u00b6 Atlas provides the following ways to monitor your cluster\u2019s performance. Performance Metrics\u00b6 Atlas collects and displays metrics on the state of your cluster\u2019s databases and on server usage. Metrics provide an indication of when you must modify your database configuration or add server capacity. See Monitor a Cluster. Alerts\u00b6 Atlas notifies you when your database operations or server usage reach thresholds that affect your cluster\u2019s performance. See: Respond to Alerts Configure Alert Settings MongoDB Logs\u00b6 Each mongod and mongos instance keeps an account of its activity in its own log file. Atlas retains the last five days of log messages for each instance in a cluster. To download the logs for a single instance in a given cluster: 1 Navigate to the Cluster page.\u00b6 If you do not see the cluster you want on the page, ensure you have selected the proper Group. 2 Download Logs.\u00b6 Click the cluster. Click the instance. Click the More tab. Click Download Logs. 3 In the Select Date Range modal, edit the necessary fields:\u00b6 Important If you have not set a group time zone, the returned log data may not respect the configured date range. See Group Settings. Field Content Start Time The date and time in your group\u2019s time zone defining the inclusive lower bound of log activity to return. End Time The date and time in your group\u2019s time zone defining the inclusive upper bound of log activity to return. 4 Click Download Logs.\u00b6 For information on reading MongoDB logs, refer to the Log Messages documentation in the MongoDB manual. Monitor a Cluster Metrics Displayed in the Clusters View View All Metrics Sharded Cluster Metrics Replica Set Metrics Real-Time Tab Table View Graph View Stop and Restart Display Status Tab Hardware Tab DB Stats Tab Chart Controls Respond to Alerts Introduction View Alerts Acknowledge Alerts Increase Cluster Capacity View All Activity Configure Alert Settings Introduction Default Alert Settings Notification Options Configure an Alert Click Alerts. Choose whether to clone an existing alert setting as a template. Select the condition that triggers the alert. Apply the alert only to specific targets. (Optional) Select the alert recipients and delivery methods. Click Save. Delete or Disable an Alert Alert Conditions Introduction Host Alerts Asserts Opcounter Opcounter - Repl Atlas Free Tier Memory Connections Queues Page Faults Cursors Network Replication Oplog DB Storage WiredTiger Storage Engine System and Disk Alerts Inapplicable Host Conditions Query Targeting Alerts Replica Set Alerts Sharded Cluster Alerts Backup Alerts User Alerts Group Alerts Billing Alert Alert Resolutions Query Targeting Description Common Triggers Possible Solution \u2190 MongoDB Reference Monitor a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas provides the following ways to monitor your cluster\u2019s performance.",
            "tags": ""
        },
        {
            "slug": "/query-backup.html",
            "title": "Query a Backup Snapshot",
            "headings": [
                "Query a Backup Snapshot\u00b6",
                "Considerations\u00b6",
                "Query Backup (Use Tunnel to Connect)\u00b6",
                "Go to Backup view and click the Overview tab.\u00b6",
                "Follow the prompts to query a backup snapshot.\u00b6",
                "Query Backup (Handle TLS and Authentication Manually)\u00b6",
                "Go to Backup view and click the Overview tab.\u00b6",
                "Follow the prompts to query a backup snapshot.\u00b6"
            ],
            "text": "Back Up a Cluster > Query a Backup Snapshot Query a Backup Snapshot\u00b6 Atlas provides queryable backups. This functionality allows you to query specific backup snapshot. You can use the queryable backups to: Restore a subset of data within the MongoDB cluster. Compare previous versions of data against the current data. Identify the best point in time to restore a system by comparing data from multiple snapshots. Considerations\u00b6 Atlas provisions these queryable snapshots as read-only MongoDB instances. Important These instances are available for up to 24 hours. Query restrictions: You cannot run map-reduce operations. You cannot run queries that requires disk usage, such as running aggregation with the allowDiskUse option to perfrom large sort operations. Connections to these instances are over TLS/SSL and require a X.509 authentication. Atlas provides: An executable to create a tunnel which handles the connection, including the TLS/SSL and the X.509 authentication. X.509 certificates if you want to handle the connection details manually, including the TLS/SSL and the X.509 authentication. Query Backup (Use Tunnel to Connect)\u00b6 Note The tunnel handles the security (TLS/SSL and X.509 authentication) for connecting to the instance. 1 Go to Backup view and click the Overview tab.\u00b6 For the cluster whose backup you want to query, click the ellipsis button under Options column and select Query. You can also click the cluster to view its snapshots and click the Query button under the Actions column. 2 Follow the prompts to query a backup snapshot.\u00b6 Select the snapshot to query and click Next. Start the process to query a snapshot. If prompted for your password, enter your password to verify. Select Backup Tunnel as the connection method to the queryable snapshot. Select your Platform and download. Uncompress the downloaded file. Open a terminal or command prompt and go to the uncompressed <tunnel> directory. Run the executable to start the tunnel. The default port for the tunnel is 27017. To change the port, use the --local flag, as in the following example: ./<tunnel executable> --local localhost:27020 Note If you change the port, you must include the port information when connecting. Use the mongo shell or a MongoDB driver to connect to the backup via the tunnel. If connecting locally from the same machine as where the tunnel is running, you do not need to specify a connection string or host information. Otherwise, specify a connection string or host information for the machine where the tunnel is running. If you have changed the port that the tunnel is listening on, you must specify the port information when connecting. Tip Once you have finished querying this snapshot, you can terminate the queryable instance: Go to the Restore History and hover over the Status column for the cluster. Click Cancel. Query Backup (Handle TLS and Authentication Manually)\u00b6 Note The X.509 certificates are valid for 24 hours. 1 Go to Backup view and click the Overview tab.\u00b6 For the cluster whose backup you want to query, click the ellipsis button under Options column and select Query. You can also click the cluster to view its snapshots and click the Query button under the Actions column. 2 Follow the prompts to query a backup snapshot.\u00b6 Select the snapshot to query and click Next. Start the process to query a snapshot. If prompted for your password, enter your password to verify. Select Connect Manually as the connection method to the queryable snapshot. Download the X.509 client PEM file. Download the Certificate Authority (CA) PEM file. Use the mongo shell or a MongoDB driver to connect to the queryable backup host. To connect, you must specify the hostname and port, the TLS/SSL option, and the X.509 certificates. For example, if using the mongo shell to connect to the instance:s mongo my-queryable-backup-host.mongodb.com:27217 --ssl --sslPEMKeyFile <client certificate> --sslCAFile mms-backup-ca.pem Tip Once you have finished querying this snapshot, you can terminate the queryable instance: Go to the Restore History and hover over the Status column for the cluster. Click Cancel. \u2190 Back Up a Cluster Restore a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas provides queryable backups. This functionality allows you to query specific backup snapshot. You can use the queryable backups to:",
            "tags": ""
        },
        {
            "slug": "/reference.html",
            "title": "Reference",
            "headings": [
                "Reference\u00b6"
            ],
            "text": "Reference\u00b6 Amazon Web Services Google Cloud Platform Microsoft Azure Command Limitations in Free Tier Clusters Commands Available Only in Free Tier Clusters \u2190 User API Whitelist Amazon Web Services \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/respond-to-alerts.html",
            "title": "Respond to Alerts",
            "headings": [
                "Respond to Alerts\u00b6",
                "Introduction\u00b6",
                "View Alerts\u00b6",
                "Acknowledge Alerts\u00b6",
                "Increase Cluster Capacity\u00b6",
                "View All Activity\u00b6"
            ],
            "text": "Monitoring and Alerts > Respond to Alerts Respond to Alerts\u00b6 On this page Introduction View Alerts Acknowledge Alerts Increase Cluster Capacity View All Activity Introduction\u00b6 Atlas issues alerts for the database and server conditions configured in your alert settings. When a condition triggers an alert, Atlas displays a warning symbol on the cluster and sends alert notifications. Your alert settings determine the notification methods. Atlas continues sending notifications at regular intervals until the condition resolves or you delete or disable the alert. View Alerts\u00b6 To view an alert, click the Alerts tab. Acknowledge Alerts\u00b6 To acknowledge an alert, click the Alerts tab, locate the alert, and click Acknowledge. If an alert uses PagerDuty for alert notifications, you can acknowledge the alert only on your PagerDuty dashboard. When you acknowledge an alert, Atlas sends no further notifications until either the acknowledgement period ends, you resolve the alert condition, or you unacknowledge alert. If an alert condition ends during an acknowledgment period, Atlas sends a notification. Increase Cluster Capacity\u00b6 To resolve an alert by increasing your cluster\u2019s capacity, see Scale a Cluster. View All Activity\u00b6 To view cluster events, click the Alerts tab, then click All Activity. You can filter the list by date and by activity type. To download the list, click the Download Activity Feed button. \u2190 Monitor a Cluster Configure Alert Settings \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas issues alerts for the database and server conditions configured in your alert settings. When a condition triggers an alert, Atlas displays a warning symbol on the cluster and sends alert notifications. Your alert settings determine the notification methods. Atlas continues sending notifications at regular intervals until the condition resolves or you delete or disable the alert.",
            "tags": ""
        },
        {
            "slug": "/restore-cluster.html",
            "title": "Restore a Cluster",
            "headings": [
                "Restore a Cluster\u00b6",
                "Restore a Cluster\u00b6"
            ],
            "text": "Restore a Cluster\u00b6 Note This feature is not available for Free Tier clusters. For more information, see Atlas M0 (Free Tier) Limitations. Atlas lets you restore data from a scheduled snapshot or from a selected point between snapshots. For replica sets, you can restore from selected points in time. For sharded clusters you can restore from checkpoints between snapshots. For information on backup, Back Up a Cluster. Restore a Cluster\u00b6 To restore a cluster: Click Backup in the left-hand navigation. The Overview lists the group\u2019s clusters. If the cluster has backup enabled, its Status is Active. If the cluster has backup disabled, its Status is Inactive. Select a cluster\u2019s snapshot to use for the restore. Hover over the Active status of the cluster and click Restore or Download. Alternatively, you can click the ... button for the cluster and select the Restore. Follow the prompts to restore your cluster. You may choose to: Download your backup data via HTTPS and restore manually. - or - Have Atlas restore to a selected cluster. Atlas can only restore to a cluster of the same type (i.e. replica set to replica set or sharded cluster to sharded cluster). Note The MongoDB versions must also be compatible. For instance, you cannot restore from a snapshot of a 3.4 cluster to a 3.2 cluster. You can choose to restore to a cluster of a different group: To restore to another Atlas group, you must have Group Owner role for the destination group. To restore to a Cloud Manager group, you must have Automation Admin or Backup Admin role for the destination group. In the prompt for destination, specify the group and select one of its clusters. The restore process requires downtime for the target cluster. \u2190 Query a Backup Snapshot Billing \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas lets you restore data from a scheduled snapshot or from a selected point between snapshots. For replica sets, you can restore from selected points in time. For sharded clusters you can restore from checkpoints between snapshots. For information on backup, Back Up a Cluster.",
            "tags": ""
        },
        {
            "slug": "/scale-cluster.html",
            "title": "Scale a Cluster",
            "headings": [
                "Scale a Cluster\u00b6",
                "Considerations\u00b6",
                "Scale an Existing Cluster\u00b6",
                "Go to the Clusters view.\u00b6",
                "Modify the cluster configuration.\u00b6",
                "Click Confirm & Deploy.\u00b6"
            ],
            "text": "Scale a Cluster\u00b6 Note This feature is not available for Free Tier clusters. For more information, see Atlas M0 (Free Tier) Limitations. For an existing Atlas cluster in your group, you can modify: the instance size. the replication factor. the cluster topology from a replica set to a sharded cluster. the number of shards for a sharded cluster. the enabling or disabling of backup. the MongoDB version of a cluster running 3.2 to 3.4. Considerations\u00b6 Some configuration changes require migration to new servers; e.g. changing the instance size. Depending on the amount of data to migrate, migrations can take a significant amount of time. To maximize availability: For a replica set, Atlas migrates one member at a time, starting with the secondary members first and then the primary. For a sharded cluster, Atlas performs the migration of the shards independently of each other. For each shard (i.e. replica set), Atlas migrates one member at a time, starting with the secondary members first and then the primary. Downtime occurs during the migration of the primary when the current primary becomes unavailable and lasts until the election of a new primary, generally under a minute. Migration can affect performance if your primary is already reaching operational capacity: each newly migrated replica set member must perform an initial sync from the primary, adding to the operational load. Migrations can also affect performance if read preferences are set to read from secondaries: the replica set is down one secondary during the migration. If the workload on the Atlas cluster is such that it impedes operations, including the ability to scale, MongoDB Atlas may, in some situations, create indexes in your cluster as a safeguard. Scale an Existing Cluster\u00b6 1 Go to the Clusters view.\u00b6 For the cluster you want to modify, click the ellipses ... icon, then select Edit Configuration. Alternatively, if you are already viewing the specific cluster, click the Configuration button. Atlas displays the configuration screen for the cluster. 2 Modify the cluster configuration.\u00b6 For an existing cluster, you can modify the fields listed in the table below. As you make changes, Atlas displays the updated costs. Note Atlas deploys mongod process to its own instance. For sharded clusters, the six routers (the mongos processes) run on six of the shard servers; i.e. each of the six mongos processes shares an instance with one mongod process. Option Description MongoDB Version You can upgrade a cluster running MongoDB 3.2 to MongoDB 3.4. Atlas always upgrades the cluster to the latest stable release of the specified version. Important You cannot downgrade an existing cluster from MongoDB 3.4 to MongoDB 3.2. Instance Size You can change the memory, storage, and IOPS (speed) specification. Atlas provides various instance sizes to support different use cases: For development environments and low traffic websites, M0, M10 and M20 instance sizes. For production environments that support high traffic applications or large datasets, M30 or larger instances sizes. For a sharded cluster, the selected instance size must be M30 or larger. Each instance size comes with a default set of resources. Depending on the selected cloud service provider and instance size, Atlas can provide the following configuration options: Custom Storage Capacity: The size of the server root volume. Changes to storage capacity affects cost. Custom Storage Speed: The input/output operations per second (IOPS) the system can perform. Changes to storage speed affects cost. Use encrypted storage volumes: Encrypts root volume for data at rest inside the volume and all data moving between the volume and the instance. For more information on the default resources and available configuration options for each cloud service provider, see: AWS Configuration Options GCP Configuration Options Azure Configuration Options. See also Connection Limits and Instance Sizes Replication Factor You can change the number of members in your cluster\u2019s replica set. Atlas deploys replica set members across the cluster\u2019s region. For more information, see Amazon Availability Zones for AWS, GCP Zones for GCP, or Azure Fault Domains for Azure. The number of availability zones, zones, or fault domains in a region has no affect on the number of MongoDB nodes Atlas can deploy. MongoDB Atlas clusters are always made of replica sets with a minimum of three MongoDB nodes. Each member of the replica set runs on a separate instance. For details on how the number of server instances affects cost, see Number of Servers. If your deployment is a sharded cluster, each shard is a replica set, and the replica factor determines the number of members in each shard replica set. For more information on replica sets, see Replication in the MongoDB manual. Do you want a sharded cluster? If your cluster is a replica set, you can change the deployment to a sharded cluster. Sharded clusters support horizontal scaling. For a sharded cluster, the selected instance size must be M30 or larger. Atlas deploys each shard as a replica set, consisting of the number of members specified by the replication factor. The shard servers have the selected instance size. Atlas deploys the config servers as a three-member replica set. The config servers run on M30 instances. Atlas deploys six routers (mongos programs) for a sharded cluster. Atlas runs the routers on the shard servers. For details on how the number of server instances affects cost, see Number of Servers. For more information on sharded clusters, see Sharding in the MongoDB manual. Important Changing to a sharded cluster requires a new connection string for accessing MongoDB. For the new connection string, see Connect to a Cluster after the changes are deployed. You must update your applications to use the new string. Number of Shards This field appears only if the value for Do you want a sharded cluster? is Yes. You can increase or decrease the number of shards. You cannot have fewer than two shards. Do you want to enable backup? If enabled, Atlas takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. You can restore a backup to the same cluster or any cluster in your group that has the same topology. 3 Click Confirm & Deploy.\u00b6 \u2190 Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster MongoDB Reference \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "For an existing Atlas cluster in your group, you can modify:",
            "tags": ""
        },
        {
            "slug": "/security-add-mongodb-users.html",
            "title": "Add MongoDB Users",
            "headings": [
                "Add MongoDB Users\u00b6",
                "Add MongoDB Users\u00b6",
                "Go to Users view.\u00b6",
                "Enter user information.\u00b6",
                "Click Add User.\u00b6",
                "Modify MongoDB Users\u00b6",
                "Delete MongoDB Users\u00b6",
                "Atlas User Privileges\u00b6"
            ],
            "text": "Security Features and Setup > Add MongoDB Users Add MongoDB Users\u00b6 On this page Add MongoDB Users Modify MongoDB Users Delete MongoDB Users Atlas User Privileges Create MongoDB users to provide clients access to the clusters in your group. A MongoDB user\u2019s access is determined by the roles assigned to the user. When you create a MongoDB user, the user is added to all clusters in your Atlas group. To create a new MongoDB user, from the Clusters view, select the Security tab, then click Users, then Add New User. MongoDB users are separate from Atlas users. MongoDB users have access to MongoDB databases, while Atlas users access to the Atlas application itself. Atlas supports a maximum of 100 MongoDB users per Atlas group. Important Atlas rolls back any user modifications not made through the UI or API. You must use the Atlas UI or API to add, modify, or delete MongoDB users on Atlas clusters. Add MongoDB Users\u00b6 1 Go to Users view.\u00b6 To create a new MongoDB user, from the Clusters view, select the Security tab, then Users. Click Add New User. 2 Enter user information.\u00b6 Field Description User Name The user\u2019s login name. All MongoDB users for Atlas are associated with the admin database; i.e. their authentication database is admin. To access MongoDB, a user provides a username and the name of the authentication database, as well as a password. The authentication database does not determine the user\u2019s roles. You can assign a user different roles in different databases. For example, you can create a user to have the readWrite role on the test database but only the read role on the production database. The authentication database would still be admin. User Privileges You can assign roles in one of the following ways: Select Atlas admin, which provides the user with privileges to administer the Atlas group\u2019s clusters, or Select Read and write to any database, which provides the user with privileges to read and write to any database, or Select Only read any database which provides the user with privileges to read any database, or Click Show Advanced Option and select individual roles and specify the database associated with the role. For information on these privileges, see Atlas User Privileges. For more information on authorization, see Role-Based Access Control and Built-in Roles in the MongoDB manual. Password The user\u2019s password. Atlas clusters use SCRAM-SHA-1 to authenticate MongoDB users. 3 Click Add User.\u00b6 Modify MongoDB Users\u00b6 To modify existing users for an Atlas group, from the Clusters view: Select the Security tab. Click Users. Click Edit for the user you want to modify. You can modify the username, the roles assigned to the user, or the user\u2019s password. Click Update User to save the changes. You can also modify existing users through the Atlas API. See Create a Database User. Delete MongoDB Users\u00b6 To delete existing users for an Atlas group, from the Clusters view: Select the Security tab. Click Users. Click Delete for the user you want to delete. Click Delete again to confirm. You can also delete existing users through the Atlas API. See Delete a Database User. Atlas User Privileges\u00b6 The following table describes the Atlas User Privileges and the MongoDB Built-in Roles they represent. User Privilege MongoDB Roles Atlas admin\u00b6 readWriteAnyDatabase readAnyDatabase enableSharding dbAdminAnyDatabase clusterMonitor Read and write to any database\u00b6 readWriteAnyDatabase Only read any database\u00b6 readAnyDatabase \u2190 Add Entries to the Whitelist Set up VPC Peering Connection \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Create MongoDB users to provide clients access to the clusters in your group. A MongoDB user\u2019s access is determined by the roles assigned to the user. When you create a MongoDB user, the user is added to all clusters in your Atlas group.",
            "tags": ""
        },
        {
            "slug": "/security-two-factor-authentication.html",
            "title": "Two Factor Authentication",
            "headings": [
                "Two Factor Authentication\u00b6",
                "Configure Two-Factor Authentication with Text or Voice\u00b6",
                "In Atlas, click on your username in the top-right hand corner and select Account.\u00b6",
                "Click Enable 2FA for Two Factor Authentication.\u00b6",
                "Configure Voice/SMS Authentication.\u00b6",
                "Configure Two-Factor Authentication with Google Authenticator\u00b6",
                "Install Google Authenticator.\u00b6",
                "Run Google Authenticator.\u00b6",
                "Click Begin Setup.\u00b6",
                "When prompted, select how you will enter the shared private key.\u00b6",
                "In Atlas, click on your username in the top-right hand corner and select Account.\u00b6",
                "Click Enable 2FA for Two Factor Authentication.\u00b6",
                "Configure Atlas for Google Authenticator.\u00b6",
                "Configure Backup Two Factor Authentication Phone Number\u00b6",
                "In Atlas, click on your username in the top-right hand corner and select Account.\u00b6",
                "Click the edit button for Two Factor Authentication.\u00b6",
                "Configure a backup phone number.\u00b6",
                "Generate New Recovery Codes\u00b6",
                "In Atlas, click on your username in the top-right hand corner and select Account.\u00b6",
                "Select the edit button for Two Factor Authentication.\u00b6",
                "Select Show Recovery Codes.\u00b6",
                "Reset Two Factor Authentication\u00b6"
            ],
            "text": "Security Features and Setup > Two Factor Authentication Two Factor Authentication\u00b6 On this page Configure Two-Factor Authentication with Text or Voice Configure Two-Factor Authentication with Google Authenticator Configure Backup Two Factor Authentication Phone Number Generate New Recovery Codes Reset Two Factor Authentication Enable Two Factor Authentication (2FA) on a Atlas account to require a verification code in addition to the username and password associated with the account. The verification code can be retrieved from a limited number of sources and is typically something an authorized user has physical access to. With 2FA, a compromised username and password does not provide immediate access to the account. Atlas provides the following sources for 2FA verification codes: Text Messages (SMS) When Atlas prompts the user for a verification code, Atlas sends the 6-digit verification code using text (SMS) to the provided phone number. The cellular carrier\u2019s SMS rates apply. Automated Voice Calls (US / Canada only) When Atlas prompts the user for a verification code, Atlas calls the provided phone number. An automated system repeats the 6-digit verification code a total of three times before hanging up. The cellular carrier\u2019s Voice Call rates apply. The Google Authenticator application When Atlas prompts the user for a verification code, the user generates a verification code through Google Authenticator. Requires pairing Google Authenticator to Atlas. Note Atlas users who operate within a geographic region with limited cellular service coverage or reliability may encounter delays in receiving the 2FA code via SMS or Voice. Consider using Google Authenticator instead. Configure Two-Factor Authentication with Text or Voice\u00b6 1 In Atlas, click on your username in the top-right hand corner and select Account.\u00b6 2 Click Enable 2FA for Two Factor Authentication.\u00b6 When prompted, enter your password for verification and click Verify to continue. If you are modifying an existing 2FA configuration, click the edit button for Two Factor Authentication. Atlas requires entering a 2FA verification code to continue. 3 Configure Voice/SMS Authentication.\u00b6 Click Primary Method Click Voice/SMS Number. Enter your preferred phone number in the text entry. Select your preferred method of receiving codes: Text Message (SMS) Voice Call (US / Canada Only) Click Verify once you have configured your Voice/SMS authentication settings. Atlas sends a verification code based on your chosen method. Once you receive the verification code, enter it into the provided text entry box one digit at a time. Atlas automatically verifies the code and saves your settings. Configure Two-Factor Authentication with Google Authenticator\u00b6 1 Install Google Authenticator.\u00b6 For Android devices, install Google Authenticator via the Play Store. Search for Google Authenticator. For iOS devices, install Google Authenticator via the App Store. Search for Google Authenticator. For Blackberry devices, you must have OS 4.5 - 7.0 and use US English as the operating language to use Google Authenticator. Visit https://m.google.com/authenticator to download and install the application. 2 Run Google Authenticator.\u00b6 3 Click Begin Setup.\u00b6 4 When prompted, select how you will enter the shared private key.\u00b6 Under Manually Add an Account, select one of the following options: Scan a barcode Choose this option if your phone supports scanning barcodes. Enter provided key Choose this option if your phone does not support scanning barcodes, or if you prefer to enter a key. 5 In Atlas, click on your username in the top-right hand corner and select Account.\u00b6 6 Click Enable 2FA for Two Factor Authentication.\u00b6 When prompted, enter your password for verification and click Verify to continue. If you are modifying an existing 2FA configuration, click the edit button for Two Factor Authentication. Atlas requires entering a 2FA verification code to continue. 7 Configure Atlas for Google Authenticator.\u00b6 Click Primary Method Click Google Authenticator. Pair the Google Authenticator app with Atlas. If your smartphone supports scanning barcodes, then scan the barcode using the Google Authenticator application. Alternatively, click Can\u2019t scan the barcode?. Atlas displays the Atlas account name and a key. Enter the key into Google Authenticator using the Enter provided key option. Once configured, the Google Authenticator app can produce a 6-digit code for use with Atlas 2FA. Enter the Google Authenticator code into Atlas Atlas automatically verifies the code and saves your settings. Configure Backup Two Factor Authentication Phone Number\u00b6 You can configure a backup phone number for receiving 2FA codes if the primary method fails or is unavailable. If you have not yet enabled 2FA for the Atlas account, do so before proceeding. See Configure Two-Factor Authentication with Text or Voice or Configure Two-Factor Authentication with Google Authenticator. 1 In Atlas, click on your username in the top-right hand corner and select Account.\u00b6 2 Click the edit button for Two Factor Authentication.\u00b6 Atlas requires a 2FA verification code to continue. 3 Configure a backup phone number.\u00b6 Select Add a Backup Phone. Enter your preferred phone number in the text entry. Select your preferred method of receiving codes: Text Message (SMS) Voice Call (US / Canada Only) Click Verify once you have configured your Voice/SMS authentication settings. Click Save Changes. Generate New Recovery Codes\u00b6 Atlas can generate single-use recovery codes for use where all other methods of accessing the account fail. When you generate new recovery codes, you invalidate previously generated ones. If you have not yet enabled 2FA for the Atlas account, do so before proceeding. See Configure Two-Factor Authentication with Text or Voice or Configure Two-Factor Authentication with Google Authenticator. 1 In Atlas, click on your username in the top-right hand corner and select Account.\u00b6 2 Select the edit button for Two Factor Authentication.\u00b6 The edit button is displayed in Atlas using a pencil icon. 3 Select Show Recovery Codes.\u00b6 Reset Two Factor Authentication\u00b6 Important Resetting 2FA for an Atlas account disables 2FA for that account. You can re-configure 2FA after performing the reset procedure. Log in to Atlas. From the 2FA entry dialog, select Reset your two factor authentication. Select Atlas user? Click here at the bottom of the Reset Two Factor Authentication modal. Enter your Atlas username. Atlas emails a link to the e-mail account associated with the Atlas username. Click the link in the e-mail to start the 2FA reset procedure. Follow the directions on the 2FA reset page. After completing the reset procedure, Atlas allows you to log in to the Atlas account without requiring a 2FA code. \u2190 Set up VPC Peering Connection Connect to a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Enable Two Factor Authentication (2FA) on a Atlas account to require a verification code in addition to the username and password associated with the account. The verification code can be retrieved from a limited number of sources and is typically something an authorized user has physical access to. With 2FA, a compromised username and password does not provide immediate access to the account.",
            "tags": ""
        },
        {
            "slug": "/security-vpc-peering.html",
            "title": "Set up VPC Peering Connection",
            "headings": [
                "Set up VPC Peering Connection\u00b6",
                "Procedure\u00b6",
                "Go to VPC Peering view.\u00b6",
                "Enter required information in the Peering Connection Dialog.\u00b6",
                "Click Initiate Peering.\u00b6",
                "Wait for approval of peering connection request.\u00b6",
                "Add to route table.\u00b6"
            ],
            "text": "Security Features and Setup > Set up VPC Peering Connection Set up VPC Peering Connection\u00b6 Note This feature is not available for Free Tier clusters. For more information, see Atlas M0 (Free Tier) Limitations. AWS Only Atlas supports VPC peering with other AWS VPCs in the same region. For Atlas clusters deployed on Google Cloud Platform or Microsoft Azure, add the IP addresses of your GCP or Azure services to Atlas group IP whitelist to grant those services access to the cluster. Important To set up a VPC peering connection, you must be the group owner. From the Clusters view, select the Security tab, then click Peering, then New Peering Connection. Procedure\u00b6 1 Go to VPC Peering view.\u00b6 From the Clusters view, select the Security tab, then Peering. Click New Peering Connection. 2 Enter required information in the Peering Connection Dialog.\u00b6 To create the VPC Peering connection, fill in the requested information: Field Notes AWS Account ID AWS Account ID of the owner of the peer VPC. Refer to the dialog for instructions on finding your AWS Account ID. VPC ID The ID of the peer VPC. Refer to the dialog for instructions on finding your VPC ID. The VPC must be in the same region as the Atlas VPC. Region Region for the Atlas VPC and peer VPC. If a region-specific VPC exists for Atlas, you cannot modify this value, and the VPC associated with the VPC ID must be in the same region as the Atlas VPC. Otherwise, select the region for the Atlas VPC and the peer VPC. A VPC will be created for the Atlas group in this region, and all clusters for the Atlas group will be deployed inside this VPC. VPC CIDR The peer VPC CIDR block or subset. Must not overlap with your Atlas VPC CIDR block or any other peering connection VPC CIDR. The peer CIDR block must be in one of the following private networks: 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 You can choose to add the VPC CIDR block address (or a subset) to the whitelist. For VPC peering connections, you can also add the Security Group associated with the peer VPC instead of the CIDR block. See Add Entries to the Whitelist. Atlas CIDR Block The Atlas VPC CIDR block. Must not overlap with the VPC CIDR block. Atlas uses the specified CIDR block for all other VPC peering connections created in the group. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following private networks. 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 Atlas locks this value if an M10+ cluster or a VPC peering connection already exists. To modify the CIDR block, ensure there are no M10+ clusters in the group and no other VPC peering connections in the group. Alternatively, create a new group and create a VPC Peering Connection to set the desired Atlas VPC CIDR block for that group. Important Atlas limits the number of MongoDB nodes per VPC based on the CIDR block and the region selected for the group. For example, a group in an AWS region supporting 3 availability zones and a Atlas CIDR VPC block of /24 is limited to the equivalent of 27 3-node replica sets. Contact MongoDB Support for any questions on Atlas limits of MongoDB nodes per VPC. 3 Click Initiate Peering.\u00b6 4 Wait for approval of peering connection request.\u00b6 The owner of the peer VPC must approve the VPC peering connection request. Ensure that the owner approves the request. Atlas provides instructions for approving the connection request. Important Requests expire after 7 days. 5 Add to route table.\u00b6 In the AWS Console under the Route Table for your VPC, select the Routes tab. Click Add another rule, add the Atlas VPC\u2019s CIDR block, and save the entry. Once set up, you can edit or terminate VPC peering connection from the Peering table. To use, you must add your VPC CIDR block address (or subset) or the Security Group associated with the peer VPC to the whitelist. See also https://www.mongodb.com/blog/post/introducing-vpc-peering-for-mongodb-atlas \u2190 Add MongoDB Users Two Factor Authentication \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "For Atlas clusters deployed on Google Cloud Platform or Microsoft Azure, add the IP addresses of your GCP or Azure services to Atlas group IP whitelist to grant those services access to the cluster.",
            "tags": ""
        },
        {
            "slug": "/security-whitelist.html",
            "title": "Add Entries to the Whitelist",
            "headings": [
                "Add Entries to the Whitelist\u00b6",
                "Procedure\u00b6",
                "Go to IP Whitelist view.\u00b6",
                "Enter an IP address, CIDR block, or Security Group.\u00b6",
                "Click Save and Close.\u00b6"
            ],
            "text": "Security Features and Setup > Add Entries to the Whitelist Add Entries to the Whitelist\u00b6 Atlas only allows client connections to the cluster from entries in the group\u2019s whitelist. Each entry is either a single IP address, a CIDR-notated range of addresses, or if using VPC Peering, a Security Group associated with the peer VPC. For Atlas clusters deployed on Google Cloud Platform or Microsoft Azure, add the IP addresses of your GCP or Azure services to Atlas group IP whitelist to grant those services access to the cluster. The whitelist applies to all clusters in the group and can have up to 20 entries. To add an entry to the whitelist, from the Clusters view, select the Security tab, then click IP Whitelist, then Add IP Address. Procedure\u00b6 1 Go to IP Whitelist view.\u00b6 From the Clusters view, select the Security tab, then IP Whitelist. Click Add IP Address. 2 Enter an IP address, CIDR block, or Security Group.\u00b6 Important Ensure that you add the IP address you will use to access MongoDB as the admin user. Enter the desired IP address or CIDR-notated range of addresses: Entry Grants An IP address Access from that address. A CIDR-notated range of IP addresses Access from the designated range of addresses. For peer VPC connections, you can specify the CIDR block (or a subset) or the associated Security Group. The Internet provides online tools for converting a range of IP addresses to CIDR, such as http://www.ipaddressguide.com/cidr. Security Group (AWS Only) Access via Security Group membership for peer VPC connections. 0.0.0.0/0 Unrestricted access. All IP addresses have access to your group\u2019s clusters. Note For production clusters, avoid adding 0.0.0.0/0 to the cluster\u2019s whitelist as this can expose the cluster to denial of service attacks. 3 Click Save and Close.\u00b6 \u2190 Security Features and Setup Add MongoDB Users \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas only allows client connections to the cluster from entries in the group\u2019s whitelist. Each entry is either a single IP address, a CIDR-notated range of addresses, or if using VPC Peering, a Security Group associated with the peer VPC.",
            "tags": ""
        },
        {
            "slug": "/setup-cluster-security.html",
            "title": "Security Features and Setup",
            "headings": [
                "Security Features and Setup\u00b6"
            ],
            "text": "Security Features and Setup\u00b6 \u27a4 Required Configurable Security Features. You must set up the following required security features: Whitelist Atlas only allows client connections to the cluster from entries in the group\u2019s whitelist. To connect, you must add an entry to the whitelist. To set up the whitelist for the group, see Add Entries to the Whitelist. For Atlas clusters deployed on Google Cloud Platform or Microsoft Azure, add the IP addresses of your GCP or Azure services to Atlas group IP whitelist to grant those services access to the cluster. User Authentication/Authorization Atlas requires clients to authenticate to access the clusters, i.e. the MongoDB databases. You must create MongoDB users to access the database. To set up MongoDB users to your clusters, see Add MongoDB Users. \u27a4 Optional Security Feature. Atlas provides the following optional security feature that you can set up: VPC Peering (AWS Only) Atlas supports VPC peering with other AWS VPCs in the same region. To use VPC Peering, see Set up VPC Peering Connection. Two Factor Authentication Atlas supports Two Factor Authentication (2FA) to help users control access to their Atlas accounts. To use 2FA, see Two Factor Authentication. \u27a4 Non-configurable Security Features. The following non-configurable security features are inherent to Atlas: TLS/SSL Atlas uses TLS/SSL to encrypt the connections to your databases. Virtual private cloud (VPC) When Atlas deploys an Atlas group\u2019s first M10+ paid cluster, Atlas also creates a VPC specific to the cloud service provider and region selected for the cluster. Atlas associates all subsequent clusters deployed in the group to this VPC, locking them to the cloud service provider and region. Atlas also sets a default VPC CIDR block address for the group. For clusters deployed on AWS, Atlas supports creating VPC peering connections between your Atlas clusters and other AWS VPCs in the same region. If you need a specific Atlas VPC CIDR block address, configure a VPC peering connection before creating your first M10+ cluster. For Atlas clusters deployed on GCP or Azure or Azure services to Atlas group IP whitelist to grant those services access to the cluster. Add Entries to the Whitelist Add MongoDB Users Set up VPC Peering Connection Set up Two Factor Authentication \u2190 Create a Cluster Add Entries to the Whitelist \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "\u27a4 Required Configurable Security Features. You must set up the following required security features:",
            "tags": ""
        },
        {
            "slug": "/unsupported-commands.html",
            "title": "Command Limitations in Free Tier Clusters",
            "headings": [
                "Command Limitations in Free Tier Clusters\u00b6",
                "Commands With Special Behavior\u00b6",
                "Unsupported Commands\u00b6"
            ],
            "text": "Reference > Command Limitations in Free Tier Clusters Command Limitations in Free Tier Clusters\u00b6 On this page Commands With Special Behavior Unsupported Commands Atlas Free Tier clusters do not support all functionality available to other clusters. Commands With Special Behavior\u00b6 The following commands exhibit special behavior in Free Tier clusters. Command Description aggregate The following limitations apply: The maxTimeMs parameter cannot exceed 600 seconds. The allowDiskUsage parameter is ignored. count The following limitations apply: The $where operator is not supported. When run against the local database, you can execute count only on the system.replset and oplog.rs collections. distinct The $where operator is not supported. find The following limitations apply: The $where operator is not supported. In the local database, you can run find only on the oplog.rs collection. When querying the oplog.rs collection, if you specify a condition on the ns field, you must specify an equality condition, such as ns: \"test.foo\". You cannot use $regex or any other operator with the ns field. getParameter Can be executed in a Free Tier cluster in only two variations: {getParameter: 1, authSchemaVersion: 1} {getParameter: 1, authenticationMechanisms: 1} killOp All MongoDB users associated with a Free Tier account can execute the killOp command to terminate operations by all other MongoDB users associated with the same account. serverStatus The data returned by the following sections is not meaningful: asserts extra_info mem opcountersRepl The following sections are not supported: backgroundFlushing dur encryptionAtRest security advisoryHostFQDNs tcmalloc oplog rangeDeleter The metrics field is replaced with the following: \"metrics\": { \"connectionPool\": { \"totalCreated\": [total-created-number] }, \"bytesInWrites\": [current-bytes-in-writes-value-since-last-check] } Unsupported Commands\u00b6 The following commands are not supported. applyOps appendOplogNote authenticate authSchemaUpgrade checkShardingIndex cleanupOrphaned clone cloneCollection cloneCollectionAsCapped compact connPoolSync copydb copydbgetnonce copydbsaslstart createRole createUser currentOpCtx dataSize dbHash diagLogging dropAllRolesFromDatabase dropAllUsersFromDatabase dropRole eval forcerror fsync fsyncUnlock getDiagnosticData getPrevError getShardMap getShardVersion grantPrivilegesToRole grantRolesToRole grantRolesToUser handshake invalidateUserCache lockInfo logRotate mapreduce mapreduce.shardedfinish parallelCollectionScan planCacheClear planCacheClearFilters planCacheListFilters planCacheListPlans planCacheListQueryShapes planCacheSetFilter revokeRolesFromUser repairCursor repairDatabase replSetDeclareElectionWinner replSetElect replSetFreeze replSetFresh replSetGetConfig replSetGetRBID replSetHeartbeat replSetInitiate replSetMaintenance replSetReconfig replSetRequestVotes replSetStepDown replSetStepUp replSetSyncFrom replSetUpdatePosition resetError resync revokePrivilegesFromRole revokeRolesFromRole setFeatureCompatibilityVersion setLogLevel setParameter setProfilingLevel shutdown updateRole updateUser validate _migrateClone _recvChunkAbort _recvChunkCommit _recvChunkStart _recvChunkStatus _transferMods \u2190 Microsoft Azure Commands Available Only in Free Tier Clusters \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas Free Tier clusters do not support all functionality available to other clusters.",
            "tags": ""
        },
        {
            "slug": "/import/live-import.html",
            "title": "Live Migrate Your Cluster to Atlas",
            "headings": [
                "Live Migrate Your Cluster to Atlas\u00b6",
                "Considerations\u00b6",
                "Upgrade Path\u00b6",
                "Supported Authentication Mechanism\u00b6",
                "MongoDB Users and Roles\u00b6",
                "IP Whitelisting\u00b6",
                "Cut Over Downtime\u00b6",
                "Destination Cluster Configuration\u00b6",
                "Data Transfer Charges\u00b6",
                "Procedure\u00b6",
                "Create a destination Atlas cluster.\u00b6",
                "Start the Migration Process.\u00b6",
                "Perform the cutover.\u00b6",
                "Migration Support\u00b6"
            ],
            "text": "Import Data into Cluster > Live Migrate Your Cluster to Atlas Live Migrate Your Cluster to Atlas\u00b6 On this page Considerations Procedure Migration Support Atlas can perform a live migration of a source replica set to an Atlas cluster, keeping the cluster in sync with the remote source until you cut your applications over to the Atlas cluster. Note You cannot select an M0 (Free Tier) cluster as the source or destination for live migration. To migrate data from an M0 (Free Tier) cluster to a paid cluster, see Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster. Atlas does not support live migrations from or to a sharded cluster. Considerations\u00b6 Upgrade Path\u00b6 Atlas live migration supports the following migration paths: Source Replica Set Version Destination Cluster version 3.0 3.2 3.2 3.2 3.4 3.4 Supported Authentication Mechanism\u00b6 Atlas only supports SCRAM-SHA-1 for connecting to source clusters enforcing authentication. If the source cluster uses a different authentication mechanism, to connect you can use the Migrate with mongomirror tool to migrate data from the source cluster to the destination Atlas cluster. MongoDB Users and Roles\u00b6 Atlas does not migrate any user or role data to the destination cluster. If the source cluster enforced authentication, you must re-create the credentials used by your applications on the destination Atlas cluster. Atlas only supports SCRAM-SHA-1 for user authentication. See Add MongoDB Users for a tutorial on creating MongoDB users in Atlas. IP Whitelisting\u00b6 Source Cluster IP Whitelist\u00b6 If your source cluster is protected by a firewall, grant access to the following Atlas IP ranges: 4.71.186.128/25 4.35.16.128/25 Atlas Cluster IP Whitelist\u00b6 Atlas only allows connections to a cluster from entries in the group\u2019s whitelist. You must add IP addresses such as application servers to the group whitelist manually. Do this before beginning the migration procedure. Atlas temporarily adds the IP address of the Atlas migration to the group whitelist. During the migration procedure, you cannot edit or delete this entry. Atlas removes the entry automatically once the procedure completes. For documentation on adding entries to the Atlas whitelist, see Add Entries to the Whitelist. Cut Over Downtime\u00b6 The live migration procedure requires shutting down your applications as part of the cut over process. This results in some downtime while the migration procedure completes, as well as the time required to update your applications to point to the destination cluster and restart them. Destination Cluster Configuration\u00b6 When configuring the destination cluster, consider the following: The live migration process streams data through a migration application server running in AWS US-East. This implicitly requires two network hops to reach the destination cluster irrespective of the location of the source and destination clusters. Due to the potential latency, the live migration application may not be able to keep up with a source cluster that has an extremely heavy write load. You can instead use the mongomirror tool directly from the source cluster, pointing to the destination Atlas cluster. The live migration process may not be able to keep up with a source cluster whose write workload is greater than what can be transferred and applied to the destination cluster. You may need to scale the destination cluster up to a instance with more processing power, bandwidth or disk IO. The destination Atlas cluster must be a replica set. You cannot select an M0 (Free Tier) cluster as the destination for live migration. Data Transfer Charges\u00b6 Atlas charges for data transfer between the Atlas cluster and another server. The migration procedure incurs data charges based on the amount of data transferred from the source cluster to the Atlas cluster. For more information on data transfer charges, see Data Transfer. Procedure\u00b6 1 Create a destination Atlas cluster.\u00b6 Skip this step if you already have an Atlas cluster as the destination of the live migration process. Create a new Atlas cluster, configuring it as needed. For complete documentation on creating an Atlas cluster, see Create a Cluster. Once Atlas has deployed your new cluster, proceed to the next step. 2 Start the Migration Process.\u00b6 Click the ellipses ... icon for the destination Atlas cluster. Click Migrate Data to this Cluster. Atlas displays a walk-through walk-through screen with instructions on how to proceed with the live migration. Prepare the information as stated in the walk-through screen, then click I\u2019m Ready To Migrate. Atlas displays a walk-through screen that collects information required to connect to the source cluster. Enter the hostname and port of the primary member of the source cluster into the provided text box. For example, mongoPrimary.example.net:27017. If the source cluster enforces authentication, enter a username and password into the provided text boxes. The username must correspond to a MongoDB user on the admin database with the following permissions: readAnyDatabase on the admin database. read on the local database. If the source cluster uses TLS/SSL, toggle the SSL button. If the source replica set uses TLS/SSL and is not using a public Certificate Authority (CA), copy the contents of the source cluster\u2019s CA file into the provided text box. Click Validate to confirm that Atlas can connect to the source replica set. If validation fails, check that: You have whitelisted Atlas on your source cluster. The provided user credentials, if any, exist on the source cluster and have the required permissions. The SSL toggle is enabled only if the source cluster requires it. The CA file provided, if any, is valid and correct. Click Start Migration to start the migration process. Once the migration process begins, the Atlas UI displays the Migrating Data walk-through screen for the destination Atlas cluster. This walk-through screen updates as destination cluster proceeds through the migration process, as well as the time remaining for the destination cluster to sync with the source cluster. When the migration timer and the Start Cut Over button turn green, proceed to the next step. 3 Perform the cutover.\u00b6 When Atlas detects that the source and destination clusters are nearly in sync, it starts an extendable 72 hour timer to begin the cut over procedure. If the 72 hour period passes, Atlas stops synchronizing with the source cluster. You can extend the time remaining by 24 hours by clicking the Extend time hyperlink below the <time> left to cut over timer. Once you are prepared to cut your applications over to the destination Atlas cluster, click Start Cut Over. Atlas displays a walk-through screen with instructions on how to proceed with the cut over. Perform the steps described in the walk-through screen to cut over your applications to the Atlas cluster. The walk-through screen provides the cluster connection string your applications use for connectivity. Once you have completed the cut over procedure and confirmed your applications are working normally with the Atlas cluster, click I\u2019m Done to complete the migration procedure. Migration Support\u00b6 If you have any questions regarding migration support beyond what is covered in this documentation, or if you encounter an error during migration, please file a support ticket through the Atlas UI. To file a support ticket, Click Support in the left-hand navigation For Atlas Issue Category, select Other For Priority, select the appropriate priority. For questions, please select Medium Priority. If there was a failure in migration, please select High Priority. For Request Summary, please include Live Migration in the your summary. For More details, please include any other relevant details to your question or migration error. \u2190 Import Data into Cluster Migrate with mongomirror \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas can perform a live migration of a source replica set to an Atlas cluster, keeping the cluster in sync with the remote source until you cut your applications over to the Atlas cluster.",
            "tags": ""
        },
        {
            "slug": "/import/mongoimport.html",
            "title": "Load File with mongoimport",
            "headings": [
                "Load File with mongoimport\u00b6",
                "Considerations\u00b6",
                "Procedure\u00b6",
                "Set up MongoDB user in the target Atlas cluster.\u00b6",
                "Open the connect dialog.\u00b6",
                "Update IP Whitelist.\u00b6",
                "Copy the target cluster host information.\u00b6",
                "Run mongoimport.\u00b6",
                "Additional Information\u00b6"
            ],
            "text": "Import Data into Cluster > Load File with mongoimport Load File with mongoimport\u00b6 You can use mongoimport to import data from a JSON or a CSV file into MongoDB Atlas cluster. Considerations\u00b6 mongoimport uses strict mode representation for certain BSON types. Procedure\u00b6 The following tutorial uses mongoimport to load data from a JSON file to an Atlas cluster: 1 Set up MongoDB user in the target Atlas cluster.\u00b6 To run mongoimport to write to Atlas cluster, you must specify a MongoDB user that has readWrite privileges in the database into which to import data. For example, a user with Atlas admin role provides these privileges. If no such user exists, create the user: Go to Clusters view, select the Security tab, and then Users. Click Add New User. Add an Atlas admin user. 2 Open the connect dialog.\u00b6 From the Clusters view, click Connect for the Atlas cluster into which you want to migrate data. 3 Update IP Whitelist.\u00b6 If the host where you will run mongoimport is not in the IP Whitelist, update the list. You can specify either: The public IP address of the server on which mongoimport will run, or If set up for VPC peering, either the peer\u2019s VPC CIDR block (or a subnet) or the peer VPC\u2019s Security Group. 4 Copy the target cluster host information.\u00b6 From the connect dialog, get the cluster host information. This information is specified to mongoimport in the --host option. If the Atlas cluster is a replica set, you must also retrieve the replica set name. For example: myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 5 Run mongoimport.\u00b6 The following operation imports data from the file /somedir/myFileToImport.json into collection myData in the testdb database. The operation includes the --drop option to drop the collection first if the collection exists. mongoimport --host myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 --ssl -u myAtlasAdminUser -p 'atlasP@$$assw0Rd' --authenticationDatabase admin \\ --db testdb --collection myData --drop --file /somedir/myFileToImport.json Add/edit the mongoimport command line options as appropriate for your deployment. See mongoimport for more mongoimport options. Additional Information\u00b6 For more information on mongoimport, including behavior, options, and examples, see the mongoimport reference page. \u2190 Seed with mongorestore Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "You can use mongoimport to import data from a JSON or a CSV file into MongoDB Atlas cluster.",
            "tags": ""
        },
        {
            "slug": "/import/mongomirror.html",
            "title": "Migrate with mongomirror",
            "headings": [
                "Migrate with mongomirror\u00b6",
                "Download mongomirror\u00b6",
                "Prerequisites\u00b6",
                "Source\u00b6",
                "Target\u00b6",
                "Procedure\u00b6",
                "Set up MongoDB user in the source replica set.\u00b6",
                "Set up MongoDB user in the target Atlas cluster.\u00b6",
                "Open the connect dialog.\u00b6",
                "Update IP Whitelist.\u00b6",
                "Copy the target cluster host information.\u00b6",
                "Start mongomirror.\u00b6",
                "Switch to Atlas\u00b6",
                "Stop write operations to the source replica set.\u00b6",
                "Wait for the Atlas cluster to be up to date with the last writes.\u00b6",
                "Stop mongomirror.\u00b6",
                "Update client applications to use Atlas cluster.\u00b6",
                "oplog Entries\u00b6",
                "Additional Information\u00b6"
            ],
            "text": "Import Data into Cluster > Migrate with mongomirror Migrate with mongomirror\u00b6 mongomirror is a utility for migrating data from an existing MongoDB replica set to a MongoDB Atlas replica set. mongomirror does not require you to shut down your existing replica set or applications. Important mongomirror does not import user/role data. Download mongomirror\u00b6 Operating System Download Amazon Linux mongomirror-linux-x86_64-enterprise-amzn64-0.2.4.tgz Debian 7 mongomirror-linux-x86_64-debian71-0.2.4.tgz Debian 8 mongomirror-linux-x86_64-debian81-0.2.4.tgz OSX mongomirror-osx-x86_64-0.2.4.tgz RHEL 6.2 mongomirror-linux-x86_64-rhel62-0.2.4.tgz RHEL 7.0 mongomirror-linux-x86_64-rhel70-0.2.4.tgz Suse 12 mongomirror-linux-x86_64-suse12-0.2.4.tgz Ubuntu 14.04 mongomirror-linux-x86_64-ubuntu1404-0.2.4.tgz Windows mongomirror-win32-x86_64-0.2.4.zip Prerequisites\u00b6 Source\u00b6 The source MongoDB deployment must be a replica set. If the source is a standalone MongoDB deployment, convert to a replica set first. The source replica set must be version 3.0 or greater. Target\u00b6 The target Atlas cluster must be a replica set. The target Atlas cluster should be empty or run mongomirror with the --drop option. The target Atlas cluster cannot be an M0 (Free Tier) cluster. Procedure\u00b6 1 Set up MongoDB user in the source replica set.\u00b6 If the source replica set requires authentication, you must specify a source MongoDB user that has privileges to read any database, including the local database. For example, a user with backup role provides these privileges. If the source replica set requires authentication and no such user exists, create the user in your source MongoDB replica set. For example, if the source replica set uses SCRAM-SHA1 authentication: Connect a mongo shell to the primary. Switch to the admin database and create a user with the backup role. use admin db.createUser( { user: \"mySourceUser\", pwd: \"mySourceP@$$word\", roles: [ \"backup\" ] } ) 2 Set up MongoDB user in the target Atlas cluster.\u00b6 To run mongomirror, you must specify a MongoDB user that has readWriteAnyDatabase and dbAdminAnyDatabase privileges in the Atlas cluster. For example, a user with Atlas admin role provides these privileges. If no such user exists, create the user: Go to Clusters view, select the Security tab, and then Users. Click Add New User. Add an Atlas admin user. 3 Open the connect dialog.\u00b6 From the Clusters view, click Connect for the Atlas cluster into which you want to migrate data. 4 Update IP Whitelist.\u00b6 If the host where you will run mongomirror is not in the IP Whitelist, update the list. You can specify either: The public IP address of the server on which mongomirror will run, or If set up for VPC peering, either the peer\u2019s VPC CIDR block (or a subnet) or the peer VPC\u2019s Security Group. 5 Copy the target cluster host information.\u00b6 From the connect dialog, get the cluster host information. This information is specified to mongomirror in the --destination option. You must also retrieve the replica set name. For example: myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 6 Start mongomirror.\u00b6 From a terminal, start mongomirror with the appropriate options. For example, if the source replica set uses SCRAM-SHA1 authentication, mongomirror --host sourceRS/source-host1:27017,source-host2:27017,source-host3:27017 \\ --user mySourceUser \\ --password 'mySourceP@$$word' \\ --authenticationDatabase admin \\ --destination myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 \\ --destinationUsername myAtlasAdminUser \\ --destinationPassword 'atlasP@$$assw0Rd' See Options for more mongomirror options. When you start mongomirror: First, mongomirror performs an initial sync, copying collections from the existing MongoDB replica set to the target cluster in Atlas. After the initial sync, mongomirror continuously tails the replica set\u2019s oplog for incoming changes and replays them on the target cluster in MongoDB Atlas. See oplog Entries. Once started, mongomirror runs continuously until you shut down the process. To fully migrate to the Atlas, continue on to Switch to Atlas steps. Switch to Atlas\u00b6 After the mongomirror has performed the initial sync and has been tailing the replica set\u2019s oplog, to switch over to Atlas cluster: 1 Stop write operations to the source replica set.\u00b6 2 Wait for the Atlas cluster to be up to date with the last writes.\u00b6 Continue to run mongomirror to finish tailing the oplog. 3 Stop mongomirror.\u00b6 Once the Atlas cluster is up to date, stop mongomirror. 4 Update client applications to use Atlas cluster.\u00b6 Update client applications to connect to the Atlas cluster. For details on connections to Atlas, see Connect via Driver. oplog Entries\u00b6 Because mongomirror tails the source oplog and applies the entries to the destination cluster, the destination oplog is not an exact duplicate of the source\u2019s oplog. Instead, the tailed entries from the source oplog become part of an applyOps entry in the destination oplog. For example, after mongomirror has performed the initial sync, the source replica set receives three insert operations and has the following oplog entries for these operations: {\"ts\":<ts1>,\"t\":<t1>,\"h\":<h1>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":0,\"a\":0}} {\"ts\":<ts2>,\"t\":<t2>,\"h\":<h2>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":1,\"a\":1}} {\"ts\":<ts3>,\"t\":<t3>,\"h\":<h3>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":2,\"a\":2}} As mongomirror tails the source oplog and applies these operations to the destination cluster, the three entries become part of a single entry in the destination cluster\u2019s oplog: {\"ts\":<ts>,\"t\":<t>,\"h\":<h>,\"v\":2,\"op\":\"c\",\"ns\":\"admin.$cmd\",\"o\":{\"applyOps\": [ {\"ts\":<ts1>,\"t\":<t1>,\"h\":<h1>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":0,\"a\":0},\"o2\":{ }}, {\"ts\":<ts2>,\"t\":<t2>,\"h\":<h2>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":1,\"a\":1},\"o2\":{ }}, {\"ts\":<ts3>,\"t\":<t3>,\"h\":<h3>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":2,\"a\":2},\"o2\":{ }} ] } } For applications that tail or parse the oplog, if you switch these applications to read from the destination cluster\u2019s oplog, you may need to modify the applications, depending on how you wish to handle these applyOps entries. If you have not switched over to writing to the destination cluster, you can continue to read from the source without modifying these applications. Additional Information\u00b6 For more information on mongomirror, including behavior, options, and examples, see the mongomirror reference page. mongomirror \u2190 Live Migrate Your Cluster to Atlas mongomirror \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "mongomirror is a utility for migrating data from an existing MongoDB replica set to a MongoDB Atlas replica set. mongomirror does not require you to shut down your existing replica set or applications.",
            "tags": ""
        },
        {
            "slug": "/import/mongorestore.html",
            "title": "Seed with mongorestore",
            "headings": [
                "Seed with mongorestore\u00b6",
                "Considerations\u00b6",
                "Procedure\u00b6",
                "Additional Information\u00b6"
            ],
            "text": "Import Data into Cluster > Seed with mongorestore Seed with mongorestore\u00b6 You can use mongodump and mongorestore to seed MongoDB Atlas cluster with data from an existing MongoDB standalone, replica set or a sharded cluster. Considerations\u00b6 mongorestore errors when merging in MongoDB users and roles data into Atlas. If using mongorestore version 3.4 or greater, you can exclude specific collections from the restore using --nsExclude option. mongodump excludes the content of the local database in its output. mongodump can adversely affect performance of the mongod. If your data is larger than system memory, the mongodump will push the working set out of memory. If you are performing a switch-over from a non-Atlas deployment to an Atlas cluster, you should consider your downtime tolerance and the required state of the data (e.g. being fully up to date) at the time of the switch-over. If the data must be fully in sync with the non-Atlas deployment before switching over, after uploading via mongorestore, additional steps must be taken to bring the Atlas cluster in sync with an existing cluster. Procedure\u00b6 The following tutorial uses mongodump and mongorestore to stream data over a network device via a pipe to upload data from an existing deployment to an Atlas cluster: 1 Set up MongoDB user in the source replica set.\u00b6 If the source deployment requires authentication, you must specify a source MongoDB user that has privileges to read any database. For example, a user with backup role provides these privileges. If the source deployment requires authentication and no such user exists, create the user in your source MongoDB replica set. For example, if the source replica set uses SCRAM-SHA1 authentication: Connect a mongo shell to the primary. Switch to the admin database and create a user with the backup role. use admin db.createUser( { user: \"mySourceUser\", pwd: \"mySourceP@$$word\", roles: [ \"backup\" ] } ) 2 Set up MongoDB user in the target Atlas cluster.\u00b6 To run mongorestore to write to Atlas cluster, you must specify a MongoDB user that has readWriteAnyDatabase and dbAdminAnyDatabase privileges in the Atlas cluster. For example, a user with Atlas admin role provides these privileges. If no such user exists, create the user: Go to Clusters view, select the Security tab, and then Users. Click Add New User. Add an Atlas admin user. 3 Open the connect dialog.\u00b6 From the Clusters view, click Connect for the Atlas cluster into which you want to migrate data. 4 Update IP Whitelist.\u00b6 If the host where you will run mongorestore is not in the IP Whitelist, update the list. You can specify either: The public IP address of the server on which mongorestore will run, or If set up for VPC peering, either the peer\u2019s VPC CIDR block (or a subnet) or the peer VPC\u2019s Security Group. 5 Copy the target cluster host information.\u00b6 From the connect dialog, get the cluster host information. This information is specified to mongorestore in the --host option. If the Atlas cluster is a replica set, you must also retrieve the replica set name. For example: myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 6 Run mongodump and mongorestore.\u00b6 For example, if the source is a replica set that uses SCRAM-SHA1 authentication, the following operation pipes the output from mongodump directly to mongorestore. Note mongorestore errors when merging in MongoDB users and roles data into Atlas. If using mongorestore version 3.4 or greater, you can exclude specific collections from the restore using --nsExclude option. The following operation assumes a version 3.4 mongorestore and includes the --nsExclude option. mongodump --host sourceRS/source-host1:27017,source-host2:27017,source-host3:27017 --archive --ssl -u mySourceUser -p 'mySourceP@$$word' --authenticationDatabase admin | \\ mongorestore --host myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 --archive --ssl -u myAtlasAdminUser -p 'atlasP@$$assw0Rd' --authenticationDatabase admin --nsExclude 'admin.system.users' --nsExclude 'admin.system.roles' Add/edit the mongodump command line options as appropriate for your deployment. See mongodump for more mongodump options and mongorestore for more for more mongorestore options. Additional Information\u00b6 For more information on mongodump and mongorestore, including behavior, options, and examples, see the mongodump reference page and the mongorestore reference page. \u2190 mongomirror Load File with mongoimport \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "You can use mongodump and mongorestore to seed MongoDB Atlas cluster with data from an existing MongoDB standalone, replica set or a sharded cluster.",
            "tags": ""
        },
        {
            "slug": "/reference/alert-conditions.html",
            "title": "Alert Conditions",
            "headings": [
                "Alert Conditions\u00b6",
                "Introduction\u00b6",
                "Host Alerts\u00b6",
                "Asserts\u00b6",
                "Opcounter\u00b6",
                "Opcounter - Repl\u00b6",
                "Atlas Free Tier\u00b6",
                "Memory\u00b6",
                "Connections\u00b6",
                "Queues\u00b6",
                "Page Faults\u00b6",
                "Cursors\u00b6",
                "Network\u00b6",
                "Replication Oplog\u00b6",
                "DB Storage\u00b6",
                "WiredTiger Storage Engine\u00b6",
                "System and Disk Alerts\u00b6",
                "Inapplicable Host Conditions\u00b6",
                "Query Targeting Alerts\u00b6",
                "Replica Set Alerts\u00b6",
                "Sharded Cluster Alerts\u00b6",
                "Backup Alerts\u00b6",
                "User Alerts\u00b6",
                "Group Alerts\u00b6",
                "Billing Alert\u00b6"
            ],
            "text": "Monitoring and Alerts > Alert Conditions Alert Conditions\u00b6 On this page Introduction Host Alerts Query Targeting Alerts Replica Set Alerts Sharded Cluster Alerts Backup Alerts User Alerts Group Alerts Billing Alert Introduction\u00b6 This page describes the conditions for which you can trigger alerts related to your clusters. You specify conditions and thresholds when configuring alerts. Host Alerts\u00b6 The conditions in this section apply if you select Host as the alert target when configuring the alert. You can apply the condition to all hosts or to specific type of host, such as primaries or config servers. Asserts\u00b6 The following alert conditions measure the rate of asserts for a MongoDB process, as collected from the MongoDB serverStatus command\u2019s asserts document. You can view asserts through cluster monitoring. Asserts: Regular is\u00b6 Sends an alert if the rate of regular asserts meets the specified threshold. Asserts: Warning is\u00b6 Sends an alert if the rate of warnings meets the specified threshold. Asserts: Msg is\u00b6 Sends an alert if the rate of message asserts meets the specified threshold. Message asserts are internal server errors. Stack traces are logged for these. Asserts: User is\u00b6 Sends an alert if the rate of errors generated by users meets the specified threshold. Opcounter\u00b6 The following alert conditions measure the rate of database operations on a MongoDB process since the process last started, as collected from the MongoDB serverStatus command\u2019s opcounters document. You can view opcounters through cluster monitoring. Opcounter: Cmd is\u00b6 Sends an alert if the rate of commands performed meets the specified threshold. Opcounter: Query is\u00b6 Sends an alert if the rate of queries meets the specified threshold. Opcounter: Update is\u00b6 Sends an alert if the rate of updates meets the specified threshold. Opcounter: Delete is\u00b6 Sends an alert if the rate of deletes meets the specified threshold. Opcounter: Insert is\u00b6 Sends an alert if the rate of inserts meets the specified threshold. Opcounter: Getmores is\u00b6 Sends an alert if the rate of getmore operations to retrieve the next cursor batch meets the specified threshold. See Cursor Batches in the MongoDB manual. Opcounter - Repl\u00b6 The following alert conditions measure the rate of database operations on MongoDB secondaries, as collected from the MongoDB serverStatus command\u2019s opcountersRepl document. You can view these metrics on the Opcounters - Repl chart, accessed through cluster monitoring. Opcounter: Repl Cmd is\u00b6 Sends an alert if the rate of replicated commands meets the specified threshold. Opcounter: Repl Update is\u00b6 Sends an alert if the rate of replicated updates meets the specified threshold. Opcounter: Repl Delete is\u00b6 Sends an alert if the rate of replicated deletes meets the specified threshold. Opcounter: Repl Insert is\u00b6 Sends an alert if the rate of replicated inserts meets the specified threshold. Atlas Free Tier\u00b6 Logical Size is\u00b6 Sends an alert if the total size of the data and indexes is outside the specified threshold. Applicable for Atlas Free Tier Only Memory\u00b6 The following alert conditions measure memory for a MongoDB process, as collected from the MongoDB serverStatus command\u2019s mem document. You can view these metrics on the Atlas Memory and Non-Mapped Virtual Memory charts, accessed through cluster monitoring. Memory: Resident is\u00b6 Sends an alert if the size of the resident memory meets the specified threshold. It is typical over time, on a dedicated database server, for the size of the resident memory to approach the amount of physical RAM on the box. Memory: Virtual is\u00b6 Sends an alert if the size of virtual memory for the mongod process meets the specified threshold. You can use this alert to flag excessive memory outside of memory mapping. For more information, click the Memory chart\u2019s i icon. Memory: Computed is\u00b6 Sends an alert if the size of virtual memory that is not accounted for by memory-mapping meets the specified threshold. If this number is very high (multiple gigabytes), it indicates that excessive memory is being used outside of memory mapping. For more information on how to use this metric, view the Non-Mapped Virtual Memory chart and click the chart\u2019s i icon. Connections\u00b6 The following alert condition measures connections to a MongoDB process, as collected from the MongoDB serverStatus command\u2019s connections document. You can view this metric on the Atlas Connections chart, accessed through cluster monitoring. Connections is\u00b6 Sends an alert if the number of active connections to the host meets the specified average. Queues\u00b6 The following alert conditions measure operations waiting on locks, as collected from the MongoDB serverStatus command\u2019s globalLock document. You can view these metrics on the Atlas Queues chart, accessed through cluster monitoring. Queues: Total is\u00b6 Sends an alert if the number of operations waiting on a lock of any type meets the specified average. Queues: Readers is\u00b6 Sends an alert if the number of operations waiting on a read lock meets the specified average. Queues: Writers is\u00b6 Sends an alert if the number of operations waiting on a write lock meets the specified average. Page Faults\u00b6 The following alert condition measures the rate of page faults for a MongoDB process, as collected from the MongoDB serverStatus command\u2019s extra_info.page_faults field. Page Faults is\u00b6 Sends an alert if the rate of page faults (whether or not an exception is thrown) meets the specified threshold. You can view this metric on the Atlas Page Faults chart, accessed through cluster monitoring. Cursors\u00b6 The following alert conditions measure the number of cursors for a MongoDB process, as collected from the MongoDB serverStatus command\u2019s metrics.cursor document. You can view these metrics on the Atlas Cursors chart, accessed through cluster monitoring. Cursors: Open is\u00b6 Sends an alert if the number of cursors the server is maintaining for clients meets the specified average. Cursors: Timed Out is\u00b6 Sends an alert if the number of timed-out cursors the server is maintaining for clients meets the specified average. Network\u00b6 The following alert conditions measure throughput for MongoDB process, as collected from the MongoDB serverStatus command\u2019s network document. You can view these metrics on a host\u2019s Network chart, accessed through cluster monitoring. Network: Bytes In is\u00b6 Sends an alert if the number of bytes sent to MongoDB meet the specified threshold. Network: Bytes Out is\u00b6 Sends an alert if the number of bytes sent from MongoDB meet the specified threshold. Network: Num Requests is\u00b6 Sends an alert if the number of requests sent to MongoDB meet the specified average. Replication Oplog\u00b6 The following alert conditions apply to the MongoDB process\u2019s oplog. You can view these metrics on the following charts, accessed through cluster monitoring: Replication Oplog Window Replication Lag Replication Headroom Oplog GB/Hour The following alert conditions apply to the oplog: Replication Oplog Window is\u00b6 Sends an alert if the approximate amount of time available in the primary\u2019s replication oplog meets the specified threshold. Replication Lag is\u00b6 Sends an alert if the approximate amount of time that the secondary is behind the primary meets the specified threshold. Atlas calculates replication lag using the approach described in Check the Replication Lag in the MongoDB manual. Replication Headroom is\u00b6 Sends an alert when the difference between the sync source member\u2019s oplog window and the replication lag time on the secondary meets the specified threshold. Oplog Data Per Hour is\u00b6 Sends an alert when the amount of data per hour being written to a primary\u2019s oplog meets the specified threshold. DB Storage\u00b6 The following alert conditions apply to database storage, as collected for a MongoDB process by the MongoDB dbStats command. The conditions are based on the summed total of all databases on the MongoDB process: DB Storage is\u00b6 Sends an alert if the allocated storage meets the specified threshold. This alert condition can be viewed on a host\u2019s DB Storage chart, accessed through cluster monitoring. DB Data Size is\u00b6 Sends an alert if approximate size of all documents (and their paddings) meets the specified threshold. WiredTiger Storage Engine\u00b6 The following alert conditions apply to the MongoDB process\u2019s WiredTiger storage engine, as collected from the MongoDB serverStatus command\u2019s wiredTiger.cache and wiredTiger.concurrentTransactions documents. You can view these metrics on the following charts, accessed through cluster monitoring: Tickets Available Cache Activity Cache Usage The following are the alert conditions that apply to WiredTiger: Tickets Available: Reads is\u00b6 Sends an alert if the number of read tickets available to the WiredTiger storage engine meet the specified threshold. Tickets Available: Writes is\u00b6 Sends an alert if the number of write tickets available to the WiredTiger storage engine meet the specified threshold. Cache: Dirty Bytes is\u00b6 Sends an alert when the number of dirty bytes in the WiredTiger cache meets the specified threshold. Cache: Used Bytes is\u00b6 Sends an alert when the number of used bytes in the WiredTiger cache meets the specified threshold. Cache: Bytes Read Into Cache is\u00b6 Sends an alert when the number of bytes read into the WiredTiger cache meets the specified threshold. Cache: Bytes Written From Cache is\u00b6 Sends an alert when the number of bytes written from the WiredTiger cache meets the specified threshold. System and Disk Alerts\u00b6 The following alert conditions measure usage on your Atlas server instances: System: CPU (Steal) % is\u00b6 Applicable when the EC2 instance credit balance is exhausted. The percentage by which the CPU usage exceeds the guaranteed baseline CPU credit accumulation rate. CPU credits are units of CPU utilization that you accumulate. The credits accumulate at a constant rate to provide a guaranteed level of performance. These credits can be used for additional CPU performance. When the credit balance is exhausted, only the guaranteed baseline of CPU performance is provided, and the amount of excess is shown as steal percent. System: CPU (User) % is\u00b6 The normalized CPU usage of the MongoDB process, which is scaled to a range of 0-100%. Disk space % used on Data Partition is\u00b6 The percentage of disk space used on any partition that contains the MongoDB collection data. Disk space % used on Index Partition is\u00b6 The percentage of disk space used on any partition that contains the MongoDB index data. Disk space % used on Journal Partition is\u00b6 The percentage of disk space used on the partition that contains the MongoDB journal, if journaling is enabled. Disk I/O % utilization on Data Partition is\u00b6 The percentage of time during which requests are being issued to any partition that contains the MongoDB collection data. This includes requests from any process, not just MongoDB processes. Disk I/O % utilization on Index Partition is\u00b6 The percentage of time during which requests are being issued to any partition that contains the MongoDB index data. This includes requests from any process, not just MongoDB processes. Disk I/O % utilization on Journal Partition is\u00b6 The percentage of time during which requests are being issued to the partition that contains the MongoDB journal, if journaling is enabled. This includes requests from any process, not just MongoDB processes. Inapplicable Host Conditions\u00b6 The following host conditions do not apply to Atlas. Atlas will not generate alerts for the following conditions: Memory: Mapped is B-tree: accesses is B-tree: hits is B-tree: misses is B-tree: miss ratio is Effective Lock % is Background Flush Average is Accesses Not In Memory: Total is Page Fault Exceptions Thrown: Total is Cursors: Client Cursors Size is Journaling Commits in Write Lock is Journaling MB is Journaling Write Data Files MB is Query Targeting Alerts\u00b6 The following alerts may indicate a need for indexes to improve the efficiency of your read operations. For more information on indexing, refer to Indexing Strategies. Query Targeting: Scanned / Returned\u00b6 Sends an alert if the ratio of documents scanned to documents returned meets the specified threshold. Query Targeting: Scanned Objects / Returned\u00b6 Sends an alert if the ratio of index items scanned to documents returned meets the specified threshold. Replica Set Alerts\u00b6 The following alert condition applies to replica sets: Replica set has no primary\u00b6 Sends an alert when a replica set does not have a primary. Specifically, when none of the members of a replica set have a status of PRIMARY, the alert triggers. For example, this condition may arise when a set has an even number of voting members resulting in a tie. If Atlas collects data during an election for primary, this alert might send a false positive. To prevent such false positives, set the alert configuration\u2019s after waiting interval (in the configuration\u2019s Send to section). Sharded Cluster Alerts\u00b6 The following alert condition applies to sharded clusters: Cluster is missing an active mongos\u00b6 Sends an alert if Atlas cannot reach a mongos for the cluster. Backup Alerts\u00b6 The following alert conditions apply to your cluster backups, if enabled: Backup oplog is behind\u00b6 Sends an alert if the most recent oplog data received by Atlas is more than 75 minutes old. Backup requires a resync\u00b6 Sends an alert if the replication process for a backup falls too far behind the oplog to catch up. This occurs when the host overwrites oplog entries that backup has not yet replicated. When this happens, you must resync backup. User Alerts\u00b6 The following alert conditions apply to Atlas users. User joined the group\u00b6 Sends an alert when a new user joins the Atlas group. User left the group\u00b6 Sends an alert when a user leaves the Atlas group. User had their role changed\u00b6 Sends an alert when an Atlas user\u2019s roles have changed. Group Alerts\u00b6 The following alert conditions apply to your Atlas group. Users awaiting approval to join group\u00b6 Sends an alert if there are users who have asked to join the group. A user can ask to join a group when first registering for Atlas. Users do not have two-factor authentication enabled\u00b6 Sends an alert if the group has users who have not set up two-factor authentication. Billing Alert\u00b6 The following alert condition applies to Atlas billing. Credit card is about to expire\u00b6 Sends an alert if the credit card on file is about to expire. The alert is triggered at the beginning of the month that the card expires. Atlas enables this alert when a credit card is added for the first time. Daily amount billed ($) is above threshold\u00b6 The group\u2019s last daily amount billed exceeds your configured threshold. Atlas does not account for any credits applied for the previous day when calculating the billed amount. Note The amount billed is in USD. Group pending invoice ($) total is above threshold\u00b6 The group\u2019s pending monthly invoice exceeds your configured threshold. When the current pending invoice closes, this alert resets. This alert resolves automatically if you pay enough to bring the pending invoice below the threshold. It may take up to 24 hours for the payment to clear. This alert can repeat if the pending invoice exceeds the threshold again before the invoice closes. Note The amount billed is in USD. \u2190 Configure Alert Settings Alert Resolutions \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "This page describes the conditions for which you can trigger alerts related to your clusters. You specify conditions and thresholds when configuring alerts.",
            "tags": ""
        },
        {
            "slug": "/reference/amazon-aws.html",
            "title": "Amazon Web Services",
            "headings": [
                "Amazon Web Services\u00b6",
                "Synopsis\u00b6",
                "Instance Configuration Options\u00b6",
                "Amazon Availability Zones\u00b6",
                "Regions with at Least Three Availability Zones\u00b6",
                "Regions with Only Two Availability Zones\u00b6"
            ],
            "text": "Reference > Amazon Web Services Amazon Web Services\u00b6 On this page Synopsis Instance Configuration Options Amazon Availability Zones Synopsis\u00b6 Atlas supports deploying clusters onto Amazon Web Services (AWS). Atlas supports all AWS regions other than those in China and US GovCloud: AWS Region Location us-east-1 US East (N. Virginia) us-east-2 US East (Ohio) us-west-1 US West (N. California) us-west-2 US West (Oregon) ca-central-1 Canada (Central) eu-west-1 EU (Ireland) eu-west-2 EU (London)\u201d eu-central-1 EU (Frankfurt) ap-northeast-1 Asia Pacific (Tokyo) ap-northeast-2 Asia Pacific (Seoul) ap-southeast-1 Asia Pacific (Singapore) ap-southeast-2 Asia Pacific (Sydney) ap-south-1 Asia Pacific (Mumbai) sa-east-1 South America (Sao Paulo) This page provides reference material related to Atlas cluster deployments on AWS. Instance Configuration Options\u00b6 Each Atlas instance size comes with a default set of resources. Atlas provides the following resource configuration options: Custom Storage Size The size of the server root volume. Atlas clusters deployed onto AWS use general purpose SSDs [1]. The maximum custom storage size for any instance is 16TB, but workloads typically require less than 2TB. Custom Storage Speed The input/output operations per second (IOPS) the system can perform. The available options depend on the specified storage size. Atlas provides the following custom storage speeds in order of maximum IOPS: Standard (Default) Fast Fastest. Choosing the Fast or Fastest options changes the disk type from a general-purpose SSD to a provisioned-IOPS SSD [1]. The selected instance and custom storage size dictate the maximum IOPS for each storage speed. Encrypted Storage Volumes Encrypts the root volume for data at rest inside the volume and all data moving between the volume and the instance. Atlas uses Amazon EBS encryption. Amazon Availability Zones\u00b6 Each AWS region includes a set number of independent availability zones. Availability Zones consist of one or more discrete data centers, each with redundant power, networking and connectivity, housed in separate facilities. For regions that have at least three availability zones (3AZ), Atlas deploys clusters across three availability zones. For regions that only have two availability zones (2AZ), Atlas deploys clusters across two availability zones. The Atlas Add New Cluster form marks regions that support at least three availability zones as Recommended, as they provide higher availability. The number of availability zones in a region has no affect on the number of MongoDB nodes Atlas can deploy. MongoDB Atlas clusters are always made of replica sets with a minimum of three MongoDB nodes. For more information on the number of availability zones in a given region, see the Amazon documentation on global infrastructure. For more information on AWS regions and availability zones, see the Amazon documentation on using regions and availability zones Regions with at Least Three Availability Zones\u00b6 Atlas clusters deployed in regions with at least three availability zones are split across three availability zones. For example, a three node replica set cluster would have one node deployed onto each availability zone. 3AZ clusters have higher availability compared to 2AZ clusters. However, not all regions support 3AZ clusters. Regions with Only Two Availability Zones\u00b6 Atlas clusters deployed in regions with two availability zones are split across the two availability zones. For example, a three node replica set cluster would have two nodes deployed to one availability zone and the remaining node deployed to the other availability zone. 2AZ clusters have a higher chance of loss of availability in the event of the loss of an availability zone than 3AZ clusters. However, where latency or location are a priority, a region that supports 2AZ clusters may be preferred. [1](1, 2) For detailed documentation on Amazon storage options, see Amazon EBS Volume Types \u2190 Reference Google Cloud Platform \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas supports deploying clusters onto Amazon Web Services (AWS). Atlas supports all AWS regions other than those in China and US GovCloud:",
            "tags": ""
        },
        {
            "slug": "/reference/api-resources.html",
            "title": "API Resources",
            "headings": [
                "API Resources\u00b6"
            ],
            "text": "API > API Resources API Resources\u00b6 The Atlas API provides the resources listed here. The resources give programmatic access to Atlas\u2018s features. For information on the API\u2019s principles and conventions, see API. The Atlas API provides the following resources: Root The starting point for the Atlas API. Group IP Whitelist Retrieves and edits the IP whitelist, which controls client access to your MongoDB clusters. Clusters Provides access to your MongoDB cluster configuration Database Users Retrieves and edits the MongoDB users who have access to your MongoDB clusters. Alerts Retrieves and acknowledges alerts. Alert Configurations Retrieves and edits alert configurations, which define the conditions that trigger alerts and the methods of notification. Root Group IP Whitelist Database Users Get All Database Users Get a Single Database User Create a Database User Update a Database User Delete a Database User Clusters Get All Clusters Get a Single Cluster Create a Cluster Modify a Cluster Delete a Cluster Alerts Get All Alerts Get an Alert Acknowledge an Alert Alert Configurations Get All Alert Configurations for a Group Create an Alert Configuration Get an Alert Configuration Update an Alert Configuration Enable/Disable Alert Configuration Delete an Alert Configuration Get Open Alerts for Alert Configuration VPC Get a List of Cloud Services Containers Create a New Container Get a Specific Container Update a Container Get a List of VPC Peering Connections Create a New VPC Peering Connection Get a Specific VPC Peering Connection Update an Existing VPC Peering Connection Delete an Existing VPC Peering Connection User API Whitelist \u2190 Configure Atlas API Access Root \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/google-gcp.html",
            "title": "Google Cloud Platform",
            "headings": [
                "Google Cloud Platform\u00b6",
                "Synopsis\u00b6",
                "Instance Configuration Options\u00b6",
                "GCP Zones\u00b6",
                "Regions with at Least Three Zones\u00b6"
            ],
            "text": "Reference > Google Cloud Platform Google Cloud Platform\u00b6 On this page Synopsis Instance Configuration Options GCP Zones Synopsis\u00b6 Atlas supports deploying clusters onto Google Cloud Platform (GCP). This page provides reference material related to Atlas cluster deployments on GCP. Atlas supports the following GCP regions: GCP Region Location us-central1 Iowa (Central US) us-east1 South Carolina (Eastern US) europe-west1 Belgium (Western Europe) asia-east1 Taiwan (Eastern Asia-Pacific) Instance Configuration Options\u00b6 Each Atlas instance size comes with a default set of resources. Atlas provides the following resource configuration options: Custom Storage Size The size of the server root volume. Atlas clusters deployed onto GCP use SSD persistent storage [1]. For M10 instances, the maximum custom storage size is 3TB. For M20+ instances, the maximum custom storage size is 16TB. Workloads typically require less than 2TB. Atlas configures the following resources automatically and does not allow user modification: Storage Speed The input/output operations per second (IOPS) [1] the system can perform. This value is fixed at 30 IOPS per GB. Example The M30 instance size has a default storage size of 40GB per instance and a max storage speed of 1200 max IOPS. Increasing the storage size to 100GB per instance increases the max storage speed to ( 30 IOPS / GB * 100 GB) or 3000 IOPS. Encrypted Storage Volumes GCP storage volumes are always encrypted. GCP Zones\u00b6 Each GCP region includes a set number of independent zones. Each zone has power, cooling, networking, and control planes that are isolated from other zones. For regions that have at least three zones (3Z), Atlas deploys clusters across three zones. For regions that only have two zones (2Z), Atlas deploys clusters across two zones. The Atlas Add New Cluster form marks regions that support 3Z clusters as Recommended, as they provide higher availability. The number of zones in a region has no affect on the number of MongoDB nodes Atlas can deploy. MongoDB Atlas clusters are always made of replica sets with a minimum of three MongoDB nodes. For general information on GCP regions and zones, see the Google documentation on regions and zones Regions with at Least Three Zones\u00b6 If the selected GCP region has at least three zones, Atlas clusters are split across three zones. For example, a three node replica set cluster would have one node deployed onto each zone. 3Z clusters have higher availability compared to 2Z clusters. However, not all regions support 3Z clusters. [1](1, 2) For detailed documentation on Google storage options, see Storage Options. \u2190 Amazon Web Services Microsoft Azure \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas supports deploying clusters onto Google Cloud Platform (GCP). This page provides reference material related to Atlas cluster deployments on GCP.",
            "tags": ""
        },
        {
            "slug": "/reference/microsoft-azure.html",
            "title": "Microsoft Azure",
            "headings": [
                "Microsoft Azure\u00b6",
                "Synopsis\u00b6",
                "Instance Configuration Options\u00b6",
                "Azure Fault Domains\u00b6",
                "Regions with at Least Three Fault Domains\u00b6"
            ],
            "text": "Reference > Microsoft Azure Microsoft Azure\u00b6 On this page Synopsis Instance Configuration Options Azure Fault Domains Synopsis\u00b6 Atlas supports deploying clusters onto Microsoft Azure. This page provides reference material related to Atlas cluster deployments on Azure. Atlas supports the following Azure regions: Azure Region Location eastus Virginia (East US) eastus2 Virginia (East US) centralus Iowa (Central US) northcentralus Illinois (North Central US) southcentralus Texas (South Central US) westus California (West US) northeurope Ireland (North Europe) westeurope Netherlands (West Europe) Instance Configuration Options\u00b6 Each Atlas instance size comes with a default set of resources. Atlas provides the following resource configuration options: Custom Storage Size The size of the server root volume. Atlas clusters deployed onto Azure use premium storage disks. [1] Atlas supports the following storage sizes: 128GB 512GB 1024GB (1TB) Workloads typically require less than 2TB. Atlas configures the following resources automatically and does not allow user modification: Storage Speed The input/output operations per second (IOPS) [1] the system can perform. This value is fixed based on the specified custom storage size. Encrypted Storage Volumes Azure storage volumes are always encrypted. Azure Fault Domains\u00b6 Each Azure region includes a set number of fault domains. Fault domains consist of a group of virtual machines that share a common power source and network switch. For regions that have at least three fault domains (3FD), Atlas deploys clusters across three fault domains. For regions that only have two fault domains (2FD), Atlas deploys clusters across two fault domains. The Atlas Add New Cluster form marks regions that support 3FD clusters as Recommended, as they provide higher availability. The number of fault domains in a region has no affect on the number of MongoDB nodes Atlas can deploy. MongoDB Atlas clusters are always made of replica sets with a minimum of three MongoDB nodes. For general information on Azure regions and fault domains, see Manage the availability of Windows virtual machines in Azure Regions with at Least Three Fault Domains\u00b6 If the selected Azure region has at least three fault domains, Atlas clusters are split across three fault domains. For example, a three node replica set cluster would have one node deployed onto each zone. 3FD clusters have higher availability compared to 2FD clusters. However, not all regions support 3FD clusters. [1](1, 2) For detailed documentation on Azure storage options, see High-performance Premium Storage and managed disks for VMs \u2190 Google Cloud Platform Command Limitations in Free Tier Clusters \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Atlas supports deploying clusters onto Microsoft Azure. This page provides reference material related to Atlas cluster deployments on Azure.",
            "tags": ""
        },
        {
            "slug": "/reference/mongomirror.html",
            "title": "mongomirror",
            "headings": [
                "mongomirror\u00b6",
                "Download mongomirror\u00b6",
                "Syntax\u00b6",
                "Migration Process\u00b6",
                "Progress Measurement\u00b6",
                "Performance\u00b6",
                "Considerations\u00b6",
                "Source MongoDB Deployment\u00b6",
                "Target Atlas Cluster\u00b6",
                "Required Access on Source Replica Set\u00b6",
                "Required Access on Destination Cluster\u00b6",
                "oplog Entries\u00b6",
                "Options\u00b6",
                "Examples\u00b6",
                "Migrate a Replica Set into Atlas\u00b6",
                "Source Replica Set Uses SCRAM-SHA1 Authentication\u00b6",
                "Source Replica Set Requires X509 Client Authentication\u00b6",
                "Source Replica Set Requires Kerberos/GSSAPI Authentication\u00b6"
            ],
            "text": "Import Data into Cluster > Migrate with mongomirror > mongomirror mongomirror\u00b6 On this page Download mongomirror Syntax Migration Process Considerations Options Examples mongomirror\u00b6 mongomirror\u00b6 A utility for migrating data from an existing MongoDB replica set to a MongoDB Atlas replica set. mongomirror does not require you to shut down your existing replica set or applications. Important mongomirror does not import user/role data. Download mongomirror\u00b6 Operating System Download Amazon Linux mongomirror-linux-x86_64-enterprise-amzn64-0.2.4.tgz Debian 7 mongomirror-linux-x86_64-debian71-0.2.4.tgz Debian 8 mongomirror-linux-x86_64-debian81-0.2.4.tgz OSX mongomirror-osx-x86_64-0.2.4.tgz RHEL 6.2 mongomirror-linux-x86_64-rhel62-0.2.4.tgz RHEL 7.0 mongomirror-linux-x86_64-rhel70-0.2.4.tgz Suse 12 mongomirror-linux-x86_64-suse12-0.2.4.tgz Ubuntu 14.04 mongomirror-linux-x86_64-ubuntu1404-0.2.4.tgz Windows mongomirror-win32-x86_64-0.2.4.zip Syntax\u00b6 To run mongomirror, you must specify the source replica set and the target Atlas replica set. For Atlas, you must specify a user in the Atlas cluster with appropriate privileges and the corresponding password. If the source replica set requires authentication, you must specify a user with appropriate privileges. mongomirror --host <sourceReplSet> \\ --destination <atlasCluster> \\ --destinationUsername <atlasAdminUser> \\ --destinationPassword <atlasPassword> \\ [Additional options] For details on the options, see Options. Migration Process\u00b6 When you start mongomirror: First, mongomirror performs an initial sync, copying collections from the existing MongoDB replica set to the target cluster in Atlas. After the initial sync, mongomirror continuously tails the replica set\u2019s oplog for incoming changes and replays them on the target cluster in MongoDB Atlas. See oplog Entries. Once started, mongomirror runs continuously until you shut down the process. If you shut down mongomirror during the initial sync stage, either ensure that the target cluster is empty before you restart mongomirror or run mongomirror with the --drop option. If you shut down mongomirror during the oplog tailing stage, you can restart mongomirror to continue from the last oplog record processed. See the --bookmarkFile option. Progress Measurement\u00b6 mongomirror logs its progress to the standard output in the terminal: During the initial sync, mongomirror logs a progress bar for each collection it copies. For example: 2016-12-16T17:54:53.638-0800 [#....................] park.events 2179/34184 (6.4%) 2016-12-16T17:54:53.638-0800 [#############........] zoo.animals 29000/49778 (58.3%) When tailing the oplog, mongomirror logs the lag time, in seconds, between the most recent oplog entry on the source and the last processed oplog entry on the target. For example: 2016-12-12T16:22:17.027-0800 Current lag from source: 6s A lag time of 6 seconds means that the last oplog entry mongomirror processed was 6 seconds behind the most recent one available on the source. Note The amount of time it takes mongomirror to catch up completely may be greater or lesser than 6 seconds, depending on how many entries arrive per second. A lag time of 0 seconds indicates that mongomirror is processing entries that arrived less than one second before the latest oplog entry. Performance\u00b6 To avoid contention for network and CPU resources, do not run mongomirror on the same hosts that provide your replica set\u2019s mongod instances. mongomirror must have network access to the source replica set. mongomirror must have network access to the target cluster. mongomirror has approximately the same performance impact on your source replica set as a secondary: For the initial sync stage, the load scales with the size of your data set. Once an initial sync completes, the load scales with oplog gigabytes used per hour. Considerations\u00b6 Source MongoDB Deployment\u00b6 The source MongoDB deployment must be a replica set. If the source is a standalone MongoDB deployment, convert to a replica set first to use mongomirror. See Convert a Standalone to a Replica Set. The source replica set must be version 3.0 or greater. Target Atlas Cluster\u00b6 The target Atlas cluster must be a replica set, but cannot be an M0 (Free Tier) deployment. For the initial sync stage of mongomirror, the target Atlas cluster should be empty or you should run mongomirror with the --drop option. The target Atlas cluster must include in its whitelist either The public IP address of the server on which mongomirror is running, or If set up for VPC peering, either the peer\u2019s VPC CIDR block (or a subset) or the peer VPC\u2019s Security Group. mongomirror automatically connects to MongoDB Atlas over TLS/SSL. Required Access on Source Replica Set\u00b6 If the source replica set requires authentication, you must include user credentials when running mongomirror. You must specify a MongoDB user that has the following privileges in the source replica set: Read any database, including the local database. A MongoDB user with the backup role in the source provides these privileges. Required Access on Destination Cluster\u00b6 You must include user credentials for the Atlas cluster when running mongomirror. You must specify a MongoDB user that has the following privileges in the Atlas cluster: readWriteAnyDatabase and dbAdminAnyDatabase. A MongoDB user with Atlas admin role in the Atlas cluster provides these privileges. oplog Entries\u00b6 Because mongomirror tails the source oplog and applies the entries to the destination cluster, the destination oplog is not an exact duplicate of the source\u2019s oplog. Instead, the tailed entries from the source oplog become part of an applyOps entry in the destination oplog. For example, after mongomirror has performed the initial sync, the source replica set receives three insert operations and has the following oplog entries for these operations: {\"ts\":<ts1>,\"t\":<t1>,\"h\":<h1>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":0,\"a\":0}} {\"ts\":<ts2>,\"t\":<t2>,\"h\":<h2>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":1,\"a\":1}} {\"ts\":<ts3>,\"t\":<t3>,\"h\":<h3>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":2,\"a\":2}} As mongomirror tails the source oplog and applies these operations to the destination cluster, the three entries become part of a single entry in the destination cluster\u2019s oplog: {\"ts\":<ts>,\"t\":<t>,\"h\":<h>,\"v\":2,\"op\":\"c\",\"ns\":\"admin.$cmd\",\"o\":{\"applyOps\": [ {\"ts\":<ts1>,\"t\":<t1>,\"h\":<h1>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":0,\"a\":0},\"o2\":{ }}, {\"ts\":<ts2>,\"t\":<t2>,\"h\":<h2>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":1,\"a\":1},\"o2\":{ }}, {\"ts\":<ts3>,\"t\":<t3>,\"h\":<h3>,\"v\":2,\"op\":\"i\",\"ns\":\"test.foo\",\"o\":{\"_id\":2,\"a\":2},\"o2\":{ }} ] } } For applications that tail or parse the oplog, if you switch these applications to read from the destination cluster\u2019s oplog, you may need to modify the applications, depending on how you wish to handle these applyOps entries. If you have not switched over to writing to the destination cluster, you can continue to read from the source without modifying these applications. Options\u00b6 --host <host>\u00b6 The host information for the source replica set. Specify the replica set name and a seed list of the members, as in the following: <RSname>/<host1>:<port1>,<host2>:<port2>,<host3>:<port3> --username <username>\u00b6 If the source replica set requires authentication, the name of a user in the source replica set with privileges to read any database, including the local database. A user with the backup role provides the appropriate privileges. For details on the specific privileges required, see Required Access on Source Replica Set. --password <password>\u00b6 Password for the user specified in --username. --authenticationDatabase <authenticationDatabase>\u00b6 The database in the source replica set where the user specified in --username was created. --authenticationMechanism <authenticationMechanism>\u00b6 The authentication mechanism to use to authenticate the user to the source replica set. Value Description SCRAM-SHA-1 RFC 5802 standard Salted Challenge Response Authentication Mechanism using the SHA1 hash function. MONGODB-CR MongoDB challenge/response authentication. MONGODB-X509 MongoDB TLS/SSL certificate authentication. GSSAPI (Kerberos) External authentication using Kerberos. This mechanism is available only in MongoDB Enterprise. PLAIN (LDAP SASL) External authentication using LDAP. You can also use PLAIN for authenticating in-database users. PLAIN transmits passwords in plain text. This mechanism is available only in MongoDB Enterprise. --destination <destination>\u00b6 The host information for the target Atlas replica set. Specify the replica set name and a seed list of the members, as in the following: <RSname>/<host1>:<port1>,<host2>:<port2>,<host3>:<port3> --destinationUsername <Atlas user name>\u00b6 Name of a MongoDB user in the Atlas cluster with privileges to read, write, and admin any database. A user with the Atlas admin role provides the appropriate privileges. For details on the specific privileges required, see Required Access on Destination Cluster. --destinationPassword <password>\u00b6 Password of the MongoDB user specified in \u2013destinationUsername. --drop\u00b6 Flag that indicates that mongomirror should drop all but the system.* collections in the target cluster. --ssl\u00b6 Enables TLS/SSL encrypted connections to the source replica set. --sslPEMKeyFile <file>\u00b6 The .pem file if the source replica set requires clients to present a certificate. The .pem file contains both the TLS/SSL certificate and key. Specify the file using relative or absolute paths. --sslPEMKeyPassword <value>\u00b6 Password to decrypt the certificate-key file specified in \u2013sslPEMKeyFile. Use if the \u2013sslPEMKeyFile is encrypted. --sslCAFile <file>\u00b6 The .pem file that contains the root certificate chain from the Certificate Authority(CA) for the source replica set. Specify the file using relative or absolute paths. --sslCRLFile <filename>\u00b6 The .pem file that contains the Certificate Revocation List for the source replica set. Specify the file using relative or absolute paths. --sslAllowInvalidHostnames\u00b6 Disables the validation of the hostnames in TLS/SSL certificates presented by the source replica set. Allows mongomirror to connect to the source replica set if the hostname in the certificates does not match the specified hostname. --sslAllowInvalidCertificates\u00b6 Bypasses the validation checks for certificates presented by the source replica set and allows the use of invalid certificates. When using the --allowInvalidCertificates setting, MongoDB logs as a warning the use of the invalid certificate. --gssapiServiceName <name>\u00b6 If the source replica set uses Kerberos authentication, the name of the service using GSSAPI/Kerberos. Only required if the service does not use the default name of mongodb. This option is available only in MongoDB Enterprise. --gssapiHostName <host>\u00b6 If the source replica set uses Kerberos authentication, the hostname of a service using GSSAPI/Kerberos. Only required if the hostname of a machine does not match the hostname resolved by DNS. This option is available only in MongoDB Enterprise. --readPreference <read preference>\u00b6 Read preference that mongomirror uses to read from the source replica set. Can specify read preference name, e.g. mongomirror --readPreference primary ... or as a JSON object; e.g. mongomirror --readPreference '{mode: primary}' ... --writeConcern <write concern>\u00b6 Deprecated since version 0.2.3: mongomirror always uses majority write concern. --numParallelCollections <num>, -j <num>\u00b6 Default: 4 The number of collections to copy and restore in parallel. --bypassDocumentValidation\u00b6 Deprecated since version 0.2.3: mongomirror always bypasses document validation. --tailOnly\u00b6 Flag that indicates that mongomirror only tails the oplog; i.e. skips the initial sync phase. --bookmarkFile <file>\u00b6 Default: mongomirror.timestamp Name of the oplog timestamp bookmark file. --forceDump\u00b6 Flag that indicates that mongomirror resync all source collections, even if a nonempty bookmark file exists. --httpStatusPort\u00b6 Directs mongomirror to start an HTTP server on port 8080. You can retrieve the current status of mongomirror by issuing an HTTP GET request to http://localhost:8080. When running with --httpStatusPort, mongomirror does not exit when it encounters an error. Instead, it logs the error as normal and reports the error over HTTP. mongomirror returns a document in response to the HTTP request. The following example syntax represents all the possible output fields - the actual response may only return a subset of these fields. See the subsequent table for a description of the fields and when to expect them. { \"stage\" : \"<stage Name>\", \"phase\" : \"<phase Name>\", \"details\" : { \"currentTimestamp\" : \"<BSON timestamp>\", \"latestTimestamp\" : \"<BSON timestamp>\", \"<namespace>\" : { \"complete\" : <boolean>, \"copiedBytes\" : <integer>, \"totalBytes\" : <integer>, \"createIndexes\" : <integer> }, ... }, \"errorMessage\" : \"<error message>\" } The following table describes each field and its possible values: Field Description stage The name of the stage in progress. Possible values are: initializing mongomirror has started but is not yet copying any data. initial sync mongomirror is copying documents and indexes that already exist on the source deployment. mongomirror also tails and applies entries from the oplog. oplog sync mongomirror is tailing and applying entries from the oplog. phase The name of the phase. Provides more specific details about what part of the stage is in progress. details A document providing a detailed description of the progress of the current phase. During the initial sync stage, each subdocument in details represents a single collection being copied by mongomirror. Depending on the stage or phase, mongomirror may not include this field in the response. details.<namespace> The full namespace of the collection being copied, displayed as <database>.<collection>. Only displays during the initial sync phase when copying documents or indexes. details.<namespace>.complete Displays true or false depending on whether or not mongomirror has copied all documents or indexes from the collection to the target Atlas cluster. Only displays during the initial sync phase when copying documents or indexes. details.<namespace>.copiedBytes The number of bytes copied so far. Note that this is a different measurement from the mongomirror logs, which report the current/total number of documents copied. Only displays during the initial sync phase when copying non-index data. details.<namespace>.totalBytes The total size (in bytes) of the collection. Only displays during the initial sync phase when copying non-index data. details.<namespace>.createIndexes The number of indexes that have been or will be created. Only displays during the initial sync stage when copying indexes. details.currentTimestamp The BSON timestamp value of the oplog entry most recently processed. mongomirror only refreshes this data point every 10 seconds, so mongomirror may be slightly further ahead of the reported time. Only displays during the initial sync or oplog sync stages when tailing or applying oplog entries. details.latestTimestamp During the initial sync stage, this represents the BSON timestamp value of the latest oplog entry available after the initial data was copied during initial sync. During the oplog sync stage, this represents the BSON timestamp value of the latest oplog entry available on the source deployment. Only displays during the initial sync or oplog sync stages when tailing or applying oplog entries. errorMessage A string that describes any error encountered by mongomirror. Examples\u00b6 Migrate a Replica Set into Atlas\u00b6 The following example migrates from a source replica set that does not require authentication: mongomirror --host sourceRS/source-host1:27017,source-host2:27017 \\ --destination myAtlasRS/atlas-host1:27017,atlas-host2:27017 \\ --destinationUsername myAtlasUser \\ --destinationPassword myAtlasPwd To migrate from a source replica set that does not require authentication, run mongomirror with the following options: --host <sourceReplSet/seed list of members> --destination <Atlas Cluster> --destinationUsername <atlasUser> --destinationPassword <atlasPassword> For the destination, specify the replica set name followed by a seed list of members in the following format: <replicaSetName>/<host1>:<port1>,<host2>:<port2>,<host3>:<port3>,... The specified Atlas user must have the required privileges for Atlas. The Atlas admin role provides the required privileges. Source Replica Set Uses SCRAM-SHA1 Authentication\u00b6 The following example migrates from a source replica set that uses SCRAM-SHA1 authentication: mongomirror --host sourceRS/source-host1:27017,source-host2:27017,source-host3:27017 \\ --username mySourceUser \\ --password mySourcePassword \\ --authenticationDatabase admin \\ --destination myAtlasRS/atlas-host1:27017,atlas-host2:27017 \\ --destinationUsername myAtlasUser \\ --destinationPassword atlasPassw0Rd To migrate from a source replica set that does uses SCRAM-SHA1 authentication, run mongomirror with the following options: --host <sourceReplSet/seed list of members> --username <sourceUser> --password <sourcePassword> --authenticationDatabase <sourceDatabase> --destination <Atlas Cluster> --destinationUsername <atlasUser> --destinationPassword <atlasPassword> The source replica set user must have the required access on source cluster. The backup role provides the appropriate privileges. For the destination, specify the replica set name followed by a seed list of members in the following format: <replicaSetName>/<replicaMember>,<replicaMember>,<replicaMember>,... The specified Atlas user must have the required access on Atlas. The Atlas admin role provides the required privileges. Source Replica Set Requires X509 Client Authentication\u00b6 The following example migrates from a source replica set that uses X.509 authentication: mongomirror --host sourceRS/source-host1:27017,source-host2:27017,source-host3:27017 \\ --username \"CN=myName,OU=myOrgUnit,O=myOrg,L=myLocality,ST=myState,C=myCountry\" \\ --authenticationDatabase '$external' \\ --authenticationMechanism MONGODB-X509 \\ --ssl \\ --sslPEMKeyFile <path-to-my-client-certificate.pem> \\ --sslCAFile <path-to-my-certificate-authority-certificate.pem> \\ --destination myAtlasRS/atlas-host1:27017,atlas-host2:27017 \\ --destinationUsername myAtlasUser \\ --destinationPassword atlasPassw0Rd To migrate from a source replica set that uses X.509 authentication, run mongomirror with the following options: --host <sourceReplSet/seed list of members> --username <subject from the client certificate> --authenticationMechanism MONGODB-X509 --authenticationDatabase '$external' --ssl --sslPEMKeyFile <path-to-my-client-certificate.pem> --sslCAFile <path to root CA PEM file> --destination <Atlas Cluster> --destinationUsername <atlasUser> --destinationPassword <atlasPassword> The source replica set user must have the required access on source cluster. The backup role provides the appropriate privileges. For the destination, specify the replica set name followed by a seed list of members in the following format: <replicaSetName>/<replicaMember>,<replicaMember>,<replicaMember>,... The specified Atlas user must have the required access on Atlas. The Atlas admin role provides the required privileges. Source Replica Set Requires Kerberos/GSSAPI Authentication\u00b6 The following example migrates from a source replica set that uses Kerberos authentication: mongomirror --host sourceRS/source-host1:27017,source-host2:27017,source-host3:27017 \\ --username sourceUser/administrator@MYREALM.COM \\ --authenticationDatabase '$external' \\ --authenticationMechanism GSSAPI \\ --destination myAtlasRS/atlas-host1:27017,atlas-host2:27017,atlas-host3:27017 \\ --destinationUsername atlasUser \\ --destinationPassword atlasPass To migrate from a source replica set that uses X.509 authentication, run mongomirror with the following options: --host <sourceReplSet/seed list of members> --username <Kerberos user principal> --authenticationDatabase '$external' --authenticationMechanism GSSAPI --destination <Atlas Cluster> --destinationUsername <atlasUser> --destinationPassword <atlasPassword> The source replica set user must have the required access on source cluster. The backup role provides the appropriate privileges. For the destination, specify the replica set name followed by a seed list of members in the following format: <replicaSetName>/<replicaMember>,<replicaMember>,<replicaMember>,... The specified Atlas user must have the required access on Atlas. The Atlas admin role provides the required privileges. \u2190 Migrate with mongomirror Seed with mongorestore \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "To run mongomirror, you must specify the source replica set and the target Atlas replica set. For Atlas, you must specify a user in the Atlas cluster with appropriate privileges and the corresponding password. If the source replica set requires authentication, you must specify a user with appropriate privileges.",
            "tags": ""
        },
        {
            "slug": "/reference/alert-resolutions/query-targeting.html",
            "title": "Query Targeting",
            "headings": [
                "Query Targeting\u00b6",
                "Description\u00b6",
                "Common Triggers\u00b6",
                "Possible Solution\u00b6"
            ],
            "text": "Monitoring and Alerts > Alert Resolutions > Query Targeting Query Targeting\u00b6 On this page Description Common Triggers Possible Solution Description\u00b6 Query Targeting alerts indicate inefficient query or queries. Query Targeting: Scanned / Returned occurs if the number of documents examined to fulfill a query relative to the actual number of returned documents meets or is above a certain threshold. Query Targeting: Scanned Objects / Returned occurs if the number of index keys examined to fulfill a query relative to the actual number of returned documents meets or is above a certain threshold. Common Triggers\u00b6 No index that supports a given query or queries. Existing index can only partially support a query or queries. Possible Solution\u00b6 Consider adding one more more indexes to better serve these queries. Refer to: MongoDB Indexing Strategies Analyze Query Plan \u2190 Alert Resolutions Back Up a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "Query Targeting alerts indicate inefficient query or queries.",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations-create-config.html",
            "title": "Create an Alert Configuration",
            "headings": [
                "Create an Alert Configuration\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations > Create an Alert Configuration Create an Alert Configuration\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 POST /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description eventTypeName string Required. The type of event that will trigger an alert. Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE If this is set to OUTSIDE_METRIC_THRESHOLD, the metricThreshold field must also be set. enabled boolean If omitted, the configuration is disabled. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Required. Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin number The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin number The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Determines if email notifications should be sent. For notifications of type GROUP and USER. notifications.smsEnabled boolean Determines if SMS notifications should be sent. For notifications of type GROUP and USER. notifications.username string The name of Atlas user to which to send notifications. Specify a user in the group that owns the alert configuration. For notifications of type USER. notifications.emailAddress string The email address to which to send notification. For notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. For notifications of type SMS. notifications.notificationToken string A HipChat API token. For notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. For notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. For SLACK notifications. notifications.apiToken string The Slack API token or Bot token. For SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. For FLOWDOCK notifications. notifications.flowName string The flow name, in lower-case letters. For FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d For FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. metricThreshold object The threshold that will cause an alert to be triggered. Required if eventTypeName is OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold number The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string This must be set to AVERAGE. Atlas computes the current metric value as an average. Response Elements\u00b6 The response includes the alert configuration details: Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description id string Unique identifier. groupId string ID of the group that owns this alert configuration. eventTypeName string The type of event that will trigger an alert. Possible values are: Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE created date When this alert configuration was created. updated date When this alert configuration was last updated. enabled boolean If set to true, the alert configuration is enabled. If enabled is not specified in a POST command, it defaults to false. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin integer The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin integer The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Should email notifications be sent? Only present for notifications of type GROUP and USER. notifications.smsEnabled boolean Should SMS notifications be sent? Only present for notifications of type GROUP and USER. notifications.username string The name of the Atlas user to which to send notifications. Only a user in the group that owns the alert configuration is allowed here. Only present for notifications of type USER. notifications.emailAddress string The email address to which to send notification. Only present for notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. Only present for notifications of type SMS. notifications.notificationToken string A HipChat API token. Only present for notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. Only present for notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. Only present for SLACK notifications. notifications.apiToken string The Slack API token or Bot token. Only present for SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Only present for FLOWDOCK notifications. notifications.flowName string The Flowdock flow name, in lower-case letters. Only present for FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d Only present for FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. Only present for PAGER_DUTY notifications. If the key later becomes invalid, Atlas sends an email to the group owner and eventually removes the key. metricThreshold object The threshold that will cause an alert to be triggered. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold integer The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string AVERAGE. Atlas computes the current metric value as an average. Example Request\u00b6 curl -X POST -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alertConfigs\" \\ -H \"Content-Type: application/json\" --data ' { \"eventTypeName\" : \"NO_PRIMARY\", \"enabled\" : true, \"notifications\" : [ { \"typeName\" : \"GROUP\", \"intervalMin\" : 5, \"delayMin\" : 0, \"smsEnabled\" : false, \"emailEnabled\" : true } ] }' Example Response\u00b6 { \"id\" : \"57b76ddc96e8215c017ceafb\", \"created\" : \"2016-08-19T20:36:44Z\", \"enabled\" : true, \"eventTypeName\" : \"NO_PRIMARY\", \"groupId\" : \"535683b3794d371327b\", \"matchers\" : [ ], \"notifications\" : [ { \"delayMin\" : 0, \"emailEnabled\" : true, \"intervalMin\" : 5, \"smsEnabled\" : false, \"typeName\" : \"GROUP\" } ], \"updated\" : \"2016-08-19T20:36:44Z\", \"links\" : [ ... ] } \u2190 Get All Alert Configurations for a Group Get an Alert Configuration \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations-delete-config.html",
            "title": "Delete an Alert Configuration",
            "headings": [
                "Delete an Alert Configuration\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations > Delete an Alert Configuration Delete an Alert Configuration\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 DELETE /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. ALERT-CONFIG-ID Required Alert configuiration identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 This endpoint returns an empty object. Example Request\u00b6 curl -X DELETE -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alertConfigs/57b76ddc96e8215c017ceafb\" Example Response\u00b6 {} \u2190 Enable/Disable Alert Configuration Get Open Alerts for Alert Configuration \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations-enable-disable-config.html",
            "title": "Enable/Disable Alert Configuration",
            "headings": [
                "Enable/Disable Alert Configuration\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations > Enable/Disable Alert Configuration Enable/Disable Alert Configuration\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 PATCH /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Note This endpoint updates the only the enabled/disabled state for the alert configuration. To update more than just this configuration, see Update an Alert Configuration. Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. ALERT-CONFIG-ID Required Alert configuiration identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 Parameter Required/Optional Description enabled Required. Boolean. Specify true to enable; false to disable. Response Elements\u00b6 The response includes the updated alert configuration details: Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description id string Unique identifier. groupId string ID of the group that owns this alert configuration. eventTypeName string The type of event that will trigger an alert. Possible values are: Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE created date When this alert configuration was created. updated date When this alert configuration was last updated. enabled boolean If set to true, the alert configuration is enabled. If enabled is not specified in a POST command, it defaults to false. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin integer The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin integer The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Should email notifications be sent? Only present for notifications of type GROUP and USER. notifications.smsEnabled boolean Should SMS notifications be sent? Only present for notifications of type GROUP and USER. notifications.username string The name of the Atlas user to which to send notifications. Only a user in the group that owns the alert configuration is allowed here. Only present for notifications of type USER. notifications.emailAddress string The email address to which to send notification. Only present for notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. Only present for notifications of type SMS. notifications.notificationToken string A HipChat API token. Only present for notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. Only present for notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. Only present for SLACK notifications. notifications.apiToken string The Slack API token or Bot token. Only present for SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Only present for FLOWDOCK notifications. notifications.flowName string The Flowdock flow name, in lower-case letters. Only present for FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d Only present for FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. Only present for PAGER_DUTY notifications. If the key later becomes invalid, Atlas sends an email to the group owner and eventually removes the key. metricThreshold object The threshold that will cause an alert to be triggered. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold integer The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string AVERAGE. Atlas computes the current metric value as an average. Example Request\u00b6 curl -X PATCH -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alertConfigs/57b76ddc96e8215c017ceafb\" \\ -H \"Content-Type: application/json\" --data ' { \"enabled\" : false }' Example Response\u00b6 { \"created\" : \"2016-08-19T20:45:29Z\", \"enabled\" : false, \"eventTypeName\" : \"NO_PRIMARY\", \"groupId\" : \"535683b3794d371327b\", \"id\" : \"57b76ddc96e8215c017ceafb\", \"matchers\" : [ ], \"notifications\" : [ { \"delayMin\" : 5, \"emailEnabled\" : false, \"intervalMin\" : 5, \"smsEnabled\" : true, \"typeName\" : \"GROUP\" } ], \"updated\" : \"2016-08-19T20:51:49Z\", \"links\" : [ ... ] } \u2190 Update an Alert Configuration Delete an Alert Configuration \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations-get-all-configs.html",
            "title": "Get All Alert Configurations for a Group",
            "headings": [
                "Get All Alert Configurations for a Group\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations > Get All Alert Configurations for a Group Get All Alert Configurations for a Group\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The response includes the totalCount of the alert configurations and a results array which lists all alert configurations for the group. Each alert configuration details include: Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description id string Unique identifier. groupId string ID of the group that owns this alert configuration. eventTypeName string The type of event that will trigger an alert. Possible values are: Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE created date When this alert configuration was created. updated date When this alert configuration was last updated. enabled boolean If set to true, the alert configuration is enabled. If enabled is not specified in a POST command, it defaults to false. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin integer The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin integer The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Should email notifications be sent? Only present for notifications of type GROUP and USER. notifications.smsEnabled boolean Should SMS notifications be sent? Only present for notifications of type GROUP and USER. notifications.username string The name of the Atlas user to which to send notifications. Only a user in the group that owns the alert configuration is allowed here. Only present for notifications of type USER. notifications.emailAddress string The email address to which to send notification. Only present for notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. Only present for notifications of type SMS. notifications.notificationToken string A HipChat API token. Only present for notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. Only present for notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. Only present for SLACK notifications. notifications.apiToken string The Slack API token or Bot token. Only present for SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Only present for FLOWDOCK notifications. notifications.flowName string The Flowdock flow name, in lower-case letters. Only present for FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d Only present for FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. Only present for PAGER_DUTY notifications. If the key later becomes invalid, Atlas sends an email to the group owner and eventually removes the key. metricThreshold object The threshold that will cause an alert to be triggered. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold integer The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string AVERAGE. Atlas computes the current metric value as an average. Example Request\u00b6 curl -X GET -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alertConfigs\" Example Response\u00b6 { \"results\": [ { \"id\" : \"533dc40ae4b00835ff81eaee\", \"groupId\" : \"535683b3794d371327b\", \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\", \"created\" : \"2016-08-23T20:26:50Z\", \"updated\" : \"2016-08-23T20:26:50Z\", \"enabled\" : true, \"matchers\" : [ { \"field\" : \"HOSTNAME_AND_PORT\", \"operator\" : \"EQUALS\", \"value\" : \"mongo.example.com:27017\" } ], \"notifications\" : [ { \"typeName\" : \"SMS\", \"intervalMin\" : 5, \"delayMin\" : 0, \"mobileNumber\" : \"2343454567\" } ], \"metricThreshold\" : { \"metricName\" : \"ASSERT_REGULAR\", \"operator\" : \"LESS_THAN\", \"threshold\" : 99.0, \"units\" : \"RAW\", \"mode\" : \"AVERAGE\" }, \"links\" : [ ... ] }, ... ], \"totalCount\": 3, \"links\" : [ ... ] } \u2190 Alert Configurations Create an Alert Configuration \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations-get-config.html",
            "title": "Get an Alert Configuration",
            "headings": [
                "Get an Alert Configuration\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations > Get an Alert Configuration Get an Alert Configuration\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. ALERT-CONFIG-ID Required Alert configuiration identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The response returns the alert configuration details: Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description id string Unique identifier. groupId string ID of the group that owns this alert configuration. eventTypeName string The type of event that will trigger an alert. Possible values are: Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE created date When this alert configuration was created. updated date When this alert configuration was last updated. enabled boolean If set to true, the alert configuration is enabled. If enabled is not specified in a POST command, it defaults to false. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin integer The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin integer The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Should email notifications be sent? Only present for notifications of type GROUP and USER. notifications.smsEnabled boolean Should SMS notifications be sent? Only present for notifications of type GROUP and USER. notifications.username string The name of the Atlas user to which to send notifications. Only a user in the group that owns the alert configuration is allowed here. Only present for notifications of type USER. notifications.emailAddress string The email address to which to send notification. Only present for notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. Only present for notifications of type SMS. notifications.notificationToken string A HipChat API token. Only present for notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. Only present for notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. Only present for SLACK notifications. notifications.apiToken string The Slack API token or Bot token. Only present for SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Only present for FLOWDOCK notifications. notifications.flowName string The Flowdock flow name, in lower-case letters. Only present for FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d Only present for FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. Only present for PAGER_DUTY notifications. If the key later becomes invalid, Atlas sends an email to the group owner and eventually removes the key. metricThreshold object The threshold that will cause an alert to be triggered. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold integer The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string AVERAGE. Atlas computes the current metric value as an average. Example Request\u00b6 curl -X GET -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alertConfigs/533dc40ae4b00835ff81eaee\" Example Response\u00b6 { \"id\" : \"533dc40ae4b00835ff81eaee\", \"groupId\" : \"535683b3794d371327b\", \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\", \"created\" : \"2016-08-23T20:26:50Z\", \"updated\" : \"2016-08-23T20:26:50Z\", \"enabled\" : true, \"matchers\" : [ { \"field\" : \"HOSTNAME_AND_PORT\", \"operator\" : \"EQUALS\", \"value\" : \"mongo.example.com:27017\" } ], \"notifications\" : [ { \"typeName\" : \"SMS\", \"intervalMin\" : 5, \"delayMin\" : 0, \"mobileNumber\" : \"2343454567\" } ], \"metricThreshold\" : { \"metricName\" : \"ASSERT_REGULAR\", \"operator\" : \"LESS_THAN\", \"threshold\" : 99.0, \"units\" : \"RAW\", \"mode\" : \"AVERAGE\" }, \"links\" : [ ... ] } \u2190 Create an Alert Configuration Update an Alert Configuration \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations-get-open-alerts.html",
            "title": "Get Open Alerts for Alert Configuration",
            "headings": [
                "Get Open Alerts for Alert Configuration\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations > Get Open Alerts for Alert Configuration Get Open Alerts for Alert Configuration\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID}/alerts Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. ALERT-CONFIG-ID Required Alert configuiration identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The response includes the totalCount of the open alerts and a results array which lists all the alerts for the group. Alert details include: Note Alert details vary. An alert may only include a subset of these elements. Name Type Description id string Unique identifier for the alert. groupId string ID of the group that this alert was opened for. alertConfigId string ID of the alert configuration that triggered this alert. eventTypeName string The name of the event that triggered the alert. Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE typeName string This field is deprecated and will be ignored. status string The current state of the alert. Possible values are: TRACKING The alert condition exists but has not persisted beyond the defined notification delay. For details, see Request Query Parameters. OPEN CLOSED CANCELLED acknowledgedUntil date The date through which the alert has been acknowledged. Will not be present if the alert has never been acknowledged. acknowledgementComment string The comment left by the user who acknowledged the alert. Will not be present if the alert has never been acknowledged. acknowledgingUsername string The username of the user who acknowledged the alert. Will not be present if the alert has never been acknowledged. created date When the alert was opened. updated date When the alert was last updated. resolved date When the alert was closed. Only present if the status is CLOSED. lastNotified date When the last notification was sent for this alert. Only present if notifications have been sent. hostnameAndPort string The hostname and port of each host to which the alert applies. Only present for alerts of type HOST, HOST_METRIC, and REPLICA_SET. hostId string ID of the host to which the metric pertains. Only present for alerts of type HOST, HOST_METRIC, and REPLICA_SET. replicaSetName string Name of the replica set. Only present for alerts of type HOST, HOST_METRIC, BACKUP, and REPLICA_SET. metricName string The name of the measurement whose value went outside the threshold. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD. currentValue object The current value of the metric that triggered the alert. Only present for alerts of type HOST_METRIC. currentValue.number number The value of the metric. currentValue.units string The units for the value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS clusterId string The ID of the cluster to which this alert applies. Only present for alerts of type BACKUP, REPLICA_SET, and CLUSTER. clusterName string The name the cluster to which this alert applies. Only present for alerts of type BACKUP, REPLICA_SET, and CLUSTER. sourceTypeName string For alerts of the type BACKUP, the type of server being backed up. Possible values are: REPLICA_SET SHARDED_CLUSTER CONFIG_SERVER Example Request\u00b6 curl -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alertConfigs/533dc40ae4b00835ff81eaee/alerts\" Example Response\u00b6 { \"totalCount\" : 2, \"results\" : [ { \"id\" : \"53569159300495c7702ee3a3\", \"groupId\" : \"535683b3794d371327b\", \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\", \"status\" : \"OPEN\", \"acknowledgedUntil\" : \"2016-09-01T14:00:00Z\", \"created\" : \"2016-08-22T15:57:13.562Z\", \"updated\" : \"2016-08-22T20:14:11.388Z\", \"lastNotified\" : \"2016-08-22T15:57:24.126Z\", \"metricName\" : \"ASSERT_REGULAR\", \"currentValue\" : { \"number\" : 0.0, \"units\" : \"RAW\" }, \"links\" : [ ... ] }, { \"id\" : \"5356ca0e300495c770333340\", \"groupId\" : \"535683b3794d371327b\", \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\", \"status\" : \"OPEN\", \"created\" : \"2016-08-22T19:59:10.657Z\", \"updated\" : \"2016-08-22T20:14:11.388Z\", \"lastNotified\" : \"2016-08-22T20:14:19.313Z\", \"metricName\" : \"ASSERT_REGULAR\", \"currentValue\" : { \"number\" : 0.0, \"units\" : \"RAW\" }, \"links\" : [ ... ] } ], \"links\" : [ ... ] } \u2190 Delete an Alert Configuration VPC \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations-update-config.html",
            "title": "Update an Alert Configuration",
            "headings": [
                "Update an Alert Configuration\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations > Update an Alert Configuration Update an Alert Configuration\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 PUT /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Note To update just the enabled/disabled state for the alert configuration, see Enable/Disable Alert Configuration instead. Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. ALERT-CONFIG-ID Required Alert configuiration identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description eventTypeName string Required. The type of event that will trigger an alert. Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE If this is set to OUTSIDE_METRIC_THRESHOLD, the metricThreshold field must also be set. enabled boolean If omitted, the configuration is disabled. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Required. Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin number The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin number The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Determines if email notifications should be sent. For notifications of type GROUP and USER. notifications.smsEnabled boolean Determines if SMS notifications should be sent. For notifications of type GROUP and USER. notifications.username string The name of Atlas user to which to send notifications. Specify a user in the group that owns the alert configuration. For notifications of type USER. notifications.emailAddress string The email address to which to send notification. For notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. For notifications of type SMS. notifications.notificationToken string A HipChat API token. For notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. For notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. For SLACK notifications. notifications.apiToken string The Slack API token or Bot token. For SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. For FLOWDOCK notifications. notifications.flowName string The flow name, in lower-case letters. For FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d For FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. metricThreshold object The threshold that will cause an alert to be triggered. Required if eventTypeName is OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold number The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string This must be set to AVERAGE. Atlas computes the current metric value as an average. Response Elements\u00b6 The response includes the alert configuration details: Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description id string Unique identifier. groupId string ID of the group that owns this alert configuration. eventTypeName string The type of event that will trigger an alert. Possible values are: Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE created date When this alert configuration was created. updated date When this alert configuration was last updated. enabled boolean If set to true, the alert configuration is enabled. If enabled is not specified in a POST command, it defaults to false. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin integer The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin integer The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Should email notifications be sent? Only present for notifications of type GROUP and USER. notifications.smsEnabled boolean Should SMS notifications be sent? Only present for notifications of type GROUP and USER. notifications.username string The name of the Atlas user to which to send notifications. Only a user in the group that owns the alert configuration is allowed here. Only present for notifications of type USER. notifications.emailAddress string The email address to which to send notification. Only present for notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. Only present for notifications of type SMS. notifications.notificationToken string A HipChat API token. Only present for notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. Only present for notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. Only present for SLACK notifications. notifications.apiToken string The Slack API token or Bot token. Only present for SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Only present for FLOWDOCK notifications. notifications.flowName string The Flowdock flow name, in lower-case letters. Only present for FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d Only present for FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. Only present for PAGER_DUTY notifications. If the key later becomes invalid, Atlas sends an email to the group owner and eventually removes the key. metricThreshold object The threshold that will cause an alert to be triggered. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold integer The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string AVERAGE. Atlas computes the current metric value as an average. Example Request\u00b6 curl -X PUT -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alertConfigs/57b76ddc96e8215c017ceafb\" \\ -H \"Content-Type: application/json\" --data ' { \"eventTypeName\" : \"NO_PRIMARY\", \"enabled\" : true, \"notifications\" : [ { \"typeName\" : \"GROUP\", \"intervalMin\" : 5, \"delayMin\" : 5, \"smsEnabled\" : true, \"emailEnabled\" : false } ] }' Example Response\u00b6 { \"created\" : \"2016-08-19T20:45:29Z\", \"enabled\" : true, \"eventTypeName\" : \"NO_PRIMARY\", \"groupId\" : \"535683b3794d371327b\", \"id\" : \"57b76ddc96e8215c017ceafb\", \"matchers\" : [ ], \"notifications\" : [ { \"typeName\" : \"GROUP\", \"intervalMin\" : 5, \"delayMin\" : 5, \"smsEnabled\" : true, \"emailEnabled\" : false } ], \"updated\" : \"2016-08-19T20:45:29Z\", \"links\" : [ ... ] } \u2190 Get an Alert Configuration Enable/Disable Alert Configuration \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alert-configurations.html",
            "title": "Alert Configurations",
            "headings": [
                "Alert Configurations\u00b6",
                "Endpoints\u00b6"
            ],
            "text": "API > API Resources > Alert Configurations Alert Configurations\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Endpoints\u00b6 The following lists the endpoints available for alert configuration. An alert configuration defines the conditions that trigger an alert and the methods of notification. Method Endpoint Description GET /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs Get all alert configurations for a group. POST /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs Create an alert configuration GET /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Get an alert configuration. PUT /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Update an alert configuration. PATCH /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Enable/disable an alert configuration. DELETE /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID} Delete an alert configuration. GET /api/atlas/v1.0/groups/{GROUP-ID}/alertConfigs/{ALERT-CONFIG-ID}/alerts Get all open alerts for an alert configuration. Get All Alert Configurations for a Group Create an Alert Configuration Get an Alert Configuration Update an Alert Configuration Enable/Disable Alert Configuration Delete an Alert Configuration Get Open Alerts for Alert Configuration \u2190 Acknowledge an Alert Get All Alert Configurations for a Group \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alerts-acknowledge-alert.html",
            "title": "Acknowledge an Alert",
            "headings": [
                "Acknowledge an Alert\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alerts > Acknowledge an Alert Acknowledge an Alert\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. Syntax\u00b6 PATCH /api/atlas/v1.0/groups/{GROUP-ID}/alerts/{ALERT-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. ALERT-ID Required Alert identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 Field Required/Optional Description acknowledgedUntil Required. To acknowledge an alert \u201cforever\u201d, set the field value to 100 years in the future. To unacknowledge a previously acknowledged alert, set the field value to the past. The page to return. acknowledgementComment Optional. If you add a comment, Atlas displays the comment next to the message that the alert has been acknowledged. Response Elements\u00b6 The fields in the return document depend on the alert type: Name Type Description id string Unique identifier for the alert. groupId string ID of the group that this alert was opened for. alertConfigId string ID of the alert configuration that triggered this alert. eventTypeName string The name of the event that triggered the alert. The possible values depend on the alert type. Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE status string The current state of the alert. Possible values are: TRACKING The alert condition exists but has not persisted beyond the defined notification delay. For details, see Request Query Parameters. OPEN CLOSED CANCELLED created date When the alert was opened. updated date When the alert was last updated. lastNotified date When the last notification was sent for this alert. Only present if notifications have been sent. resolved date When the alert was closed. Only present if the status is CLOSED. acknowledgedUntil date The date through which the alert has been acknowledged. This is not present if the alert has never been acknowledged. acknowledgementComment string The comment left by the user who acknowledged the alert. This is not present if the alert has never been acknowledged. acknowledgingUsername string The username of the user who acknowledged the alert. This is not present if the alert has never been acknowledged. hostnameAndPort string The hostname and port of the host to which the alert applies. metricName string The name of the metric whose value went outside the threshold. Only present if eventTypeName is OUTSIDE_METRIC_THRESHOLD. Possible values are: ASSERT_MSG ASSERT_REGULAR ASSERT_USER ASSERT_WARNING BACKGROUND_FLUSH_AVG CACHE_BYTES_READ_INTO CACHE_BYTES_WRITTEN_FROM CACHE_USAGE_DIRTY CACHE_USAGE_USED COMPUTED_MEMORY CONNECTIONS CURSORS_TOTAL_CLIENT_CURSORS_SIZE CURSORS_TOTAL_OPEN CURSORS_TOTAL_TIMED_OUT DB_DATA_SIZE_TOTAL DB_STORAGE_TOTAL DISK_PARTITION_SPACE_USED_DATA DISK_PARTITION_SPACE_USED_INDEX DISK_PARTITION_SPACE_USED_JOURNAL DISK_PARTITION_UTILIZATION_DATA DISK_PARTITION_UTILIZATION_INDEX DISK_PARTITION_UTILIZATION_JOURNAL EXTRA_INFO_PAGE_FAULTS GLOBAL_ACCESSES_NOT_IN_MEMORY GLOBAL_LOCK_CURRENT_QUEUE_READERS GLOBAL_LOCK_CURRENT_QUEUE_TOTAL GLOBAL_LOCK_CURRENT_QUEUE_WRITERS GLOBAL_LOCK_PERCENTAGE GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN INDEX_COUNTERS_BTREE_ACCESSES INDEX_COUNTERS_BTREE_HITS INDEX_COUNTERS_BTREE_MISS_RATIO INDEX_COUNTERS_BTREE_MISSES JOURNALING_COMMITS_IN_WRITE_LOCK JOURNALING_MB JOURNALING_WRITE_DATA_FILES_MB LOGICAL_SIZE MEMORY_RESIDENT MEMORY_VIRTUAL MEMORY_MAPPED NETWORK_BYTES_IN NETWORK_BYTES_OUT NETWORK_NUM_REQUESTS NORMALIZED_SYSTEM_CPU_USER OPCOUNTER_CMD OPCOUNTER_DELETE OPCOUNTER_INSERT OPCOUNTER_QUERY OPCOUNTER_REPL_UPDATE OPCOUNTER_REPL_DELETE OPCOUNTER_REPL_INSERT OPCOUNTER_UPDATE OPLOG_MASTER_LAG_TIME_DIFF OPLOG_MASTER_TIME OPLOG_RATE_GB_PER_HOUR OPLOG_SLAVE_LAG_MASTER_TIME TICKETS_AVAILABLE_READS TICKETS_AVAILABLE_WRITES currentValue object The current value of the metric that triggered the alert. Only present if eventTypeName is OUTSIDE_METRIC_THRESHOLD. currentValue.number float The value. currentValue.units string The units for the value. Possible units are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS replicaSetName string Name of the replica set, if applicable. clusterName string The name the cluster to which this alert applies. Example Request\u00b6 curl -u \"username:apiKey\" -H \"Content-Type: application/json\" --digest -X PATCH \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alerts/524dc45ee4b835ff81ec2a\" --data ' { \"acknowledgedUntil\" : \"2016-10-01T00:00:00-0400\", \"acknowledgementComment\" : \"This is normal. Please ignore.\" }' Example Response\u00b6 { \"id\" : \"524dc45ee4b835ff81ec2a\", \"groupId\" : \"535683b3794d371327b\", \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\", \"status\" : \"OPEN\", \"acknowledgedUntil\" : \"2016-10-01T04:00:00Z\", \"acknowledgementComment\" : \"This is normal. Please ignore.\", \"acknowledgingUsername\" : \"someuser@example.com\", \"created\" : \"2016-08-23T20:28:14Z\", \"updated\" : \"2016-08-23T20:33:14Z\", \"lastNotified\" : \"2016-08-23T20:33:23Z\", \"metricName\" : \"ASSERTS_REGULAR\", \"currentValue\" : { \"number\" : 0.0, \"units\" : \"RAW\" }, \"links\" : [ ... ] } \u2190 Get an Alert Alert Configurations \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alerts-get-alert.html",
            "title": "Get an Alert",
            "headings": [
                "Get an Alert\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alerts > Get an Alert Get an Alert\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/alerts/{ALERT-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. ALERT-ID Required Alert identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The fields in the return document depend on the alert type: Name Type Description id string Unique identifier for the alert. groupId string ID of the group that this alert was opened for. alertConfigId string ID of the alert configuration that triggered this alert. eventTypeName string The name of the event that triggered the alert. The possible values depend on the alert type. Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE status string The current state of the alert. Possible values are: TRACKING The alert condition exists but has not persisted beyond the defined notification delay. For details, see Request Query Parameters. OPEN CLOSED CANCELLED created date When the alert was opened. updated date When the alert was last updated. lastNotified date When the last notification was sent for this alert. Only present if notifications have been sent. resolved date When the alert was closed. Only present if the status is CLOSED. acknowledgedUntil date The date through which the alert has been acknowledged. This is not present if the alert has never been acknowledged. acknowledgementComment string The comment left by the user who acknowledged the alert. This is not present if the alert has never been acknowledged. acknowledgingUsername string The username of the user who acknowledged the alert. This is not present if the alert has never been acknowledged. hostnameAndPort string The hostname and port of the host to which the alert applies. metricName string The name of the metric whose value went outside the threshold. Only present if eventTypeName is OUTSIDE_METRIC_THRESHOLD. Possible values are: ASSERT_MSG ASSERT_REGULAR ASSERT_USER ASSERT_WARNING BACKGROUND_FLUSH_AVG CACHE_BYTES_READ_INTO CACHE_BYTES_WRITTEN_FROM CACHE_USAGE_DIRTY CACHE_USAGE_USED COMPUTED_MEMORY CONNECTIONS CURSORS_TOTAL_CLIENT_CURSORS_SIZE CURSORS_TOTAL_OPEN CURSORS_TOTAL_TIMED_OUT DB_DATA_SIZE_TOTAL DB_STORAGE_TOTAL DISK_PARTITION_SPACE_USED_DATA DISK_PARTITION_SPACE_USED_INDEX DISK_PARTITION_SPACE_USED_JOURNAL DISK_PARTITION_UTILIZATION_DATA DISK_PARTITION_UTILIZATION_INDEX DISK_PARTITION_UTILIZATION_JOURNAL EXTRA_INFO_PAGE_FAULTS GLOBAL_ACCESSES_NOT_IN_MEMORY GLOBAL_LOCK_CURRENT_QUEUE_READERS GLOBAL_LOCK_CURRENT_QUEUE_TOTAL GLOBAL_LOCK_CURRENT_QUEUE_WRITERS GLOBAL_LOCK_PERCENTAGE GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN INDEX_COUNTERS_BTREE_ACCESSES INDEX_COUNTERS_BTREE_HITS INDEX_COUNTERS_BTREE_MISS_RATIO INDEX_COUNTERS_BTREE_MISSES JOURNALING_COMMITS_IN_WRITE_LOCK JOURNALING_MB JOURNALING_WRITE_DATA_FILES_MB LOGICAL_SIZE MEMORY_RESIDENT MEMORY_VIRTUAL MEMORY_MAPPED NETWORK_BYTES_IN NETWORK_BYTES_OUT NETWORK_NUM_REQUESTS NORMALIZED_SYSTEM_CPU_USER OPCOUNTER_CMD OPCOUNTER_DELETE OPCOUNTER_INSERT OPCOUNTER_QUERY OPCOUNTER_REPL_UPDATE OPCOUNTER_REPL_DELETE OPCOUNTER_REPL_INSERT OPCOUNTER_UPDATE OPLOG_MASTER_LAG_TIME_DIFF OPLOG_MASTER_TIME OPLOG_RATE_GB_PER_HOUR OPLOG_SLAVE_LAG_MASTER_TIME TICKETS_AVAILABLE_READS TICKETS_AVAILABLE_WRITES currentValue object The current value of the metric that triggered the alert. Only present if eventTypeName is OUTSIDE_METRIC_THRESHOLD. currentValue.number float The value. currentValue.units string The units for the value. Possible units are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS replicaSetName string Name of the replica set, if applicable. clusterName string The name the cluster to which this alert applies. Example Request\u00b6 curl -X GET -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alerts/533cb4b8e4b0f1820cdabc7f\" Example Response\u00b6 { \"id\" : \"578d2e30e4b0b6c04262c80a\", \"groupId\" : \"535683b3794d371327b, \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\", \"status\" : \"CLOSED\", \"created\" : \"2016-08-18T19:29:52Z\", \"updated\" : \"2016-08-19T23:07:34Z\", \"resolved\" : \"2016-08-19T23:07:34Z\", \"links\" : [ ... ] } \u2190 Get All Alerts Acknowledge an Alert \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alerts-get-all-alerts.html",
            "title": "Get All Alerts",
            "headings": [
                "Get All Alerts\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Alerts > Get All Alerts Get All Alerts\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Example Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/alerts Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. Request Query Parameters\u00b6 Field Required/Optional Description status Optional. Specify a status to return only those alerts with the specified status. Omit to return all alerts Possible values are: TRACKING To return alerts with TRACKING status. If an alert\u2019s configuration specifies a notification delay, Atlas assigns the alert the TRACKING status until the delay period ends. After the delay, Atlas sets the status to OPEN, if the condition persists. If an alert\u2019s configuration has multiple notifications, each with its own notification delay, Atlas uses the smallest delay value to determine when to move the alert from TRACKING to OPEN. OPEN To return all open alerts. CLOSED To return all closed alerts. pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The response includes the totalCount of the alerts and a results array with the list of alert details. Each alert information includes: Note Alert configurations vary. An alert configuration may only include a subset of these elements. Name Type Description id string Unique identifier. groupId string ID of the group that owns this alert configuration. eventTypeName string The type of event that will trigger an alert. Possible values are: Alert type Possible values Host OUTSIDE_METRIC_THRESHOLD Replica set NO_PRIMARY Sharded cluster CLUSTER_MONGOS_IS_MISSING User JOINED_GROUP REMOVED_FROM_GROUP USER_ROLES_CHANGED_AUDIT Group USERS_AWAITING_APPROVAL USERS_WITHOUT_MULTI_FACTOR_AUTH Billing CREDIT_CARD_ABOUT_TO_EXPIRE created date When this alert configuration was created. updated date When this alert configuration was last updated. enabled boolean If set to true, the alert configuration is enabled. If enabled is not specified in a POST command, it defaults to false. matchers object array Rules to apply when matching an object against this alert configuration. Only entities that match all these rules will be checked for an alert condition. You can filter using the matchers array only when the eventTypeName specifies an event for a host, replica set, or sharded cluster. matchers.fieldName string The name of the field in the target object to match on. Host alerts support these fields: TYPE_NAME HOSTNAME PORT HOSTNAME_AND_PORT REPLICA_SET_NAME Replica set alerts support these fields: REPLICA_SET_NAME SHARD_NAME CLUSTER_NAME Sharded cluster alerts support these fields: CLUSTER_NAME SHARD_NAME All other types of alerts do not support matchers. matchers.operator string The operator to test the field\u2019s value. Possible values are: EQUALS NOT_EQUALS CONTAINS NOT_CONTAINS STARTS_WITH ENDS_WITH REGEX matchers.value string The value to test with the specified operator. If matchers.fieldName is set to TYPE_NAME, you can match on the following values: PRIMARY SECONDARY STANDALONE CONFIG MONGOS notifications object array Notifications to send when an alert condition is detected. notifications.typeName string The type of alert notification. Possible values are: GROUP USER EMAIL SMS HIPCHAT SLACK FLOWDOCK PAGER_DUTY WEBHOOK notifications.intervalMin integer The number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. notifications.delayMin integer The number of minutes to wait after an alert condition is detected before sending out the first notification. notifications.emailEnabled boolean Should email notifications be sent? Only present for notifications of type GROUP and USER. notifications.smsEnabled boolean Should SMS notifications be sent? Only present for notifications of type GROUP and USER. notifications.username string The name of the Atlas user to which to send notifications. Only a user in the group that owns the alert configuration is allowed here. Only present for notifications of type USER. notifications.emailAddress string The email address to which to send notification. Only present for notifications of type EMAIL. notifications.mobileNumber string Mobile number to send SMS messages to. Only present for notifications of type SMS. notifications.notificationToken string A HipChat API token. Only present for notifications of type HIP_CHAT. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.roomName string HipChat room name. Only present for notifications of type HIP_CHAT. notifications.channelName string The Slack channel name. Only present for SLACK notifications. notifications.apiToken string The Slack API token or Bot token. Only present for SLACK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.orgName string The Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Only present for FLOWDOCK notifications. notifications.flowName string The Flowdock flow name, in lower-case letters. Only present for FLOWDOCK notifications. The flow name appears after the organization name in the URL string: www.flowdock.com/app/<organization-name>/<flow-name>. notifications.flowdockApiToken string The Flowdock \u201cpersonal API token.\u201d Only present for FLOWDOCK notifications. If the token later becomes invalid, Atlas sends an email to the group owner and eventually removes the token. notifications.serviceKey string PagerDuty service key. Only present for PAGER_DUTY notifications. If the key later becomes invalid, Atlas sends an email to the group owner and eventually removes the key. metricThreshold object The threshold that will cause an alert to be triggered. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD. metricThreshold.metricName string The name of the metric to check. Supports the same values as the metricName field of the alerts resource. metricThreshold.operator string The operator to apply when checking the current metric value against the threshold value. Possible values are: GREATER_THAN LESS_THAN metricThreshold.threshold integer The threshold value outside of which an alert will be triggered. metricThreshold.units string The units for the threshold value. Depends on the type of metric. For example, a metric that measures memory consumption would have a byte measurement, while a metric that measures time would have a time unit. Possible values are: RAW BITS BYTES KILOBITS KILOBYTES MEGABITS MEGABYTES GIGABITS GIGABYTES TERABYTES PETABYTES MILLISECONDS SECONDS MINUTES HOURS DAYS metricThreshold.mode string AVERAGE. Atlas computes the current metric value as an average. Example Request\u00b6 The following returns all OPEN alerts: curl -X GET \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/alerts?status=OPEN\" Example Response\u00b6 { \"totalCount\": 1, \"results\": [ { \"id\" : \"533dc45ee4b00835ff81ec2a\", \"groupId\" : \"535683b3794d371327b\", \"alertConfigId\" : \"55e756a6e4b0f0c695a2\", \"hostId\" : \"51714c7fa22cbe4573d3629ff53c\", \"hostnameAndPort\" : \"example.test.4182.mongodbdns.com:27017\", \"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\", \"status\" : \"OPEN\", \"created\" : \"2016-08-23T20:28:14Z\", \"updated\" : \"2016-08-23T20:28:14Z\", \"lastNotified\" : \"2016-08-23T20:28:23Z\", \"metricName\" : \"ASSERT_REGULAR\", \"currentValue\" : { \"number\" : 0.0, \"units\" : \"RAW\" }, \"links\" : [ ... ] } ], \"links\" : [ ... ] } \u2190 Alerts Get an Alert \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/alerts.html",
            "title": "Alerts",
            "headings": [
                "Alerts\u00b6",
                "Endpoints\u00b6"
            ],
            "text": "API > API Resources > Alerts Alerts\u00b6 On this page Endpoints - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The alerts resource allows you to retrieve and acknowledge alerts. Endpoints\u00b6 The following lists the endpoints available for alerts. Method Endpoint Description GET /api/atlas/v1.0/groups/{GROUP-ID}/alerts Get all alerts for a group. GET /api/atlas/v1.0/groups/{GROUP-ID}/alerts/{ALERT-ID} Get the specified alert for a group. PATCH /api/atlas/v1.0/groups/{GROUP-ID}/alerts/{ALERT-ID} Acknowledge or unacknowledge an alert. Get All Alerts Get an Alert Acknowledge an Alert \u2190 Delete a Cluster Get All Alerts \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/clusters-create-one.html",
            "title": "Create a Cluster",
            "headings": [
                "Create a Cluster\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Clusters > Create a Cluster Create a Cluster\u00b6 On this page Syntax Request Path Parameters Request Body Parameters HTTP Response Elements Example Request Response Note This feature is not available for Free Tier clusters. For more information, see Atlas M0 (Free Tier) Limitations. The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 POST /api/atlas/v1.0/groups/GROUP-ID/clusters Request Path Parameters\u00b6 Path Element Required/Optional Description GROUP-ID Required. The unique identifier for the group in which to create the cluster. Request Body Parameters\u00b6 Name Type Description name string The name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. mongoDBMajorVersion string The version of the cluster to deploy. Atlas supports the following MongoDB versions: 3.2 3.4 Atlas always deploys the cluster with the latest stable release of the specified version. numShards integer Optional Selects whether the cluster is a replica set or a sharded cluster. If this is set to 1, the cluster is a replica set. For more information on MongoDB replica sets, see Replication in the MongoDB manual. If this is set to 2 or higher, the cluster is a sharded cluster with the number of shards specified. For more information on sharded clusters, see Sharding in the MongoDB manual. For details on how this setting affects costs, see Number of Servers. The possible values are 1 through 12. The default value is 1. replicationFactor number Optional The number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. If your cluster is a sharded cluster, each shard is a replica set with the specified replication factor. For information on how the replication factor affects costs, see Number of Servers. For more information on MongoDB replica sets, see Replication in the MongoDB manual. The possible values are 3, 5, or 7. The default value is 3. providerSettings object The configuration for the provisioned servers on which MongoDB runs. The available options are specific to the cloud service provider. providerSettings.providerName string The cloud service provider on which the servers are provisioned. The possible values are: AWS - Amazon AWS GCP - Google Cloud Platform AZURE - Microsoft Azure providerSettings.regionName string The physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. During deployment of a Atlas group\u2019s first M10+ paid cluster, Atlas creates a VPC for the group that is specific to the cloud service provider and region of the cluster. All additional clusters deployed in that group are associated to the group\u2019s VPC, locking the choice of cloud service provider and region. AWS GCP Azure US_EAST_1 US_EAST_2 US_WEST_1 US_WEST_2 CA_CENTRAL_1 EU_WEST_1 EU_WEST_2 EU_CENTRAL_1 AP_NORTHEAST_1 AP_NORTHEAST_2 AP_SOUTHEAST_1 AP_SOUTHEAST_2 AP_SOUTH_1 SA_EAST_1 Note EASTERN_US corresponds to the GCP us_east_1 region. CENTRAL_US EASTERN_US WESTERN_EUROPE EASTERN_ASIA_PACIFIC US_CENTRAL US_EAST US_EAST_2 US_NORTH_CENTRAL US_WEST US_SOUTH_CENTRAL EUROPE_NORTH EUROPE_WEST providerSettings.instanceSizeName string Atlas provides different instance sizes, each with a default RAM size, storage capacity, and maximum storage speed. The instance size you select is used for all the data-bearing servers in your cluster. For definitions of data-bearing servers, see Number of Servers. You can customize the instance size using the diskSizeGB and providerSettings.diskIOPS fields. Doing so affects costs, as described in Billing. In the API, enter the instance size exactly as it is named in the interface. For example, for M40 enter M40. To view available instance sizes: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; view the available instance sizes; close the window without saving changes. providerSettings.diskIOPS integer Optional The maximum input/output operations per second (IOPS) the system can perform. The available IOPS depend on the instance size: each instance size has a specific range of available IOPS values. To view available values: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; click an instance size to view the available values; close the window without saving changes. The default value for providerSettings.diskIOPS is the same as the instance size\u2019s Standard IOPS value, as viewable in the Atlas interface. providerSettings.encryptEBSVolume Boolean Optional AWS only. If enabled, the Amazon EBS encryption feature encrypts the server\u2019s root volume for both data at rest within the volume and for data moving between the volume and the instance. The default value is false. diskSizeGB double Optional The size in gigabytes of the server\u2019s root volume. You can add capacity by increasing this number, up to a maximum possible value of 16384 (i.e., 16 TB). Each instance size has its own default value. If you set a value below the instance default, Atlas replaces it with the default value. To view default values: open the Atlas web interface; click the button to add a new cluster; view the available default sizes; close the window without saving changes. Important Atlas calculates storage charges differently depending on whether you choose the default value or a custom value. For details, see Storage Capacity. backupEnabled Boolean If enabled, the Atlas Backup service takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. HTTP Response Elements\u00b6 Name Type Description name string The name of the cluster as it appears in Atlas. groupId string ID of the group the cluster belongs to. mongoDBVersion string The version of MongoDB the cluster runs, in <major version>.<minor version> format. mongoDBMajorVersion string The major version of MongoDB the cluster runs. Atlas supports the following MongoDB versions: 3.2 3.4 mongoURI string The connection string for connecting to the cluster through a MongoDB driver or the mongo shell. To download the mongo shell, click a cluster\u2019s Connect button and follow the download instructions. When you create a new cluster, the mongoURI will not show up while the cluster is being built. Atlas provides the connection string only after the cluster is running. mongoURIUpdated string Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster. numShards integer Selects whether the cluster is a sharded cluster or a replica set and specifies the number of shards for a sharded cluster. If this is set to 1, the cluster is a replica set. For more information on MongoDB replica sets, see Replication in the MongoDB manual. If this is set to 2 or higher, the cluster is a sharded cluster with the number of shards specified. For more information on sharded clusters, see Sharding in the MongoDB manual. For details on how this setting affects costs, see Number of Servers. The possible values are 1 through 12. replicationFactor number The number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. If your cluster is a sharded cluster, each shard is a replica set with the specified replication factor. For information on how the replication factor affects costs, see Number of Servers. For more information on MongoDB replica sets, see Replication in the MongoDB manual. The possible values are 3, 5, or 7. providerSettings object The configuration for the provisioned servers on which MongoDB runs. The available options are specific to the cloud service provider. providerSettings.providerName string The cloud service provider on which the servers are provisioned. The possible values are: AWS - Amazon AWS GCP - Google Cloud Platform AZURE - Microsoft Azure providerSettings.regionName string The physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. During deployment of a Atlas group\u2019s first M10+ paid cluster, Atlas creates a VPC for the group that is specific to the cloud service provider and region of the cluster. All additional clusters deployed in that group are associated to the group\u2019s VPC, locking the choice of cloud service provider and region. AWS GCP Azure US_EAST_1 US_EAST_2 US_WEST_1 US_WEST_2 CA_CENTRAL_1 EU_WEST_1 EU_WEST_2 EU_CENTRAL_1 AP_NORTHEAST_1 AP_NORTHEAST_2 AP_SOUTHEAST_1 AP_SOUTHEAST_2 AP_SOUTH_1 SA_EAST_1 Note EASTERN_US corresponds to the GCP us_east_1 region. CENTRAL_US EASTERN_US WESTERN_EUROPE EASTERN_ASIA_PACIFIC US_CENTRAL US_EAST US_EAST_2 US_NORTH_CENTRAL US_WEST US_SOUTH_CENTRAL EUROPE_NORTH EUROPE_WEST providerSettings.instanceSizeName string The name of the instance size used for the Atlas cluster. To view available instance sizes: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; view the available instance sizes; close the window without saving changes. providerSettings.diskIOPS integer The maximum input/output operations per second (IOPS) the system can perform. The available IOPS depend on the instance size: each instance size has a specific set of available IOPS values. To view available values: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; click an instance size to view the available values for Custom Storage Speed; close the window without saving changes. providerSettings.encryptEBSVolume Boolean AWS only. If enabled, the Amazon EBS encryption feature encrypts the server\u2019s root volume for both data at rest within the volume and for data moving between the volume and the instance. diskSizeGB double The size in gigabytes of the server\u2019s root volume. You can add capacity by increasing this number, up to a maximum possible value of 16384 (i.e., 16 TB). Each instance size has its own default value. To view default values: open the Atlas web interface; click the button to add a new cluster; view the available default sizes; close the window without saving changes. backupEnabled Boolean If enabled, the Atlas Backup service takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. stateName string The current state of the cluster. The possible states are: IDLE CREATING UPDATING DELETING DELETED REPAIRING Example\u00b6 Request\u00b6 curl -u \"username:apiKey\" --digest -H \"Content-Type: application/json\" -X POST \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794de37132bb7b/clusters\" --data ' { \"name\" : \"DataStore2\", \"diskSizeGB\" : 160, \"numShards\" : 1, \"providerSettings\" : { \"providerName\" : \"AWS\", \"diskIOPS\" : 480, \"encryptEBSVolume\" : false, \"instanceSizeName\" : \"M40\", \"regionName\" : \"US_EAST_1\" }, \"replicationFactor\" : 3, \"backupEnabled\" : true }' Response\u00b6 { \"backupEnabled\" : true, \"diskSizeGB\" : 160, \"groupId\" : \"5356823b3794de37132bb7b\", \"links\" : [ { \"href\" : \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794de37132bb7b/clusters/DataStore2\", \"rel\" : \"self\" } ], \"mongoDBMajorVersion\" : \"3.4\", \"mongoDBVersion\" : \"3.4.3\", \"mongoURIUpdated\" : \"2017-04-14T15:02:33Z\", \"name\" : \"DataStore2\", \"numShards\" : 1, \"providerSettings\" : { \"providerName\" : \"AWS\", \"diskIOPS\" : 480, \"encryptEBSVolume\" : false, \"instanceSizeName\" : \"M40\", \"regionName\" : \"US_EAST_1\" }, \"replicationFactor\" : 3, \"stateName\" : \"CREATING\" } \u2190 Get a Single Cluster Modify a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/clusters-delete-one.html",
            "title": "Delete a Cluster",
            "headings": [
                "Delete a Cluster\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Example\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Clusters > Delete a Cluster Delete a Cluster\u00b6 On this page Syntax Request Path Parameters Example Request Response The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-NAME} Request Path Parameters\u00b6 Path Element Required/Optional Description GROUP-ID Required. The unique identifier for the group containing the cluster you want to retrieve. CLUSTER-NAME Required The name of the cluster to retrieve. Example\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest -X DELETE \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794de37132bb7b/clusters/Cluster01\" Response\u00b6 HTTP/1.1 202 Accepted {} \u2190 Modify a Cluster Alerts \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/clusters-get-all.html",
            "title": "Get All Clusters",
            "headings": [
                "Get All Clusters\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Clusters > Get All Clusters Get All Clusters\u00b6 On this page Syntax Request Path Parameters HTTP Response Elements Example Request Response The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/clusters Request Path Parameters\u00b6 Path Element Required/Optional Description GROUP-ID Required. The unique identifier for the group whose clusters you want to retrieve. HTTP Response Elements\u00b6 Name Type Description name string The name of the cluster as it appears in Atlas. groupId string ID of the group the cluster belongs to. mongoDBVersion string The version of MongoDB the cluster runs, in <major version>.<minor version> format. mongoDBMajorVersion string The major version of MongoDB the cluster runs. Atlas supports the following MongoDB versions: 3.2 3.4 mongoURI string The connection string for connecting to the cluster through a MongoDB driver or the mongo shell. To download the mongo shell, click a cluster\u2019s Connect button and follow the download instructions. When you create a new cluster, the mongoURI will not show up while the cluster is being built. Atlas provides the connection string only after the cluster is running. mongoURIUpdated string Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster. numShards integer Selects whether the cluster is a sharded cluster or a replica set and specifies the number of shards for a sharded cluster. If this is set to 1, the cluster is a replica set. For more information on MongoDB replica sets, see Replication in the MongoDB manual. If this is set to 2 or higher, the cluster is a sharded cluster with the number of shards specified. For more information on sharded clusters, see Sharding in the MongoDB manual. For details on how this setting affects costs, see Number of Servers. The possible values are 1 through 12. replicationFactor number The number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. If your cluster is a sharded cluster, each shard is a replica set with the specified replication factor. For information on how the replication factor affects costs, see Number of Servers. For more information on MongoDB replica sets, see Replication in the MongoDB manual. The possible values are 3, 5, or 7. providerSettings object The configuration for the provisioned servers on which MongoDB runs. The available options are specific to the cloud service provider. providerSettings.providerName string The cloud service provider on which the servers are provisioned. The possible values are: AWS - Amazon AWS GCP - Google Cloud Platform AZURE - Microsoft Azure providerSettings.regionName string The physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. During deployment of a Atlas group\u2019s first M10+ paid cluster, Atlas creates a VPC for the group that is specific to the cloud service provider and region of the cluster. All additional clusters deployed in that group are associated to the group\u2019s VPC, locking the choice of cloud service provider and region. AWS GCP Azure US_EAST_1 US_EAST_2 US_WEST_1 US_WEST_2 CA_CENTRAL_1 EU_WEST_1 EU_WEST_2 EU_CENTRAL_1 AP_NORTHEAST_1 AP_NORTHEAST_2 AP_SOUTHEAST_1 AP_SOUTHEAST_2 AP_SOUTH_1 SA_EAST_1 Note EASTERN_US corresponds to the GCP us_east_1 region. CENTRAL_US EASTERN_US WESTERN_EUROPE EASTERN_ASIA_PACIFIC US_CENTRAL US_EAST US_EAST_2 US_NORTH_CENTRAL US_WEST US_SOUTH_CENTRAL EUROPE_NORTH EUROPE_WEST providerSettings.instanceSizeName string The name of the instance size used for the Atlas cluster. To view available instance sizes: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; view the available instance sizes; close the window without saving changes. providerSettings.diskIOPS integer The maximum input/output operations per second (IOPS) the system can perform. The available IOPS depend on the instance size: each instance size has a specific set of available IOPS values. To view available values: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; click an instance size to view the available values for Custom Storage Speed; close the window without saving changes. providerSettings.encryptEBSVolume Boolean AWS only. If enabled, the Amazon EBS encryption feature encrypts the server\u2019s root volume for both data at rest within the volume and for data moving between the volume and the instance. diskSizeGB double The size in gigabytes of the server\u2019s root volume. You can add capacity by increasing this number, up to a maximum possible value of 16384 (i.e., 16 TB). Each instance size has its own default value. To view default values: open the Atlas web interface; click the button to add a new cluster; view the available default sizes; close the window without saving changes. backupEnabled Boolean If enabled, the Atlas Backup service takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. stateName string The current state of the cluster. The possible states are: IDLE CREATING UPDATING DELETING DELETED REPAIRING Example\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794de37132bb7b/clusters\" Response\u00b6 HTTP/1.1 200 OK { \"results\" : [ { \"name\" : \"AppData\", \"backupEnabled\" : true, \"diskSizeGB\" : 160, \"groupId\" : \"5356823b3794de37132bb7b\", \"mongoDBVersion\" : \"3.2.8\", \"mongoURI\" : \"mongodb://appdata-shard-00-00-ub6lu.mongodb.net:27017,appdata-shard-00-01-ub6lu.mongodb.net:27017,appdata-shard-00-02-ub6lu.mongodb.net:27017\", \"mongoURIUpdated\" : \"2016-08-02T20:16:23Z\", \"numShards\" : 1, \"providerSettings\" : { \"providerName\" : \"AWS\", \"diskIOPS\" : 1320, \"encryptEBSVolume\" : false, \"instanceSizeName\" : \"M40\", \"regionName\" : \"US_WEST_2\" }, \"replicationFactor\" : 3, \"stateName\" : \"IDLE\" }, ... ], \"links\" : [ ... ], \"totalCount\" : 4 } \u2190 Clusters Get a Single Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/clusters-get-one.html",
            "title": "Get a Single Cluster",
            "headings": [
                "Get a Single Cluster\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Clusters > Get a Single Cluster Get a Single Cluster\u00b6 On this page Syntax Request Path Parameters HTTP Response Elements Example Request Response The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-NAME} Request Path Parameters\u00b6 Path Element Required/Optional Description GROUP-ID Required. The unique identifier for the group containing the cluster you want to retrieve. CLUSTER-NAME Required The name of the cluster to retrieve. HTTP Response Elements\u00b6 Name Type Description name string The name of the cluster as it appears in Atlas. groupId string ID of the group the cluster belongs to. mongoDBVersion string The version of MongoDB the cluster runs, in <major version>.<minor version> format. mongoDBMajorVersion string The major version of MongoDB the cluster runs. Atlas supports the following MongoDB versions: 3.2 3.4 mongoURI string The connection string for connecting to the cluster through a MongoDB driver or the mongo shell. To download the mongo shell, click a cluster\u2019s Connect button and follow the download instructions. When you create a new cluster, the mongoURI will not show up while the cluster is being built. Atlas provides the connection string only after the cluster is running. mongoURIUpdated string Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster. numShards integer Selects whether the cluster is a sharded cluster or a replica set and specifies the number of shards for a sharded cluster. If this is set to 1, the cluster is a replica set. For more information on MongoDB replica sets, see Replication in the MongoDB manual. If this is set to 2 or higher, the cluster is a sharded cluster with the number of shards specified. For more information on sharded clusters, see Sharding in the MongoDB manual. For details on how this setting affects costs, see Number of Servers. The possible values are 1 through 12. replicationFactor number The number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. If your cluster is a sharded cluster, each shard is a replica set with the specified replication factor. For information on how the replication factor affects costs, see Number of Servers. For more information on MongoDB replica sets, see Replication in the MongoDB manual. The possible values are 3, 5, or 7. providerSettings object The configuration for the provisioned servers on which MongoDB runs. The available options are specific to the cloud service provider. providerSettings.providerName string The cloud service provider on which the servers are provisioned. The possible values are: AWS - Amazon AWS GCP - Google Cloud Platform AZURE - Microsoft Azure providerSettings.regionName string The physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. During deployment of a Atlas group\u2019s first M10+ paid cluster, Atlas creates a VPC for the group that is specific to the cloud service provider and region of the cluster. All additional clusters deployed in that group are associated to the group\u2019s VPC, locking the choice of cloud service provider and region. AWS GCP Azure US_EAST_1 US_EAST_2 US_WEST_1 US_WEST_2 CA_CENTRAL_1 EU_WEST_1 EU_WEST_2 EU_CENTRAL_1 AP_NORTHEAST_1 AP_NORTHEAST_2 AP_SOUTHEAST_1 AP_SOUTHEAST_2 AP_SOUTH_1 SA_EAST_1 Note EASTERN_US corresponds to the GCP us_east_1 region. CENTRAL_US EASTERN_US WESTERN_EUROPE EASTERN_ASIA_PACIFIC US_CENTRAL US_EAST US_EAST_2 US_NORTH_CENTRAL US_WEST US_SOUTH_CENTRAL EUROPE_NORTH EUROPE_WEST providerSettings.instanceSizeName string The name of the instance size used for the Atlas cluster. To view available instance sizes: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; view the available instance sizes; close the window without saving changes. providerSettings.diskIOPS integer The maximum input/output operations per second (IOPS) the system can perform. The available IOPS depend on the instance size: each instance size has a specific set of available IOPS values. To view available values: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; click an instance size to view the available values for Custom Storage Speed; close the window without saving changes. providerSettings.encryptEBSVolume Boolean AWS only. If enabled, the Amazon EBS encryption feature encrypts the server\u2019s root volume for both data at rest within the volume and for data moving between the volume and the instance. diskSizeGB double The size in gigabytes of the server\u2019s root volume. You can add capacity by increasing this number, up to a maximum possible value of 16384 (i.e., 16 TB). Each instance size has its own default value. To view default values: open the Atlas web interface; click the button to add a new cluster; view the available default sizes; close the window without saving changes. backupEnabled Boolean If enabled, the Atlas Backup service takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. stateName string The current state of the cluster. The possible states are: IDLE CREATING UPDATING DELETING DELETED REPAIRING Example\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794de37132bb7b/clusters/LogData\" Response\u00b6 HTTP/1.1 200 OK { \"name\" : \"LogData\", \"backupEnabled\" : true, \"diskSizeGB\" : 80, \"groupId\" : \"5356823b3794de37132bb7b\", \"mongoDBVersion\" : \"3.2.8\", \"mongoURI\" : \"mongodb://logdata-shard-00-00-ub6lu.mongodb.net:37017,logdata-shard-00-01-ub6lu.mongodb.net:37017,logdata-shard-00-02-ub6lu.mongodb.net:37017,logdata-shard-01-00-ub6lu.mongodb.net:37017,logdata-shard-01-01-ub6lu.mongodb.net:37017,logdata-shard-01-02-ub6lu.mongodb.net:37017\", \"mongoURIUpdated\" : \"2016-08-02T20:16:23Z\", \"numShards\" : 2, \"providerSettings\" : { \"providerName\" : \"AWS\", \"diskIOPS\" : 240, \"encryptEBSVolume\" : false, \"instanceSizeName\" : \"M40\", \"regionName\" : \"US_EAST_1\" }, \"replicationFactor\" : 3, \"stateName\" : \"IDLE\" } \u2190 Get All Clusters Create a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/clusters-modify-one.html",
            "title": "Modify a Cluster",
            "headings": [
                "Modify a Cluster\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Clusters > Modify a Cluster Modify a Cluster\u00b6 On this page Syntax Request Path Parameters Request Body Parameters HTTP Response Elements Example Request Response Note This feature is not available for Free Tier clusters. For more information, see Atlas M0 (Free Tier) Limitations. The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 POST /api/atlas/v1.0/groups/{GROUP-ID}/clusters{CLUSTER-NAME} Request Path Parameters\u00b6 Path Element Required/Optional Description GROUP-ID Required. The unique identifier for the group containing the cluster. CLUSTER-NAME Required The name of the cluster to modify. Request Body Parameters\u00b6 Important If modifying any of the providerSettings values, you must specify the providerSettings.providerName. Name Type Description mongoDBMajorVersion string Specify 3.4 to direct Atlas to upgrade the cluster to MongoDB 3.4. You cannot downgrade a cluster running on 3.4 to 3.2. Atlas always upgrades the cluster to the latest stable release of the specified version. numShards integer Selects whether the cluster is a replica set or a sharded cluster. If this is set to 1, the cluster is a replica set. For more information on MongoDB replica sets, see Replication in the MongoDB manual. If this is set to 2 or higher, the cluster is a sharded cluster with the number of shards specified. For more information on sharded clusters, see Sharding in the MongoDB manual. For details on how this setting affects costs, see Number of Servers. The possible values are 1 through 12. replicationFactor number The number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. If your cluster is a sharded cluster, each shard is a replica set with the specified replication factor. For information on how the replication factor affects costs, see Number of Servers. For more information on MongoDB replica sets, see Replication in the MongoDB manual. The possible values are 3, 5, or 7. providerSettings object The configuration for the provisioned servers on which MongoDB runs. The available options are specific to the cloud service provider. providerSettings.providerName string The cloud service provider on which the servers are provisioned. The possible values are: AWS - Amazon AWS GCP - Google Cloud Platform AZURE - Microsoft Azure You must include this value if modifying any of the other providerSettings. providerSettings.regionName string The physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. During deployment of a Atlas group\u2019s first M10+ paid cluster, Atlas creates a VPC for the group that is specific to the cloud service provider and region of the cluster. All additional clusters deployed in that group are associated to the group\u2019s VPC, locking the choice of cloud service provider and region. AWS GCP Azure US_EAST_1 US_EAST_2 US_WEST_1 US_WEST_2 CA_CENTRAL_1 EU_WEST_1 EU_WEST_2 EU_CENTRAL_1 AP_NORTHEAST_1 AP_NORTHEAST_2 AP_SOUTHEAST_1 AP_SOUTHEAST_2 AP_SOUTH_1 SA_EAST_1 Note EASTERN_US corresponds to the GCP us_east_1 region. CENTRAL_US EASTERN_US WESTERN_EUROPE EASTERN_ASIA_PACIFIC US_CENTRAL US_EAST US_EAST_2 US_NORTH_CENTRAL US_WEST US_SOUTH_CENTRAL EUROPE_NORTH EUROPE_WEST You must include providerSettings.providerName if modifying this value. providerSettings.instanceSizeName string Atlas provides different instance sizes, each with a default RAM size, storage capacity, and maximum storage speed. The instance size you select is used for all the data-bearing servers in your cluster. For definitions of data-bearing servers, see Number of Servers. You can customize the instance size using the diskSizeGB and providerSettings.diskIOPS fields. Doing so affects costs, as described in Billing. In the API, enter the instance size exactly as it is named in the interface. For example, for M40 enter M40. To view available instance sizes: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; view the available instance sizes; close the window without saving changes. You must include providerSettings.providerName if modifying this value. providerSettings.diskIOPS integer The maximum input/output operations per second (IOPS) the system can perform. The available IOPS depend on the instance size: each instance size has a specific set of available IOPS values. To view available values: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; click an instance size to view the available values; close the window without saving changes. You must include providerSettings.providerName if modifying this value. providerSettings.encryptEBSVolume Boolean AWS only. If enabled, the Amazon EBS encryption feature encrypts the server\u2019s root volume for both data at rest within the volume and for data moving between the volume and the instance. You must include providerSettings.providerName if modifying this value. diskSizeGB double The size in gigabytes of the server\u2019s root volume. You can add capacity by increasing this number, up to a maximum possible value of 16384 (i.e., 16 TB). Important Atlas calculates storage charges differently depending on whether you choose the default value or a custom value. For details, see Storage Capacity. backupEnabled Boolean If enabled, the Atlas Backup service takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. HTTP Response Elements\u00b6 Name Type Description name string The name of the cluster as it appears in Atlas. groupId string ID of the group the cluster belongs to. mongoDBVersion string The version of MongoDB the cluster runs, in <major version>.<minor version> format. mongoDBMajorVersion string The major version of MongoDB the cluster runs. Atlas supports the following MongoDB versions: 3.2 3.4 mongoURI string The connection string for connecting to the cluster through a MongoDB driver or the mongo shell. To download the mongo shell, click a cluster\u2019s Connect button and follow the download instructions. When you create a new cluster, the mongoURI will not show up while the cluster is being built. Atlas provides the connection string only after the cluster is running. mongoURIUpdated string Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster. numShards integer Selects whether the cluster is a sharded cluster or a replica set and specifies the number of shards for a sharded cluster. If this is set to 1, the cluster is a replica set. For more information on MongoDB replica sets, see Replication in the MongoDB manual. If this is set to 2 or higher, the cluster is a sharded cluster with the number of shards specified. For more information on sharded clusters, see Sharding in the MongoDB manual. For details on how this setting affects costs, see Number of Servers. The possible values are 1 through 12. replicationFactor number The number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. If your cluster is a sharded cluster, each shard is a replica set with the specified replication factor. For information on how the replication factor affects costs, see Number of Servers. For more information on MongoDB replica sets, see Replication in the MongoDB manual. The possible values are 3, 5, or 7. providerSettings object The configuration for the provisioned servers on which MongoDB runs. The available options are specific to the cloud service provider. providerSettings.providerName string The cloud service provider on which the servers are provisioned. The possible values are: AWS - Amazon AWS GCP - Google Cloud Platform AZURE - Microsoft Azure providerSettings.regionName string The physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. During deployment of a Atlas group\u2019s first M10+ paid cluster, Atlas creates a VPC for the group that is specific to the cloud service provider and region of the cluster. All additional clusters deployed in that group are associated to the group\u2019s VPC, locking the choice of cloud service provider and region. AWS GCP Azure US_EAST_1 US_EAST_2 US_WEST_1 US_WEST_2 CA_CENTRAL_1 EU_WEST_1 EU_WEST_2 EU_CENTRAL_1 AP_NORTHEAST_1 AP_NORTHEAST_2 AP_SOUTHEAST_1 AP_SOUTHEAST_2 AP_SOUTH_1 SA_EAST_1 Note EASTERN_US corresponds to the GCP us_east_1 region. CENTRAL_US EASTERN_US WESTERN_EUROPE EASTERN_ASIA_PACIFIC US_CENTRAL US_EAST US_EAST_2 US_NORTH_CENTRAL US_WEST US_SOUTH_CENTRAL EUROPE_NORTH EUROPE_WEST providerSettings.instanceSizeName string The name of the instance size used for the Atlas cluster. To view available instance sizes: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; view the available instance sizes; close the window without saving changes. providerSettings.diskIOPS integer The maximum input/output operations per second (IOPS) the system can perform. The available IOPS depend on the instance size: each instance size has a specific set of available IOPS values. To view available values: open the Atlas web interface; select Build a New Cluster; select your preferred cloud service provider and region; click an instance size to view the available values for Custom Storage Speed; close the window without saving changes. providerSettings.encryptEBSVolume Boolean AWS only. If enabled, the Amazon EBS encryption feature encrypts the server\u2019s root volume for both data at rest within the volume and for data moving between the volume and the instance. diskSizeGB double The size in gigabytes of the server\u2019s root volume. You can add capacity by increasing this number, up to a maximum possible value of 16384 (i.e., 16 TB). Each instance size has its own default value. To view default values: open the Atlas web interface; click the button to add a new cluster; view the available default sizes; close the window without saving changes. backupEnabled Boolean If enabled, the Atlas Backup service takes snapshots of your databases at regular intervals and retains them according to your group\u2019s retention policy. stateName string The current state of the cluster. The possible states are: IDLE CREATING UPDATING DELETING DELETED REPAIRING Example\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest -H \"Content-Type: application/json\" -X PATCH \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794de37132bb7b/clusters/datastore2\" --data ' { \"diskSizeGB\" : 320, \"providerSettings\" : { \"providerName\" : \"AWS\", \"diskIOPS\" : 2400, \"encryptEBSVolume\" : false, \"instanceSizeName\" : \"M40\", \"regionName\" : \"EU_WEST_1\" }, \"replicationFactor\" : 3 }' Response\u00b6 HTTP/1.1 200 OK { \"name\" : \"datastore2\", \"backupEnabled\" : true, \"diskSizeGB\" : 320, \"groupId\" : \"5356823b3794de37132bb7b\", \"mongoDBVersion\" : \"3.2.8\", \"mongoURI\" : \"mongodb://datastore2-shard-00-00-ub6lu.mongodb.net:27017,datastore2-shard-00-01-ub6lu.mongodb.net:27017,datastore2-shard-00-02-ub6lu.mongodb.net:27017\", \"mongoURIUpdated\" : \"2016-08-03T15:19:24Z\", \"numShards\" : 1, \"providerSettings\" : { \"providerName\" : \"AWS\", \"diskIOPS\" : 2400, \"encryptEBSVolume\" : false, \"instanceSizeName\" : \"M40\", \"regionName\" : \"EU_WEST_1\" }, \"replicationFactor\" : 3, \"stateName\" : \"UPDATING\" } \u2190 Create a Cluster Delete a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/clusters.html",
            "title": "Clusters",
            "headings": [
                "Clusters\u00b6",
                "Endpoints\u00b6"
            ],
            "text": "API > API Resources > Clusters Clusters\u00b6 The clusters resource provides access to your cluster configurations. The resource lets you create, edit and delete clusters. The resource requires your Group ID. Important Changes to cluster configurations can affect costs. Before making changes, please see Billing. Endpoints\u00b6 Method Endpoint Description GET /api/atlas/v1.0/groups/{GROUP-ID}/clusters Get all clusters for the specified group. GET /api/atlas/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-NAME} Get a cluster in the specified group. POST /api/atlas/v1.0/groups/{GROUP-ID}/clusters Create a cluster in the specified group. PATCH /api/atlas/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-NAME} Update a cluster in the specified group. DELETE /api/atlas/v1.0/groups/{GROUP-ID}/clusters/{CLUSTER-NAME} Delete a cluster in the specified group. Get All Clusters Get a Single Cluster Create a Cluster Modify a Cluster Delete a Cluster \u2190 Delete a Database User Get All Clusters \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/database-users-create-a-user.html",
            "title": "Create a Database User",
            "headings": [
                "Create a Database User\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Database Users > Create a Database User Create a Database User\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Request Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. This endpoint requires that the Atlas user has the Owner role. To view the available Atlas users, click on Users in the left-hand navigation. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. Atlas supports a maximum of 100 MongoDB users per Atlas group. Syntax\u00b6 POST /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Defaults to false. pretty Optional A boolean that specifies whether or not to return a \u201cpretty-printed\u201d JSON document. Defaults to false. Request Body Parameters\u00b6 Name Description databaseName The user\u2019s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database. groupId ID of the Atlas group the user belongs to. username The username for authenticating to MongoDB. roles An array of the user\u2019s roles and the database on which the user has each role. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. roles.databaseName The database on which the user has the specified role. A role on the admin database can include privileges that apply to the other databases. roles.roleName The name of the role. The following possible values of role are restricted to the admin database: atlasAdmin readWriteAnyDatabase readAnyDatabase clusterMonitor backup dbAdminAnyDatabase enableSharding This role is specific to MongoDB databases managed by Atlas. The role allows the user to enable sharding on a database and to shard a collection. The following possible values of role can be applied to any database: dbAdmin read readWrite password The user\u2019s password. This field is NOT included in the entity returned from the server. Response Elements\u00b6 If you set the query element envelope to true, the response is wrapped by the content object. Name Description links One or more links to sub-resources and/or related resources. databaseName The user\u2019s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database. groupId ID of the Atlas group the user belongs to. username The username for authenticating to MongoDB. roles An array of the user\u2019s roles and the database on which the user has each role. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. roles.databaseName The database on which the user has the specified role. A role on the admin database can include privileges that apply to the other databases. roles.roleName The name of the role. The possible values are: atlasAdmin readWriteAnyDatabase readAnyDatabase backup clusterMonitor dbAdmin dbAdminAnyDatabase enableSharding This role is specific to MongoDB databases managed by Atlas. The role allows the user to enable sharding on a database and to shard a collection. read readWrite Example Request\u00b6 Request\u00b6 Important You must modify the following code block with the appropriate credentials and group ID. curl -i -u \"username:apiKey\" --digest -H \"Content-Type: application/json\" -X POST \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers\" --data ' { \"databaseName\" : \"admin\", \"roles\" : [ { \"databaseName\" : \"sales\", \"roleName\" : \"readWrite\" }, { \"databaseName\" : \"marketing\", \"roleName\" : \"read\" } ], \"username\" : \"david\", \"password\" : \"changeme123\" }' Response\u00b6 HTTP/1.1 201 Created { \"databaseName\" : \"admin\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"links\" : [ ... ], \"roles\" : [ { \"databaseName\" : \"sales\", \"roleName\" : \"readWrite\" }, { \"databaseName\" : \"marketing\", \"roleName\" : \"read\" } ], \"username\" : \"david\" } \u2190 Get a Single Database User Update a Database User \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/database-users-delete-a-user.html",
            "title": "Delete a Database User",
            "headings": [
                "Delete a Database User\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Database Users > Delete a Database User Delete a Database User\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Request Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. This endpoint requires that the Atlas user has the Owner role. To view the available Atlas users, click on Users in the left-hand navigation. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. Syntax\u00b6 DELETE /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers/admin/{USERNAME} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. USERNAME Required. The username to delete Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Defaults to false. For more information, see Envelopes. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 This endpoint does not return HTTP response elements. Example Request\u00b6 Request\u00b6 Important You must modify the following code block with the appropriate credentials and group ID. curl -i -u \"username:apiKey\" --digest -X DELETE \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/admin/elsa\" Response\u00b6 HTTP/1.1 200 OK {} \u2190 Update a Database User Clusters \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/database-users-get-all-users.html",
            "title": "Get All Database Users",
            "headings": [
                "Get All Database Users\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Database Users > Get All Database Users Get All Database Users\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Request Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. Defaults to 1. itemsPerPage Optional. Maximum number of items to return per page. Defaults to 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Defaults to false. pretty Optional A boolean that specifies whether or not to return a \u201cpretty-printed\u201d JSON document. Defaults to false. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 If you set the query element envelope to true, the response is wrapped by the content object. The HTTP response returns a JSON document that includes the following objects: results\u00b6 An array of documents, each representing one MongoDB user. Name Description databaseName The user\u2019s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database. links One or more links to sub-resources and/or related resources. groupId ID of the Atlas group the user belongs to. username The username for authenticating to MongoDB. roles An array of the user\u2019s roles and the database on which the user has each role. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. roles.databaseName The database on which the user has the specified role. A role on the admin database can include privileges that apply to the other databases. roles.roleName The name of the role. The possible values are: atlasAdmin readWriteAnyDatabase readAnyDatabase backup clusterMonitor dbAdmin dbAdminAnyDatabase enableSharding This role is specific to MongoDB databases managed by Atlas. The role allows the user to enable sharding on a database and to shard a collection. read readWrite links\u00b6 An array of documents, representing a link to one or more sub-resources and/or related resources such as list pagination. See Linking for more information. totalCount\u00b6 The total number of items in the result set. This value may be higher than the number of objects in the results array if the entire result set is paginated. Example Request\u00b6 Request\u00b6 Important You must modify the following code block with the appropriate credentials and group ID. curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers\" Response\u00b6 HTTP/1.1 200 OK { \"links\" : [ ... ], \"results\" : [ { \"databaseName\" : \"admin\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"links\" : [ ... ], \"roles\" : [ { \"databaseName\" : \"staging\", \"roleName\" : \"readWrite\" }, { \"databaseName\" : \"production\", \"roleName\" : \"read\" } ], \"username\" : \"susan\" }, ... ], \"totalCount\" : 4 } \u2190 Database Users Get a Single Database User \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/database-users-get-single-user.html",
            "title": "Get a Single Database User",
            "headings": [
                "Get a Single Database User\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Examples\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Database Users > Get a Single Database User Get a Single Database User\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Examples Request Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers/admin/{USERNAME} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. USERNAME Required. The username to retrieve Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Defaults to false. pretty Optional A boolean that specifies whether or not to return a \u201cpretty-printed\u201d JSON document. Defaults to false. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 If you set the query element envelope to true, the response is wrapped by the content object. Name Description databaseName The user\u2019s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database. links One or more links to sub-resources and/or related resources. groupId ID of the Atlas group the user belongs to. username The username for authenticating to MongoDB. roles An array of the user\u2019s roles and the database on which the user has each role. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. roles.databaseName The database on which the user has the specified role. A role on the admin database can include privileges that apply to the other databases. roles.roleName The name of the role. The possible values are: atlasAdmin readWriteAnyDatabase readAnyDatabase backup clusterMonitor dbAdmin dbAdminAnyDatabase enableSharding This role is specific to MongoDB databases managed by Atlas. The role allows the user to enable sharding on a database and to shard a collection. read readWrite Examples\u00b6 Request\u00b6 Important You must modify the following code block with the appropriate credentials and group ID. curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/admin/ellen\" Response\u00b6 HTTP/1.1 200 OK { \"databaseName\" : \"admin\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"links\" : [ ... ], \"roles\" : [ { \"databaseName\" : \"admin\", \"roleName\" : \"readAnyDatabase\" }, { \"databaseName\" : \"marketing\", \"roleName\" : \"readWrite\" }, { \"databaseName\" : \"marketing\", \"roleName\" : \"backup\" } ], \"username\" : \"ellen\" } \u2190 Get All Database Users Create a Database User \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/database-users-update-a-user.html",
            "title": "Update a Database User",
            "headings": [
                "Update a Database User\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Request\u00b6",
                "Response\u00b6"
            ],
            "text": "API > API Resources > Database Users > Update a Database User Update a Database User\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Request Response - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The Atlas API uses HTTP Digest Authentication. Provide your Atlas username as the username and group API key as the password as part of the HTTP request. This endpoint requires that the Atlas user has the Owner role. To view the available Atlas users, click on Users in the left-hand navigation. For complete documentation on configuring API access for an Atlas group, see Configure Atlas API Access. Syntax\u00b6 You can update a user\u2019s roles and password. You cannot update the user\u2019s name or authentication database, which is admin. Send only those fields where you will change the value. PATCH /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers/admin/{USERNAME} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. USERNAME Required. The username to update Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. pretty Optional A boolean that specifies whether or not to return a \u201cpretty-printed\u201d JSON document. Defaults to false. Request Body Parameters\u00b6 Name Description roles An array of the user\u2019s roles and the database on which the user has each role. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. roles.databaseName The database on which the user has the specified role. A role on the admin database can include privileges that apply to the other databases. roles.roleName The name of the role. The following possible values of role are restricted to the admin database: atlasAdmin readWriteAnyDatabase readAnyDatabase clusterMonitor backup dbAdminAnyDatabase enableSharding This role is specific to MongoDB databases managed by Atlas. The role allows the user to enable sharding on a database and to shard a collection. The following possible values of role can be applied to any database: dbAdmin read readWrite password The user\u2019s password. This field is NOT included in the entity returned from the server. Response Elements\u00b6 If you set the query element envelope to true, the response is wrapped by the content object. Name Description links One or more links to sub-resources and/or related resources. databaseName The user\u2019s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database. groupId ID of the Atlas group the user belongs to. username The username for authenticating to MongoDB. roles An array of the user\u2019s roles and the database on which the user has each role. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. roles.databaseName The database on which the user has the specified role. A role on the admin database can include privileges that apply to the other databases. roles.roleName The name of the role. The possible values are: atlasAdmin readWriteAnyDatabase readAnyDatabase backup clusterMonitor dbAdmin dbAdminAnyDatabase enableSharding This role is specific to MongoDB databases managed by Atlas. The role allows the user to enable sharding on a database and to shard a collection. read readWrite Example Request\u00b6 Request\u00b6 Important You must modify the following code block with the appropriate credentials and group ID. curl -i -u \"username:apiKey\" --digest -H \"Content-Type: application/json\" -X PATCH \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/databaseUsers/admin/david\" --data ' { \"roles\" : [ { \"databaseName\" : \"service\", \"roleName\" : \"read\" } ] }' Response\u00b6 HTTP/1.1 200 OK { \"databaseName\" : \"admin\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"links\" : [ ... ], \"roles\" : [ { \"databaseName\" : \"service\", \"roleName\" : \"read\" } ], \"username\" : \"david\" \u2190 Create a Database User Delete a Database User \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/database-users.html",
            "title": "Database Users",
            "headings": [
                "Database Users\u00b6"
            ],
            "text": "API > API Resources > Database Users Database Users\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ The databaseUsers resource lets you retrieve, create and modify the MongoDB users in your cluster. Each user has a set of roles that provide access to the group\u2019s databases. A user\u2019s roles apply to all the clusters in the group: if two clusters have a products database and a user has a role granting read access on the products database, the user has that access on both clusters. Each user also has a username, password, and authentication database used to log into MongoDB. Atlas deployments of MongoDB use admin as the authentication database for all users. The authentication database does not determine a user\u2019s roles. The databaseUsers resource requires your Group ID. Method Endpoint Description GET /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers Get all users in the group GET /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers/admin/{USERNAME} Get a single user in the group POST /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers Create a user for the group PATCH /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers/admin/{USERNAME} Update a user for the group. DELETE /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers/admin/{USERNAME} Delete a user for the group. Get All Database Users Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements results links totalCount Example Request Request Response Get a Single Database User Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Examples Request Response Create a Database User Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Request Response Update a Database User Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Request Response Delete a Database User Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Request Request Response \u2190 Group IP Whitelist Get All Database Users \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/root.html",
            "title": "Root",
            "headings": [
                "Root\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > Root Root\u00b6 On this page Syntax Request Path Parameters Request Query Parameters Request Body Parameters Response Elements Example Example Request Example Response The root resource is the starting point for the Atlas API. - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/public/v1.0/ Request Path Parameters\u00b6 This endpoint does not use HTTP request path parameters. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The response includes the following elements: Field Description appName MongoDB Cloud build The SHA that corresponds to the GitHub commit for the Atlas. links Array of links to related API resources. For more information on links, see Linking. throttling The field is obsolete and has the value false. Example\u00b6 Example Request\u00b6 curl -X GET -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0\" Example Response\u00b6 { \"appName\": \"MongoDB Cloud\", \"build\": \"ec8b09b880be314981caa9d8fbefc3280056522e\", \"links\": [ { \"href\": \"https://cloud.mongodb.com/api/atlas/v1.0\", \"rel\": \"self\" }, { \"href\": \"https://cloud.mongodb.com/api/atlas/v1.0/users/5555320d3bf9942ef124958b\", \"rel\": \"http://mms.mongodb.com/user\" } ], \"throttling\": false } \u2190 API Resources Group IP Whitelist \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/users.html",
            "title": "Atlas Users",
            "headings": [
                "Atlas Users\u00b6",
                "Endpoints\u00b6",
                "Get All Users in a Group\u00b6",
                "Get a User by ID\u00b6",
                "Get a User by Name\u00b6",
                "Create a User\u00b6",
                "Update a User\u00b6",
                "Sample Entity\u00b6",
                "Entity Fields\u00b6",
                "Links\u00b6",
                "Examples\u00b6",
                "Get All Users in a Group\u00b6",
                "Get a User by ID\u00b6",
                "Get a User by Name\u00b6",
                "Create a User\u00b6",
                "Update a User\u00b6"
            ],
            "text": "Atlas Users\u00b6 On this page Endpoints Sample Entity Entity Fields Links Examples The following resources give access to Atlas users. You must have the Owner role for the group to use these resources: /groups/GROUP-ID/users /users Note Atlas users are separate from MongoDB users. MongoDB users are accessed through the databaseUsers resource. Endpoints\u00b6 Get All Users in a Group\u00b6 Retrieve all users in a group. GET /api/atlas/v1.0/groups/GROUP-ID/users Get a User by ID\u00b6 GET /api/atlas/v1.0/users/USER-ID Get a User by Name\u00b6 GET /api/atlas/v1.0/users/byName/USER-NAME Create a User\u00b6 POST /api/atlas/v1.0/users To create a user, you must include all the fields in the /users entity. Update a User\u00b6 PATCH /api/atlas/v1.0/users/USER-ID Update the fields returned from the server. Unspecified fields will preserve their current values. You cannot edit the user\u2019s password. Sample Entity\u00b6 { \"id\": \"xxx\", \"username\": \"somebody\", \"password\": \"abc123\", \"emailAddress\": \"somebody@example.com\", \"mobileNumber\": \"2125551234\", \"firstName\": \"John\", \"lastName\": \"Doe\", \"roles\": [ { \"groupId\": \"8491812938cbda83918c\", \"roleName\": \"GROUP_OWNER\" }, { \"groupId\": \"4829cbda839cbdac3819\", \"roleName\": \"GROUP_READ_ONLY\" } ], \"links\": [ ... ] } Entity Fields\u00b6 Name Type Description id string Unique identifier. username string Atlas username. password string Password. This field is NOT included in the entity returned from the server. It can only be sent in the entity body when creating a new user. emailAddress string Email address. mobileNumber string The mobile number Atlas uses when sending alert notification via SMS. firstName string First name. lastName string Last name. roles object array Role assignments. roles.groupId string The group ID in which the user has the specified role. roles.roleName string The name of the role. The users resource returns all the roles the user has in both Atlas and Cloud Manager. Possible values are: GROUP_OWNER GROUP_READ_ONLY GROUP_AUTOMATION_ADMIN (Cloud Manager) GROUP_BACKUP_ADMIN (Cloud Manager) GROUP_MONITORING_ADMIN (Cloud Manager) GROUP_OWNER (Cloud Manager) GROUP_READ_ONLY (Cloud Manager) GROUP_USER_ADMIN (Cloud Manager) Links\u00b6 Relation Description self Me http://mms.mongodb.com/whitelist The user\u2019s API whitelist. Examples\u00b6 Get All Users in a Group\u00b6 Request\u00b6 curl -u \"username:apiKey\" --digest -i \"https://cloud.mongodb.com/api/atlas/v1.0/groups/535683b3794d371327b/users\" Response\u00b6 HTTP/1.1 200 OK { \"totalCount\": 5, \"results\": [ { \"id\" : \"5329c8dfe4b0b07a83d67d\", \"username\" : \"joe\", \"emailAddress\" : \"joe@example.com\", \"firstName\" : \"John\", \"lastName\" : \"Doe\", \"roles\" : [ { \"groupId\" : \"535683b3794d371327b\", \"roleName\" : \"GROUP_OWNER\" }, { \"groupId\" : \"6d3628d022db4cbc26e\", \"roleName\" : \"GROUP_READ_ONLY\" } ], \"links\": [ ... ] }, ... ], \"links\": [ ... ] } Get a User by ID\u00b6 Request\u00b6 curl -u \"username:apiKey\" --digest -i \"https://cloud.mongodb.com/api/atlas/v1.0/users/5dc19ce4b00835ff81e2eb\" Response\u00b6 HTTP/1.1 200 OK { \"id\" : \"5dc19ce4b00835ff81e2eb\", \"username\" : \"jane\", \"emailAddress\" : \"jane@example.com\", \"firstName\" : \"Jane\", \"lastName\" : \"D'oh\", \"roles\" : [ { \"groupId\" : \"535683b3794d371327b\", \"roleName\" : \"GROUP_OWNER\" } ], \"links\": [ ... ] } Get a User by Name\u00b6 Request\u00b6 curl -u \"username:apiKey\" --digest -i \"https://cloud.mongodb.com/api/atlas/v1.0/users/byName/jane\" Response\u00b6 HTTP/1.1 200 OK { \"id\" : \"5dc19ce4b00835ff81e2eb\", \"emailAddress\" : \"jane@example.com\", \"firstName\" : \"Jane\", \"lastName\" : \"D'oh\", \"roles\" : [ { \"groupId\" : \"535683b3794d371327b\", \"roleName\" : \"GROUP_OWNER\" } ], \"links\": [ ... ] } Create a User\u00b6 Request\u00b6 curl -u \"username:apiKey\" -H \"Content-Type: application/json\" --digest -i -X POST \"https://cloud.mongodb.com/api/atlas/v1.0/users\" --data ' { \"username\": \"simon\", \"emailAddress\": \"simon@example.com\", \"firstName\": \"Simon\", \"lastName\": \"Smith\", \"password\": \"passw0rd!\", \"roles\": [ { \"groupId\": \"535683b3794d371327b\", \"roleName\": \"GROUP_READ_ONLY\" } ] }' Response\u00b6 HTTP/1.1 201 Created { \"id\" : \"4fef83b201a482549032eb\", \"username\": \"simon\", \"emailAddress\": \"simon@example.com\", \"firstName\": \"Simon\", \"lastName\": \"Smith\", \"roles\": [ { \"groupId\": \"535683b3794d371327b\", \"roleName\": \"GROUP_READ_ONLY\" } ], \"links\" : [ ... ] } Update a User\u00b6 Request\u00b6 curl -u \"username:apiKey\" -H \"Content-Type: application/json\" --digest -i -X PATCH \"https://cloud.mongodb.com/api/atlas/v1.0/users/4fef83b201a482549032eb\" --data ' { \"emailAddress\": \"simon.jones@example.com\", \"lastName\": \"Jones\" }' Response\u00b6 HTTP/1.1 200 OK { \"id\" : \"4fef83b201a482549032eb\", \"username\": \"simon\", \"emailAddress\": \"simon.jones@example.com\", \"firstName\": \"Simon\", \"lastName\": \"Jones\", \"roles\": [ { \"groupId\": \"535683b3794d371327b\", \"roleName\": \"GROUP_READ_ONLY\" } ], \"links\" : [ ... ] } \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-create-container.html",
            "title": "Create a New Container",
            "headings": [
                "Create a New Container\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Create a New Container Create a New Container\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 POST /api/atlas/v1.0/groups/{GROUP-ID}/containers Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 Parameter Required/Optional Description atlasCidrBlock Required. Atlas CIDR block. Atlas uses the specified CIDR block for all other VPC peering connections created in the group. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following private networks. 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 Atlas locks this value if an M10+ cluster or a VPC peering connection already exists. To modify the CIDR block, ensure there are no M10+ clusters in the group and no other VPC peering connections in the group. Alternatively, create a new group and create a VPC Peering Connection to set the desired Atlas VPC CIDR block for that group. Important Atlas limits the number of MongoDB nodes per VPC based on the CIDR block and the region selected for the group. For example, a group in an AWS region supporting 3 availability zones and a Atlas CIDR VPC block of /24 is limited to the equivalent of 27 3-node replica sets. Contact MongoDB Support for any questions on Atlas limits of MongoDB nodes per VPC. providerName Required. The provider name. Specify AWS. regionName Required. AWS region name. HTTP Response Elements\u00b6 Field Description id The container ID. providerName Provider name; e.g. AWS. atlasCidrBlock The Atlas CIDR block. regionName AWS region. vpcId The ID of the peer VPC. isProvisioned Flag that indicates if the group has clusters deployed in the VPC. Example Request\u00b6 curl -X POST -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/containers\" \\ -H \"Content-Type: application/json\" --data ' { \"atlasCidrBlock\" : \"192.168.248.0/21\", \"providerName\" : \"AWS\", \"regionName\" : \"US_EAST_1\" }' Example Response\u00b6 { \"atlasCidrBlock\" : \"192.168.248.0/21\", \"id\" : \"1112269b3bf99403840e8934\", \"providerName\" : \"AWS\", \"provisioned\" : true, \"regionName\" : \"US_EAST_1\", \"vpcId\" : \"vpc-zz0zzzzz\" } \u2190 Get a List of Cloud Services Containers Get a Specific Container \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-create-peering-connection.html",
            "title": "Create a New VPC Peering Connection",
            "headings": [
                "Create a New VPC Peering Connection\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Create a New VPC Peering Connection Create a New VPC Peering Connection\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 POST /api/atlas/v1.0/groups/{GROUP-ID}/peers Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 Parameter Required/Optional Description vpcId Required. The ID of the peer VPC. awsAccountId Required. The AWS account ID of the owner of the peer VPC. routeTableCidrBlock Required. The peer VPC CIDR block or subnet. HTTP Response Elements\u00b6 Field Description id Atlas assigned unique ID for the connection. Only specific to and used by Atlas. routeTableCidrBlock The peer VPC CIDR block or subnet. vpcId The ID of the peer VPC. awsAccountId The AWS account ID of the owner of the peer VPC. connectionId The peering connection ID. statusName The status. The VPC peering connection status value can be one of the following: INITIATING PENDING_ACCEPTANCE FAILED FINALIZING AVAILABLE TERMINATING errorStateName The error state, if any. The VPC peering connection error state value can be one of the following: REJECTED EXPIRED INVALID_ARGUMENT Example Request\u00b6 curl -X POST -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/peers\" \\ -H \"Content-Type: application/json\" --data ' { \"vpcId\" : \"vpc-123456\", \"awsAccountId\" : \"abc123abc123\", \"routeTableCidrBlock\" : \"192.168.0.0/24\" }' Example Response\u00b6 { \"awsAccountId\" : \"999900000000\", \"connectionId\" : null, \"errorStateName\" : null, \"id\" : \"1112222b3bf99403840e8934\", \"routeTableCidrBlock\" : \"10.15.0.0/16\", \"statusName\" : \"INITIATING\", \"vpcId\" : \"vpc-abc123abc123\" } \u2190 Get a List of VPC Peering Connections Get a Specific VPC Peering Connection \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-delete-peering-connection.html",
            "title": "Delete an Existing VPC Peering Connection",
            "headings": [
                "Delete an Existing VPC Peering Connection\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Delete an Existing VPC Peering Connection Delete an Existing VPC Peering Connection\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 DELETE /api/atlas/v1.0/groups/{GROUP-ID}/peers/{PEER-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. PEER-ID Required. Atlas assigned unique ID for the peering connection. Note This is separate from the vpc ID. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. HTTP Response Elements\u00b6 { } Example Request\u00b6 curl -X DELETE -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/peers/1112222b3bf99403840e8934\" Example Response\u00b6 {} \u2190 Update an Existing VPC Peering Connection User API Whitelist \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-get-connection.html",
            "title": "Get a Specific VPC Peering Connection",
            "headings": [
                "Get a Specific VPC Peering Connection\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Get a Specific VPC Peering Connection Get a Specific VPC Peering Connection\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/peers/{PEER-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. PEER-ID Required. Atlas assigned unique ID for the peering connection. Note This is separate from the vpc ID. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 Field Description id Atlas assigned unique ID for the connection. Only specific to and used by Atlas. routeTableCidrBlock The peer VPC CIDR block or subnet. vpcId The ID of the peer VPC. awsAccountId The AWS account ID of the owner of the peer VPC. connectionId The peering connection ID. statusName The status. The VPC peering connection status value can be one of the following: INITIATING PENDING_ACCEPTANCE FAILED FINALIZING AVAILABLE TERMINATING errorStateName The error state, if any. The VPC peering connection error state value can be one of the following: REJECTED EXPIRED INVALID_ARGUMENT Example Request\u00b6 curl -X GET -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/peers/1112222b3bf99403840e8934\" Example Response\u00b6 { \"awsAccountId\" : \"999900000000\", \"connectionId\" : null, \"errorStateName\" : null, \"id\" : \"1112222b3bf99403840e8934\", \"routeTableCidrBlock\" : \"10.15.0.0/16\", \"statusName\" : \"INITIATING\", \"vpcId\" : \"vpc-abc123abc123\" } \u2190 Create a New VPC Peering Connection Update an Existing VPC Peering Connection \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-get-connections-list.html",
            "title": "Get a List of VPC Peering Connections",
            "headings": [
                "Get a List of VPC Peering Connections\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Get a List of VPC Peering Connections Get a List of VPC Peering Connections\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/peers Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required Group identifier. Request Query Parameters\u00b6 Field Required/Optional Description pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The response includes a results array of peering connection information. Each connection information has the following fields: Field Description id\u00b6 Atlas assigned unique ID for the connection. Only specific to and used by Atlas. providerName The provider name; e.g. AWS. routeTableCidrBlock The peer VPC CIDR block or subnet. vpcId The ID of the peer VPC. awsAccountId AWS account ID. connectionId Connection ID. statusName The status. The VPC peering connection status value can be one of the following: INITIATING PENDING_ACCEPTANCE FAILED FINALIZING AVAILABLE TERMINATING errorStateName The error state, if any. The VPC peering connection error state value can be one of the following: REJECTED EXPIRED INVALID_ARGUMENT Example Request\u00b6 curl -X GET -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/peers\" Example Response\u00b6 { \"links\": [ { \"href\" : \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/peers?pageNum=1&itemsPerPage=100\", \"rel\" : \"self\" } ], \"results\":[ { \"awsAccountId\" : \"999900000000\", \"connectionId\" : null, \"errorStateName\" : null, \"id\" : \"1112222b3bf99403840e8934\", \"routeTableCidrBlock\" : \"10.15.0.0/16\", \"statusName\" : \"INITIATING\", \"vpcId\" : \"vpc-abc123abc123\" } ], \"totalCount\":1 } \u2190 Update a Container Create a New VPC Peering Connection \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-get-container.html",
            "title": "Get a Specific Container",
            "headings": [
                "Get a Specific Container\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Get a Specific Container Get a Specific Container\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/containers/{CONTAINER-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group whose container you want to retrieve. CONTAINER-ID Required. The identifier for the container. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 Field Description id The container ID. providerName The Cloud Services provider name; i.e. AWS. atlasCidrBlock The Atlas CIDR block. regionName AWS region. vpcId The ID of the group\u2019s VPC. isProvisioned Flag that indicates if the group has clusters deployed in the VPC. Example Request\u00b6 curl -X GET -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/containers/1112222b3bf99403840e8934\" Example Response\u00b6 { \"atlasCidrBlock\" : \"192.168.248.0/21\", \"id\" : \"1112222b3bf99403840e8934\", \"providerName\" : \"AWS\", \"provisioned\" : true, \"regionName\" : \"US_EAST_1\", \"vpcId\" : \"vpc-zz0zzzzz\" } \u2190 Create a New Container Update a Container \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-get-containers-list.html",
            "title": "Get a List of Cloud Services Containers",
            "headings": [
                "Get a List of Cloud Services Containers\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Get a List of Cloud Services Containers Get a List of Cloud Services Containers\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 GET /api/atlas/v1.0/groups/{GROUP-ID}/containers Request Path Parameters\u00b6 Path Element Required/Optional Description GROUP-ID Required. The unique identifier for the group whose containers (AWS VPC) you want to retrieve. Request Query Parameters\u00b6 Field Required/Optional Desscription pageNum Optional. The page to return. itemsPerPage Optional. Maximum number of items to return per page. Default is 100. envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 This endpoint does not use HTTP request body parameters. Response Elements\u00b6 The response includes a results array of container information. Each container information has the following fields: Field Description id The ID for the container. providerName The Cloud Services provider name; i.e. AWS. atlasCidrBlock The Atlas CIDR block. regionName AWS region. vpcId The ID of the group\u2019s VPC. isProvisioned Flag that indicates if the group has clusters deployed in the VPC. Example Request\u00b6 copyable-code curl -X GET -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/containers\" Example Response\u00b6 { \"links\":[ { \"href\" : \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/containers?pageNum=1&itemsPerPage=100\", \"rel\" : \"self\" } ], \"results\":[ { \"atlasCidrBlock\" : \"192.168.248.0/21\", \"id\" : \"1112222b3bf99403840e8934\", \"providerName\" : \"AWS\", \"provisioned\" : true, \"regionName\" : \"US_EAST_1\", \"vpcId\" : \"vpc-zz0zzzzz\" } ], \"totalCount\":1 } \u2190 VPC Create a New Container \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-update-container.html",
            "title": "Update a Container",
            "headings": [
                "Update a Container\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Update a Container Update a Container\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 PATCH /api/atlas/v1.0/groups/{GROUP-ID}/containers/{CONTAINER-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. CONTAINER-ID Required. The identifier for the container. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 Parameter Required/Optional Description atlasCidrBlock Required. Atlas CIDR block. Atlas uses the specified CIDR block for all other VPC peering connections created in the group. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following private networks. 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 Atlas locks this value if an M10+ cluster or a VPC peering connection already exists. To modify the CIDR block, ensure there are no M10+ clusters in the group and no other VPC peering connections in the group. Alternatively, create a new group and create a VPC Peering Connection to set the desired Atlas VPC CIDR block for that group. Important Atlas limits the number of MongoDB nodes per VPC based on the CIDR block and the region selected for the group. For example, a group in an AWS region supporting 3 availability zones and a Atlas CIDR VPC block of /24 is limited to the equivalent of 27 3-node replica sets. Contact MongoDB Support for any questions on Atlas limits of MongoDB nodes per VPC. providerName Required. The provider name. Specify AWS. regionName Required. AWS region name. HTTP Response Elements\u00b6 Field Description id The container ID. providerName Provider name; e.g. AWS. atlasCidrBlock The Atlas CIDR block. regionName AWS region. vpcId The ID of the peer VPC. isProvisioned Flag that indicates if the group has clusters deployed in the VPC. Example Request\u00b6 curl -X PATCH -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/containers/1112222b3bf99403840e8934\" \\ -H \"Content-Type: application/json\" --data ' { \"atlasCidrBlock\" : \"192.168.248.0/21\", \"providerName\" : \"AWS\", \"regionName\" : \"US_EAST_1\" }' Example Response\u00b6 { \"atlasCidrBlock\" : \"192.168.248.0/21\", \"id\" : \"1112269b3bf99403840e8934\", \"providerName\" : \"AWS\", \"provisioned\" : true, \"regionName\" : \"US_EAST_1\", \"vpcId\" : \"vpc-zz0zzzzz\" } \u2190 Get a Specific Container Get a List of VPC Peering Connections \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc-update-peering-connection.html",
            "title": "Update an Existing VPC Peering Connection",
            "headings": [
                "Update an Existing VPC Peering Connection\u00b6",
                "Syntax\u00b6",
                "Request Path Parameters\u00b6",
                "Request Query Parameters\u00b6",
                "Request Body Parameters\u00b6",
                "HTTP Response Elements\u00b6",
                "Example Request\u00b6",
                "Example Response\u00b6"
            ],
            "text": "API > API Resources > VPC > Update an Existing VPC Peering Connection Update an Existing VPC Peering Connection\u00b6 - font-size and line-height taken from div.body h2 Base URL: https://cloud.mongodb.com/ Syntax\u00b6 PATCH /api/atlas/v1.0/groups/{GROUP-ID}/peers/{PEER-ID} Request Path Parameters\u00b6 Parameter Required/Optional Description GROUP-ID Required. The unique identifier for the group. PEER-ID Required. Atlas assigned unique ID for the peering connection. Note This is separate from the vpc ID. Request Query Parameters\u00b6 Field Required/Optional Description envelope Optional. A boolean that specifies whether or not to wrap the response in an envelope. Request Body Parameters\u00b6 The following parameters are required in the body of the request. Parameter Required/Optional Description routeTableCidrBlock Optional The peer VPC CIDR block or subnet. awsAccountId Optional AWS account ID of the peer. If both awsAccountId and vpcId are specified, Atlas attempts to reinitialize the peering connection. vpcId Optional VPC ID of the peer. If both vpcId and awsAccountId are specified, Atlas attempts to reinitialize the peering connection. HTTP Response Elements\u00b6 Field Description id The peer ID. routeTableCidrBlock The peer VPC CIDR block or subnet. vpcId The ID of the peer VPC. awsAccountId AWS account ID of the peer. connectionId Connection ID. statusName The status. The VPC peering connection status value can be one of the following: INITIATING PENDING_ACCEPTANCE FAILED FINALIZING AVAILABLE TERMINATING errorStateName The error state, if any. The VPC peering connection error state value can be one of the following: REJECTED EXPIRED INVALID_ARGUMENT Example Request\u00b6 curl -X PATCH -u 'username:apiKey' --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/peers/1112222b3bf99403840e8934\" \\ -H \"Content-Type: application/json\" --data ' { \"routeTableCidrBlock\" : \"10.15.0.0/24\" }' Example Response\u00b6 { \"awsAccountId\" : \"999900000000\", \"connectionId\" : null, \"errorStateName\" : null, \"id\" : \"1112222b3bf99403840e8934\", \"routeTableCidrBlock\" : \"10.15.0.0/16\", \"statusName\" : \"INITIATING\", \"vpcId\" : \"vpc-abc123abc123\" } \u2190 Get a Specific VPC Peering Connection Delete an Existing VPC Peering Connection \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/vpc.html",
            "title": "VPC",
            "headings": [
                "VPC\u00b6",
                "Base URL: https://cloud.mongodb.com/\u00b6",
                "Endpoints\u00b6"
            ],
            "text": "API > API Resources > VPC VPC\u00b6 On this page Base URL: https://cloud.mongodb.com/ Endpoints Base URL: https://cloud.mongodb.com/\u00b6 Endpoints\u00b6 The following lists the endpoints available VPC peering. Method Endpoint Description GET /api/atlas/v1.0/groups/{GROUP-ID}/containers Get a list of container for a group. POST /api/atlas/v1.0/groups/{GROUP-ID}/containers Create a new container for a group. GET /api/atlas/v1.0/groups/{GROUP-ID}/containers/{CONTAINER-ID} Get a specific container for a group. PATCH /api/atlas/v1.0/groups/{GROUP-ID}/containers/{CONTAINER-ID} Update a container for a group. GET /api/atlas/v1.0/groups/{GROUP-ID}/peers Get a list of VPC peering connections for a group. POST /api/atlas/v1.0/groups/{GROUP-ID}/peers Create a new VPC peering connection. GET /api/atlas/v1.0/groups/{GROUP-ID}/peers/{PEER-ID} Get a specific VPC peering connection for a group. PATCH /api/atlas/v1.0/groups/{GROUP-ID}/peers/{PEER-ID} Update a VPC peering connection for a group. DELETE /api/atlas/v1.0/groups/{GROUP-ID}/peers/{PEER-ID} Delete a VPC peering connection for a group. Get a List of Cloud Services Containers Create a New Container Get a Specific Container Update a Container Get a List of VPC Peering Connections Create a New VPC Peering Connection Get a Specific VPC Peering Connection Update an Existing VPC Peering Connection Delete an Existing VPC Peering Connection \u2190 Get Open Alerts for Alert Configuration Get a List of Cloud Services Containers \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/whitelist-api.html",
            "title": "User API Whitelist",
            "headings": [
                "User API Whitelist\u00b6",
                "Endpoints\u00b6",
                "Get the API Whitelist for the Current User\u00b6",
                "Get the API Whitelist Entry for a Specified Address or CIDR Block\u00b6",
                "Add Entries to the User\u2019s API Whitelist\u00b6",
                "Delete an Entry from the User\u2019s API Whitelist\u00b6",
                "Sample Entity\u00b6",
                "Entity Fields\u00b6",
                "Links\u00b6",
                "Examples\u00b6",
                "Get the API Whitelist for the Current User\u00b6",
                "Get the API Whitelist Entry for a Specified Address or CIDR Block\u00b6",
                "Add Entries to the User\u2019s API Whitelist\u00b6",
                "Delete an Entry from the User\u2019s API Whitelist\u00b6"
            ],
            "text": "API > API Resources > User API Whitelist User API Whitelist\u00b6 On this page Endpoints Sample Entity Entity Fields Links Examples The /users/USER-ID/whitelist resource retrieves and updates your API whitelist. If you have the Owner role, you can perform whitelisted API operations from the IP addresses you have added to this list. The resource\u2019s POST and DELETE operations are themselves whitelisted. They must originate from an address already on your API whitelist. You can access the API whitelist only for the current user. The username and API key you use to authenticate must be those of the user identified in the endpoint. The endpoint identifies the user by user ID. To retrieve user IDs, see Get All Users in a Group. Note The /users/USER-ID/whitelist resource should not be confused with the /groups/GROUP-ID/whitelist resource, which controls client access to the group\u2019s MongoDB clusters. Endpoints\u00b6 Get the API Whitelist for the Current User\u00b6 GET /api/atlas/v1.0/users/USER-ID/whitelist Get the API Whitelist Entry for a Specified Address or CIDR Block\u00b6 The following retrieves the whitelist entry that contains an ipAddress value that matches IP-ADDRESS. GET /api/atlas/v1.0/users/USER-ID/whitelist/IP-ADDRESS The following retrieves the whitelist entry that contains a cidrBlock value that matches CIDR-BLOCK. Replace the forward slash (/) in the CIDR-notated address range with %2F. For example, specify 1.2.3.4%2F16 for 1.2.3.4/16. GET /api/atlas/v1.0/users/USER-ID/whitelist/CIDR-BLOCK Add Entries to the User\u2019s API Whitelist\u00b6 POST /api/atlas/v1.0/users/USER-ID/whitelist The entity body must be an array of objects, even if it contains only one object. Each object should specify either the cidrBlock field or ipAddress field, but not both. If an address is already in the whitelist, it will be ignored. If you specify a single IP address with the /32 subnet mask, Atlas does not store the /32, as the /32 does not change the address. For example, an address of 12.34.56.78 is the same as 12.34.56.78/32. Delete an Entry from the User\u2019s API Whitelist\u00b6 DELETE /api/atlas/v1.0/users/USER-ID/whitelist/IP-ADDRESS DELETE /api/atlas/v1.0/users/USER-ID/whitelist/CIDR-BLOCK You cannot remove your current IP address from the whitelist. Sample Entity\u00b6 { \"cidrBlock\" : \"1.2.3.4/16\", \"created\": \"2016-08-02T12:34:56Z\", \"ipAddress\": \"1.2.3.4\", \"lastUsed\" : \"2016-08-23T15:42:50Z\", \"lastUsedAddress\" : \"1.2.3.4\", \"count\": 19 } Entity Fields\u00b6 Name Type Description cidrBlock string A CIDR-notated range of IP addresses. Entering 0.0.0.0/0 gives unrestricted access to whitelisted operations. created date The date this IP address was added to the whitelist. ipAddress string A whitelisted IP address. lastUsed date The date of the most recent request that originated from this IP address. Note that this field is only updated when a resource that is protected by the whitelist is accessed. lastUsedAddress string The last call to the API was issued from this address. count integer The total number of requests that originated from this IP address. Note that this field is only updated when a resource that is protected by the whitelist is accessed. Links\u00b6 Relation Description self Me http://mms.mongodb.com/user The user that owns this whitelist. Examples\u00b6 Get the API Whitelist for the Current User\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/users/5356823b3004dee37132bb7b/whitelist\" Response\u00b6 HTTP/1.1 200 OK { \"results\" : [ { \"cidrBlock\" : \"6.7.8.9/30\", \"count\" : 2, \"created\" : \"2016-08-02T16:17:44Z\", \"lastUsed\" : \"2016-08-19T14:15:52Z\", \"lastUsedAddress\" : \"6.7.8.7\", \"links\" : [ ... ] }, { \"cidrBlock\" : \"1.2.3.4/32\", \"count\" : 9, \"created\" : \"2016-08-02T14:46:14Z\", \"ipAddress\" : \"1.2.3.4\", \"lastUsed\" : \"2016-08-24T15:42:23Z\", \"lastUsedAddress\" : \"1.2.3.4\", \"links\" : [ ... ] } ], \"totalCount\" : 2, \"links\" : [ ... ] } Get the API Whitelist Entry for a Specified Address or CIDR Block\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/users/5356823b3004dee37132bb7b/whitelist/12.34.56.78\" Response\u00b6 HTTP/1.1 200 OK { \"cidrBlock\" : \"12.34.56.78/32\", \"ipAddress\" : \"12.34.56.78\", \"created\" : \"2016-08-18T16:17:44Z\", \"count\" : 4, \"links\" : [ ... ] } Add Entries to the User\u2019s API Whitelist\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" -H \"Content-Type: application/json\" --digest -X POST \"https://cloud.mongodb.com/api/atlas/v1.0/users/5356823b3004dee37132bb7b/whitelist\" --data ' [ { \"ipAddress\" : \"76.54.32.10\" }, { \"ipAddress\" : \"2.3.4.5\" } ]' Response\u00b6 HTTP/1.1 201 Created { \"results\" : [ { \"cidrBlock\" : \"12.34.56.78/32\", \"ipAddress\" : \"12.34.56.78\", \"created\" : \"2016-08-18T16:17:44Z\", \"lastUsed\" : \"2016-08-23T19:34:05Z\", \"lastUsedAddress\" : \"12.34.56.78\", \"count\" : 5, \"links\" : [ ... ] }, { \"cidrBlock\" : \"76.54.32.10/32\", \"ipAddress\" : \"76.54.32.10\", \"created\" : \"2016-08-17T19:34:05Z\", \"count\" : 0, \"links\" : [ ... ] }, { \"cidrBlock\" : \"2.3.4.5/32\", \"ipAddress\" : \"2.3.4.5\", \"created\" : \"2016-08-17T19:34:05Z\", \"count\" : 0, \"links\" : [ ... ] } ], \"totalCount\" : 3, \"links\" : [ ... ] } Delete an Entry from the User\u2019s API Whitelist\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest -X DELETE \"https://cloud.mongodb.com/api/atlas/v1.0/users/5356823b3004dee37132bb7b/whitelist/2.3.4.5\" Response\u00b6 HTTP/1.1 200 OK \u2190 Delete an Existing VPC Peering Connection Reference \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/reference/api/whitelist.html",
            "title": "Group IP Whitelist",
            "headings": [
                "Group IP Whitelist\u00b6",
                "Endpoints\u00b6",
                "Get a Group\u2019s IP Whitelist\u00b6",
                "Get the Entry for a Specific Address in a Group\u2019s IP Whitelist\u00b6",
                "Add Entries to a Group\u2019s IP Whitelist\u00b6",
                "Delete an Entry from a Group\u2019s IP Whitelist\u00b6",
                "Sample Entity\u00b6",
                "Entity Fields\u00b6",
                "Links\u00b6",
                "Examples\u00b6",
                "Get a Group\u2019s IP Whitelist\u00b6",
                "Get the Entry for a Specific Address in a Group\u2019s IP Whitelist\u00b6",
                "Add Entries to a Group\u2019s IP Whitelist\u00b6",
                "Delete an Entry from a Group\u2019s IP Whitelist\u00b6"
            ],
            "text": "API > API Resources > Group IP Whitelist Group IP Whitelist\u00b6 On this page Endpoints Sample Entity Entity Fields Links Examples The /groups/GROUP-ID/whitelist resource retrieves and updates your group\u2019s IP whitelist, which controls client access to your group\u2019s MongoDB clusters. Clients can connect to clusters only from IP addresses on the whitelist. Note The /groups/GROUP-ID/whitelist should not be confused with the /users/USER-ID/whitelist resource, which controls access to a user\u2019s API whitelist. Endpoints\u00b6 Get a Group\u2019s IP Whitelist\u00b6 GET /api/atlas/v1.0/groups/GROUP-ID/whitelist Get the Entry for a Specific Address in a Group\u2019s IP Whitelist\u00b6 GET /api/atlas/v1.0/groups/GROUP-ID/whitelist/IP-ADDRESS-ENTRY If the entry includes a subnet mask, use the URL-encoded value for the forward slash (/). For example, for an entry of 1.2.3.4/5, use 1.2.3.4%2F5. Add Entries to a Group\u2019s IP Whitelist\u00b6 POST /api/atlas/v1.0/groups/GROUP-ID/whitelist The entity body must be an array of entry objects, even if you are adding only one entry. If an IP address is already in the whitelist, you will get an error. When setting ipAddress, if you specify a single IP address and add the /32 subnet mask, Atlas does not store the /32 because a /32 subnet mask does not change the address. For example, an address of 12.34.56.78/32 is the same as 12.34.56.78. To add or update the comment field for an existing whitelist entry, specify the either the ipAddress or the cidrBlock of the entry and the comment in the entity body passed to this endpoint. To remove the comment field for an existing whitelist entry, set comment to an empty string or exclude the comment from the entity body. Delete an Entry from a Group\u2019s IP Whitelist\u00b6 DELETE /api/atlas/v1.0/groups/GROUP-ID/whitelist/IP-ADDRESS-ENTRY If the entry includes a subnet mask, use the URL-encoded value for the forward slash (/). For example, for an entry of 1.2.3.4/5, use 1.2.3.4%2F5. Sample Entity\u00b6 { cidrBlock: \"1.2.3.4/32\", ipAddress: \"1.2.3.4\", groupId: \"123abc\", comment: \"Comment on entry\" } Entity Fields\u00b6 Name Type Description cidrBlock string The whitelist entry in CIDR notation. ipAddress string The whitelisted IP address. This attribute will not be present if the whitelist entry is a CIDR block (e.g., 1.2.3.4/28). groupId string ID of the group containing the whitelist entry. comment string The comment to associate with the whitelist entry. Links\u00b6 Relation Description self Me http://mms.mongodb.com/group The group containing the whitelist entry. Examples\u00b6 Get a Group\u2019s IP Whitelist\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/whitelist\" Response\u00b6 HTTP/1.1 200 OK { \"links\" : [ ... ], \"results\" : [ { \"cidrBlock\" : \"100.10.100.10/32\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"ipAddress\" : \"100.10.100.10\", \"comment\" : \"Remote Office NA-West\" \"links\" : [ ... ] }, ... ], \"totalCount\" : 2 } Get the Entry for a Specific Address in a Group\u2019s IP Whitelist\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/whitelist/100.10.100.10%2F32\" Response\u00b6 HTTP/1.1 200 OK { \"cidrBlock\" : \"100.10.100.10/32\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"ipAddress\" : \"100.10.100.10\", \"comment\" : \"Remote Office NA-West\" \"links\" : [ ... ] } Add Entries to a Group\u2019s IP Whitelist\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest -H \"Content-Type: application/json\" -X POST \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5759c4a4e4b0b1f3902bb6c9/whitelist\" --data ' [ { \"ipAddress\" : \"76.54.32.10\", \"comment\" : \"Headquarter\" }, { \"cidrBlock\": \"72.53.34.15/28\", \"comment\" : \"Remote Office NA-East\" } ]' Response\u00b6 HTTP/1.1 201 Created { \"links\" : [ ... ], \"results\" : [ { \"cidrBlock\" : \"76.54.32.10/32\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"ipAddress\" : \"76.54.32.10\", \"comment\" : \"Headquarters\" \"links\" : [ ... ] }, { \"cidrBlock\" : \"72.53.34.15/28\", \"groupId\" : \"5356823b3794dee37132bb7b\", \"comment\" : \"Remote Office NA-East\" \"links\" : [ ... ] }, ... ], \"totalCount\" : 6 } Delete an Entry from a Group\u2019s IP Whitelist\u00b6 Request\u00b6 curl -i -u \"username:apiKey\" --digest -X DELETE \"https://cloud.mongodb.com/api/atlas/v1.0/groups/5356823b3794dee37132bb7b/whitelist/72.53.34.15\" Response\u00b6 HTTP/1.1 200 OK {} \u2190 Root Database Users \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "",
            "tags": ""
        },
        {
            "slug": "/tutorial/transition-free-tier-to-paid.html",
            "title": "Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster",
            "headings": [
                "Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster\u00b6",
                "Considerations\u00b6",
                "mongodump and mongorestore version\u00b6",
                "Indexes\u00b6",
                "Procedure\u00b6",
                "Deploy a new Atlas cluster.\u00b6",
                "Add the required IP addresses to the Atlas group whitelist.\u00b6",
                "Create MongoDB Users for backup and restore.\u00b6",
                "Copy and execute the following command.\u00b6",
                "Execute the combined mongodump and mongorestore command.\u00b6",
                "Remove the MongoDB users created for the migration process.\u00b6"
            ],
            "text": "Import Data into Cluster > Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster Migrate Data from an M0 (Free Tier) Cluster to a Paid Cluster\u00b6 On this page Considerations Procedure This procedure uses the mongodump and mongorestore tools to migrate data from a Atlas Free Tier cluster to a Atlas Paid Tier cluster. Considerations\u00b6 mongodump and mongorestore version\u00b6 Use the 3.4 versions of the mongodump and mongorestore tools for this procedure. To download the tools, see http://www.mongodb.com/download-center. Indexes\u00b6 mongodump captures any configured indexes, but does not dump the indexed data. The destination Paid Tier cluster performs foreground index builds of any configured indexes once the migration procedure completes. You may see lower query performance while the Paid Tier cluster rebuilds any configured indexes. Procedure\u00b6 Note If using a Windows machine to execute this procedure, use mongodump.exe and mongorestore.exe. You must be logged in to a Atlas account associated to the Free Tier cluster for this procedure. To log into Atlas, go to https://www.cloud.mongodb.com and enter your credentials. 1 Deploy a new Atlas cluster.\u00b6 If you already have an Atlas Paid Tier cluster as a migration target, skip this step. Click the Groups dropdown and select the Atlas group. Click Clusters. Click Add New Cluster. Configure your new cluster. Ensure MongoDB Version is set to 3.4. Click Continue to Payment. Enter your preferred payment method. Click Confirm & Deploy. For complete documentation on creating a new cluster, see Create a Cluster. Continue to the next step once Atlas completes deployment of the new cluster. 2 Add the required IP addresses to the Atlas group whitelist.\u00b6 Click Clusters. Click Security. Click IP Whitelist. Click Add IP Address. Enter the IP address or CIDR block corresponding to the machine executing the mongodump and mongorestore programs. For complete documentation on IP Whitelisting, see Add Entries to the Whitelist If the Free Tier and Paid Tier clusters are in different Atlas groups, you must perform this step in each group. 3 Create MongoDB Users for backup and restore.\u00b6 Click Clusters. Click Security. Click Users. Click Add New User. Create a new user named Migrate and assign it the Atlas Admin role. For complete documentation on configuring MongoDB users in Atlas, see Add MongoDB Users. If the Free Tier and Paid Tier clusters are in different Atlas groups, you must perform this step in each group. 4 Copy and execute the following command.\u00b6 Copy the following command into a text editor: mongodump --host <hostSource> --archive --ssl -u <sourceUsername> -p <sourcePassword> --authenticationDatabase admin --oplog | mongorestore --host <hostDestination> --ssl -u <destinationUser> -p <destinationPassword> --authenticationDatabase admin --archive --oplogReplay This command uses mongodump to create a point-in-time data dump of the Free Tier cluster. It then pipes the output of mongodump to mongorestore, which restores the data onto the target Paid Tier cluster. Replace the <hostSource> with the host information of the Free Tier cluster. To retrieve the host information, click the Connect button for the Free Tier cluster. Specify the host information using the replica set name as the prefix, followed by a forward slash and a comma separated list of each replica set member. For example: myAtlasFreeTier/freetier.example.net:27017,freetier2.example.net:27017,freetier3.example.net:27017 Replace the <sourceUsername> with the username of the MongoDB user you created in the previous step. If the Free Tier and Paid Tier clusters are in different Atlas groups, specify the user you created for the Free Tier group. Replace the <sourcePassword> with the password of the MongoDB user you created in the previous step. If the Free Tier and Paid Tier cluster are in different Atlas groups, specify the password for the Free Tier user. Replace the <hostDestination> with the host information of the Paid Tier cluster. To retrieve the host information, click the Connect button for the Paid Tier cluster. If the Paid Tier cluster is a replica set, specify the host information using the replica set name as the prefix, followed by a forward slash and a comma separated list of each replica set member. For example: myAtlasPaidTier/paidtier.example.net:27017,paidtier2.example.net:27017,paidtier3.example.net:27017 Replace the <destinationUsername> with the username of the MongoDB user you created in the previous step. If the Free Tier and Paid Tier clusters are in different Atlas groups, specify the user you created for the Paid Tier group. Replace the <destinationPassword> with the password of the MongoDB user you created in the previous step. If the Free Tier and Paid Tier cluster are in different Atlas groups, specify the password for the Paid Tier user. Example mongodump --host myAtlasFreeTier/freetier.example.net:27017,freetier2.example.net:27017,freetier3.example.net:27017 --archive --ssl -u Migrate -p migratepwd --authenticationDatabase admin --oplog | mongorestore --host myAtlasPaidTier/paidtier.example.net:27017,paidtier2.example.net:27017,paidtier3.example.net:27017 --ssl -u Migrate -p migratepwd --authenticationDatabase admin --archive --oplogReplay 5 Execute the combined mongodump and mongorestore command.\u00b6 Important If possible, stop any writes to the Free Tier cluster before this step. Writes that occur after mongodump completes dumping data are not reflected in the Paid Tier cluster. At the completion of this step, update your applications to point to the Paid Tier cluster and resume normal read and write operations. Copy the code created in the previous step from your text editor into a shell and execute it. When the process completes, the Paid Tier cluster reflects the state of the Free Tier cluster when the mongodump process completed the dump. 6 Remove the MongoDB users created for the migration process.\u00b6 Click Clusters. Click Security. Click Users. Click Delete for the user you created as part of this procedure. If the Free Tier and Paid Tier clusters are in different Atlas groups, you must perform this step in each group. \u2190 Load File with mongoimport Scale a Cluster \u2192 \u00a9 MongoDB, Inc 2011-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.",
            "preview": "This procedure uses the mongodump and mongorestore tools to migrate data from a Atlas Free Tier cluster to a Atlas Paid Tier cluster.",
            "tags": ""
        }
    ]
}